// Code generated by protoc-gen-wrapper. DO NOT EDIT.

package gen

import (
	wrap "github.com/smart-core-os/sc-golang/pkg/wrap"
	grpc "google.golang.org/grpc"
)

// WrapAccountInfo	adapts a AccountInfoServer	and presents it as a AccountInfoClient
func WrapAccountInfo(server AccountInfoServer) *AccountInfoWrapper {
	conn := wrap.ServerToClient(AccountInfo_ServiceDesc, server)
	client := NewAccountInfoClient(conn)
	return &AccountInfoWrapper{
		AccountInfoClient: client,
		server:            server,
		conn:              conn,
		desc:              AccountInfo_ServiceDesc,
	}
}

type AccountInfoWrapper struct {
	AccountInfoClient

	server AccountInfoServer
	conn   grpc.ClientConnInterface
	desc   grpc.ServiceDesc
}

// UnwrapServer returns the underlying server instance.
func (w *AccountInfoWrapper) UnwrapServer() AccountInfoServer {
	return w.server
}

// Unwrap implements wrap.Unwrapper and returns the underlying server instance as an unknown type.
func (w *AccountInfoWrapper) Unwrap() any {
	return w.UnwrapServer()
}

func (w *AccountInfoWrapper) UnwrapService() (grpc.ClientConnInterface, grpc.ServiceDesc) {
	return w.conn, w.desc
}
