// Code generated by protoc-gen-wrapper. DO NOT EDIT.

package gen

import (
	"github.com/smart-core-os/sc-golang/pkg/wrap"
)

// WrapMeterInfo	adapts a gen.MeterInfoServer	and presents it as a gen.MeterInfoClient
func WrapMeterInfo(server MeterInfoServer) MeterInfoClient {
	conn := wrap.ServerToClient(MeterInfo_ServiceDesc, server)
	client := NewMeterInfoClient(conn)
	return &meterInfoWrapper{
		MeterInfoClient: client,
		server:          server,
	}
}

type meterInfoWrapper struct {
	MeterInfoClient

	server MeterInfoServer
}

// compile time check that we implement the interface we need
var _ MeterInfoClient = (*meterInfoWrapper)(nil)

// UnwrapServer returns the underlying server instance.
func (w *meterInfoWrapper) UnwrapServer() MeterInfoServer {
	return w.server
}

// Unwrap implements wrap.Unwrapper and returns the underlying server instance as an unknown type.
func (w *meterInfoWrapper) Unwrap() any {
	return w.UnwrapServer()
}
