// Code generated by protoc-gen-wrapper. DO NOT EDIT.

package gen

import (
	context "context"
	grpc "google.golang.org/grpc"
)

// WrapMeterInfo	adapts a MeterInfoServer	and presents it as a MeterInfoClient
func WrapMeterInfo(server MeterInfoServer) MeterInfoClient {
	return &meterInfoWrapper{server}
}

type meterInfoWrapper struct {
	server MeterInfoServer
}

// compile time check that we implement the interface we need
var _ MeterInfoClient = (*meterInfoWrapper)(nil)

// UnwrapServer returns the underlying server instance.
func (w *meterInfoWrapper) UnwrapServer() MeterInfoServer {
	return w.server
}

// Unwrap implements wrap.Unwrapper and returns the underlying server instance as an unknown type.
func (w *meterInfoWrapper) Unwrap() any {
	return w.UnwrapServer()
}

func (w *meterInfoWrapper) DescribeMeterReading(ctx context.Context, req *DescribeMeterReadingRequest, _ ...grpc.CallOption) (*MeterReadingSupport, error) {
	return w.server.DescribeMeterReading(ctx, req)
}
