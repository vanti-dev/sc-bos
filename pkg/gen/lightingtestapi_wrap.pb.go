// Code generated by protoc-gen-wrapper. DO NOT EDIT.

package gen

import (
	wrap "github.com/smart-core-os/sc-golang/pkg/wrap"
	grpc "google.golang.org/grpc"
)

// WrapLightingTestApi	adapts a gen.LightingTestApiServer	and presents it as a gen.LightingTestApiClient
func WrapLightingTestApi(server LightingTestApiServer) *LightingTestApiWrapper {
	conn := wrap.ServerToClient(LightingTestApi_ServiceDesc, server)
	client := NewLightingTestApiClient(conn)
	return &LightingTestApiWrapper{
		LightingTestApiClient: client,
		server:                server,
		conn:                  conn,
		desc:                  LightingTestApi_ServiceDesc,
	}
}

type LightingTestApiWrapper struct {
	LightingTestApiClient

	server LightingTestApiServer
	conn   grpc.ClientConnInterface
	desc   grpc.ServiceDesc
}

// UnwrapServer returns the underlying server instance.
func (w *LightingTestApiWrapper) UnwrapServer() LightingTestApiServer {
	return w.server
}

// Unwrap implements wrap.Unwrapper and returns the underlying server instance as an unknown type.
func (w *LightingTestApiWrapper) Unwrap() any {
	return w.UnwrapServer()
}

func (w *LightingTestApiWrapper) UnwrapService() (grpc.ClientConnInterface, grpc.ServiceDesc) {
	return w.conn, w.desc
}
