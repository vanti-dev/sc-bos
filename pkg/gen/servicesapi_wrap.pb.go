// Code generated by protoc-gen-wrapper. DO NOT EDIT.

package gen

import (
	"github.com/smart-core-os/sc-golang/pkg/wrap"
)

// WrapServicesApi	adapts a gen.ServicesApiServer	and presents it as a gen.ServicesApiClient
func WrapServicesApi(server ServicesApiServer) ServicesApiClient {
	conn := wrap.ServerToClient(ServicesApi_ServiceDesc, server)
	client := NewServicesApiClient(conn)
	return &servicesApiWrapper{
		ServicesApiClient: client,
		server:            server,
	}
}

type servicesApiWrapper struct {
	ServicesApiClient

	server ServicesApiServer
}

// compile time check that we implement the interface we need
var _ ServicesApiClient = (*servicesApiWrapper)(nil)

// UnwrapServer returns the underlying server instance.
func (w *servicesApiWrapper) UnwrapServer() ServicesApiServer {
	return w.server
}

// Unwrap implements wrap.Unwrapper and returns the underlying server instance as an unknown type.
func (w *servicesApiWrapper) Unwrap() any {
	return w.UnwrapServer()
}
