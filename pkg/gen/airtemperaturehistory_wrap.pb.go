// Code generated by protoc-gen-wrapper. DO NOT EDIT.

package gen

import (
	context "context"
	grpc "google.golang.org/grpc"
)

// WrapAirTemperatureHistory	adapts a AirTemperatureHistoryServer	and presents it as a AirTemperatureHistoryClient
func WrapAirTemperatureHistory(server AirTemperatureHistoryServer) AirTemperatureHistoryClient {
	return &airTemperatureHistoryWrapper{server}
}

type airTemperatureHistoryWrapper struct {
	server AirTemperatureHistoryServer
}

// compile time check that we implement the interface we need
var _ AirTemperatureHistoryClient = (*airTemperatureHistoryWrapper)(nil)

// UnwrapServer returns the underlying server instance.
func (w *airTemperatureHistoryWrapper) UnwrapServer() AirTemperatureHistoryServer {
	return w.server
}

// Unwrap implements wrap.Unwrapper and returns the underlying server instance as an unknown type.
func (w *airTemperatureHistoryWrapper) Unwrap() any {
	return w.UnwrapServer()
}

func (w *airTemperatureHistoryWrapper) ListAirTemperatureHistory(ctx context.Context, req *ListAirTemperatureHistoryRequest, _ ...grpc.CallOption) (*ListAirTemperatureHistoryResponse, error) {
	return w.server.ListAirTemperatureHistory(ctx, req)
}
