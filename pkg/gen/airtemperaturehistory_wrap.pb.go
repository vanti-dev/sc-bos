// Code generated by protoc-gen-wrapper. DO NOT EDIT.

package gen

import (
	"github.com/smart-core-os/sc-golang/pkg/wrap"
)

// WrapAirTemperatureHistory	adapts a gen.AirTemperatureHistoryServer	and presents it as a gen.AirTemperatureHistoryClient
func WrapAirTemperatureHistory(server AirTemperatureHistoryServer) AirTemperatureHistoryClient {
	conn := wrap.ServerToClient(AirTemperatureHistory_ServiceDesc, server)
	client := NewAirTemperatureHistoryClient(conn)
	return &airTemperatureHistoryWrapper{
		AirTemperatureHistoryClient: client,
		server:                      server,
	}
}

type airTemperatureHistoryWrapper struct {
	AirTemperatureHistoryClient

	server AirTemperatureHistoryServer
}

// compile time check that we implement the interface we need
var _ AirTemperatureHistoryClient = (*airTemperatureHistoryWrapper)(nil)

// UnwrapServer returns the underlying server instance.
func (w *airTemperatureHistoryWrapper) UnwrapServer() AirTemperatureHistoryServer {
	return w.server
}

// Unwrap implements wrap.Unwrapper and returns the underlying server instance as an unknown type.
func (w *airTemperatureHistoryWrapper) Unwrap() any {
	return w.UnwrapServer()
}
