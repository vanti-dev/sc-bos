// Code generated by protoc-gen-wrapper. DO NOT EDIT.

package gen

import (
	wrap "github.com/smart-core-os/sc-golang/pkg/wrap"
	grpc "google.golang.org/grpc"
)

// WrapAirTemperatureHistory	adapts a gen.AirTemperatureHistoryServer	and presents it as a gen.AirTemperatureHistoryClient
func WrapAirTemperatureHistory(server AirTemperatureHistoryServer) *AirTemperatureHistoryWrapper {
	conn := wrap.ServerToClient(AirTemperatureHistory_ServiceDesc, server)
	client := NewAirTemperatureHistoryClient(conn)
	return &AirTemperatureHistoryWrapper{
		AirTemperatureHistoryClient: client,
		server:                      server,
		conn:                        conn,
		desc:                        AirTemperatureHistory_ServiceDesc,
	}
}

type AirTemperatureHistoryWrapper struct {
	AirTemperatureHistoryClient

	server AirTemperatureHistoryServer
	conn   grpc.ClientConnInterface
	desc   grpc.ServiceDesc
}

// UnwrapServer returns the underlying server instance.
func (w *AirTemperatureHistoryWrapper) UnwrapServer() AirTemperatureHistoryServer {
	return w.server
}

// Unwrap implements wrap.Unwrapper and returns the underlying server instance as an unknown type.
func (w *AirTemperatureHistoryWrapper) Unwrap() any {
	return w.UnwrapServer()
}

func (w *AirTemperatureHistoryWrapper) UnwrapService() (grpc.ClientConnInterface, grpc.ServiceDesc) {
	return w.conn, w.desc
}
