// Code generated by protoc-gen-wrapper. DO NOT EDIT.

package gen

import (
	"github.com/smart-core-os/sc-golang/pkg/wrap"
)

// WrapButtonApi	adapts a gen.ButtonApiServer	and presents it as a gen.ButtonApiClient
func WrapButtonApi(server ButtonApiServer) ButtonApiClient {
	conn := wrap.ServerToClient(ButtonApi_ServiceDesc, server)
	client := NewButtonApiClient(conn)
	return &buttonApiWrapper{
		ButtonApiClient: client,
		server:          server,
	}
}

type buttonApiWrapper struct {
	ButtonApiClient

	server ButtonApiServer
}

// compile time check that we implement the interface we need
var _ ButtonApiClient = (*buttonApiWrapper)(nil)

// UnwrapServer returns the underlying server instance.
func (w *buttonApiWrapper) UnwrapServer() ButtonApiServer {
	return w.server
}

// Unwrap implements wrap.Unwrapper and returns the underlying server instance as an unknown type.
func (w *buttonApiWrapper) Unwrap() any {
	return w.UnwrapServer()
}
