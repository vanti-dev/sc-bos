// Code generated by protoc-gen-wrapper. DO NOT EDIT.

package gen

import (
	wrap "github.com/smart-core-os/sc-golang/pkg/wrap"
	grpc "google.golang.org/grpc"
)

// WrapButtonApi	adapts a ButtonApiServer	and presents it as a ButtonApiClient
func WrapButtonApi(server ButtonApiServer) *ButtonApiWrapper {
	conn := wrap.ServerToClient(ButtonApi_ServiceDesc, server)
	client := NewButtonApiClient(conn)
	return &ButtonApiWrapper{
		ButtonApiClient: client,
		server:          server,
		conn:            conn,
		desc:            ButtonApi_ServiceDesc,
	}
}

type ButtonApiWrapper struct {
	ButtonApiClient

	server ButtonApiServer
	conn   grpc.ClientConnInterface
	desc   grpc.ServiceDesc
}

// UnwrapServer returns the underlying server instance.
func (w *ButtonApiWrapper) UnwrapServer() ButtonApiServer {
	return w.server
}

// Unwrap implements wrap.Unwrapper and returns the underlying server instance as an unknown type.
func (w *ButtonApiWrapper) Unwrap() any {
	return w.UnwrapServer()
}

func (w *ButtonApiWrapper) UnwrapService() (grpc.ClientConnInterface, grpc.ServiceDesc) {
	return w.conn, w.desc
}
