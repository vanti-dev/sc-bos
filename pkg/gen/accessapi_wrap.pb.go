// Code generated by protoc-gen-wrapper. DO NOT EDIT.

package gen

import (
	wrap "github.com/smart-core-os/sc-golang/pkg/wrap"
)

// WrapAccessApi	adapts a AccessApiServer	and presents it as a AccessApiClient
func WrapAccessApi(server AccessApiServer) AccessApiClient {
	conn := wrap.ServerToClient(AccessApi_ServiceDesc, server)
	client := NewAccessApiClient(conn)
	return &accessApiWrapper{
		AccessApiClient: client,
		server:          server,
	}
}

type accessApiWrapper struct {
	AccessApiClient

	server AccessApiServer
}

// compile time check that we implement the interface we need
var _ AccessApiClient = (*accessApiWrapper)(nil)

// UnwrapServer returns the underlying server instance.
func (w *accessApiWrapper) UnwrapServer() AccessApiServer {
	return w.server
}

// Unwrap implements wrap.Unwrapper and returns the underlying server instance as an unknown type.
func (w *accessApiWrapper) Unwrap() any {
	return w.UnwrapServer()
}
