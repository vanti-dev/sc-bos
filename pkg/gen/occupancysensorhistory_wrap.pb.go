// Code generated by protoc-gen-wrapper. DO NOT EDIT.

package gen

import (
	context "context"
	grpc "google.golang.org/grpc"
)

// WrapOccupancySensorHistory	adapts a OccupancySensorHistoryServer	and presents it as a OccupancySensorHistoryClient
func WrapOccupancySensorHistory(server OccupancySensorHistoryServer) OccupancySensorHistoryClient {
	return &occupancySensorHistoryWrapper{server}
}

type occupancySensorHistoryWrapper struct {
	server OccupancySensorHistoryServer
}

// compile time check that we implement the interface we need
var _ OccupancySensorHistoryClient = (*occupancySensorHistoryWrapper)(nil)

// UnwrapServer returns the underlying server instance.
func (w *occupancySensorHistoryWrapper) UnwrapServer() OccupancySensorHistoryServer {
	return w.server
}

// Unwrap implements wrap.Unwrapper and returns the underlying server instance as an unknown type.
func (w *occupancySensorHistoryWrapper) Unwrap() any {
	return w.UnwrapServer()
}

func (w *occupancySensorHistoryWrapper) ListOccupancyHistory(ctx context.Context, req *ListOccupancyHistoryRequest, _ ...grpc.CallOption) (*ListOccupancyHistoryResponse, error) {
	return w.server.ListOccupancyHistory(ctx, req)
}
