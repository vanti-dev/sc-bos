// Code generated by protoc-gen-wrapper. DO NOT EDIT.

package gen

import (
	"github.com/smart-core-os/sc-golang/pkg/wrap"
)

// WrapOccupancySensorHistory	adapts a gen.OccupancySensorHistoryServer	and presents it as a gen.OccupancySensorHistoryClient
func WrapOccupancySensorHistory(server OccupancySensorHistoryServer) OccupancySensorHistoryClient {
	conn := wrap.ServerToClient(OccupancySensorHistory_ServiceDesc, server)
	client := NewOccupancySensorHistoryClient(conn)
	return &occupancySensorHistoryWrapper{
		OccupancySensorHistoryClient: client,
		server:                       server,
	}
}

type occupancySensorHistoryWrapper struct {
	OccupancySensorHistoryClient

	server OccupancySensorHistoryServer
}

// compile time check that we implement the interface we need
var _ OccupancySensorHistoryClient = (*occupancySensorHistoryWrapper)(nil)

// UnwrapServer returns the underlying server instance.
func (w *occupancySensorHistoryWrapper) UnwrapServer() OccupancySensorHistoryServer {
	return w.server
}

// Unwrap implements wrap.Unwrapper and returns the underlying server instance as an unknown type.
func (w *occupancySensorHistoryWrapper) Unwrap() any {
	return w.UnwrapServer()
}
