// Code generated by protoc-gen-wrapper. DO NOT EDIT.

package gen

import (
	context "context"
	grpc "google.golang.org/grpc"
)

// WrapWasteInfo	adapts a WasteInfoServer	and presents it as a WasteInfoClient
func WrapWasteInfo(server WasteInfoServer) WasteInfoClient {
	return &wasteInfoWrapper{server}
}

type wasteInfoWrapper struct {
	server WasteInfoServer
}

// compile time check that we implement the interface we need
var _ WasteInfoClient = (*wasteInfoWrapper)(nil)

// UnwrapServer returns the underlying server instance.
func (w *wasteInfoWrapper) UnwrapServer() WasteInfoServer {
	return w.server
}

// Unwrap implements wrap.Unwrapper and returns the underlying server instance as an unknown type.
func (w *wasteInfoWrapper) Unwrap() any {
	return w.UnwrapServer()
}

func (w *wasteInfoWrapper) DescribeWasteRecord(ctx context.Context, req *DescribeWasteRecordRequest, _ ...grpc.CallOption) (*WasteRecordSupport, error) {
	return w.server.DescribeWasteRecord(ctx, req)
}
