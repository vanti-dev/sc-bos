// Code generated by protoc-gen-wrapper. DO NOT EDIT.

package gen

import (
	wrap "github.com/smart-core-os/sc-golang/pkg/wrap"
	grpc "google.golang.org/grpc"
)

// WrapRaiseLowerApi	adapts a RaiseLowerApiServer	and presents it as a RaiseLowerApiClient
func WrapRaiseLowerApi(server RaiseLowerApiServer) *RaiseLowerApiWrapper {
	conn := wrap.ServerToClient(RaiseLowerApi_ServiceDesc, server)
	client := NewRaiseLowerApiClient(conn)
	return &RaiseLowerApiWrapper{
		RaiseLowerApiClient: client,
		server:              server,
		conn:                conn,
		desc:                RaiseLowerApi_ServiceDesc,
	}
}

type RaiseLowerApiWrapper struct {
	RaiseLowerApiClient

	server RaiseLowerApiServer
	conn   grpc.ClientConnInterface
	desc   grpc.ServiceDesc
}

// UnwrapServer returns the underlying server instance.
func (w *RaiseLowerApiWrapper) UnwrapServer() RaiseLowerApiServer {
	return w.server
}

// Unwrap implements wrap.Unwrapper and returns the underlying server instance as an unknown type.
func (w *RaiseLowerApiWrapper) Unwrap() any {
	return w.UnwrapServer()
}

func (w *RaiseLowerApiWrapper) UnwrapService() (grpc.ClientConnInterface, grpc.ServiceDesc) {
	return w.conn, w.desc
}
