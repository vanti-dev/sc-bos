// Code generated by protoc-gen-wrapper. DO NOT EDIT.

package gen

import (
	wrap "github.com/smart-core-os/sc-golang/pkg/wrap"
	grpc "google.golang.org/grpc"
)

// WrapAlertApi	adapts a gen.AlertApiServer	and presents it as a gen.AlertApiClient
func WrapAlertApi(server AlertApiServer) *AlertApiWrapper {
	conn := wrap.ServerToClient(AlertApi_ServiceDesc, server)
	client := NewAlertApiClient(conn)
	return &AlertApiWrapper{
		AlertApiClient: client,
		server:         server,
		conn:           conn,
		desc:           AlertApi_ServiceDesc,
	}
}

type AlertApiWrapper struct {
	AlertApiClient

	server AlertApiServer
	conn   grpc.ClientConnInterface
	desc   grpc.ServiceDesc
}

// UnwrapServer returns the underlying server instance.
func (w *AlertApiWrapper) UnwrapServer() AlertApiServer {
	return w.server
}

// Unwrap implements wrap.Unwrapper and returns the underlying server instance as an unknown type.
func (w *AlertApiWrapper) Unwrap() any {
	return w.UnwrapServer()
}

func (w *AlertApiWrapper) UnwrapService() (grpc.ClientConnInterface, grpc.ServiceDesc) {
	return w.conn, w.desc
}
