// Code generated by protoc-gen-wrapper. DO NOT EDIT.

package gen

import (
	"github.com/smart-core-os/sc-golang/pkg/wrap"
)

// WrapHistoryAdminApi	adapts a gen.HistoryAdminApiServer	and presents it as a gen.HistoryAdminApiClient
func WrapHistoryAdminApi(server HistoryAdminApiServer) HistoryAdminApiClient {
	conn := wrap.ServerToClient(HistoryAdminApi_ServiceDesc, server)
	client := NewHistoryAdminApiClient(conn)
	return &historyAdminApiWrapper{
		HistoryAdminApiClient: client,
		server:                server,
	}
}

type historyAdminApiWrapper struct {
	HistoryAdminApiClient

	server HistoryAdminApiServer
}

// compile time check that we implement the interface we need
var _ HistoryAdminApiClient = (*historyAdminApiWrapper)(nil)

// UnwrapServer returns the underlying server instance.
func (w *historyAdminApiWrapper) UnwrapServer() HistoryAdminApiServer {
	return w.server
}

// Unwrap implements wrap.Unwrapper and returns the underlying server instance as an unknown type.
func (w *historyAdminApiWrapper) Unwrap() any {
	return w.UnwrapServer()
}
