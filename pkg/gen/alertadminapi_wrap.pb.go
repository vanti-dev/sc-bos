// Code generated by protoc-gen-wrapper. DO NOT EDIT.

package gen

import (
	"github.com/smart-core-os/sc-golang/pkg/wrap"
)

// WrapAlertAdminApi	adapts a gen.AlertAdminApiServer	and presents it as a gen.AlertAdminApiClient
func WrapAlertAdminApi(server AlertAdminApiServer) AlertAdminApiClient {
	conn := wrap.ServerToClient(AlertAdminApi_ServiceDesc, server)
	client := NewAlertAdminApiClient(conn)
	return &alertAdminApiWrapper{
		AlertAdminApiClient: client,
		server:              server,
	}
}

type alertAdminApiWrapper struct {
	AlertAdminApiClient

	server AlertAdminApiServer
}

// compile time check that we implement the interface we need
var _ AlertAdminApiClient = (*alertAdminApiWrapper)(nil)

// UnwrapServer returns the underlying server instance.
func (w *alertAdminApiWrapper) UnwrapServer() AlertAdminApiServer {
	return w.server
}

// Unwrap implements wrap.Unwrapper and returns the underlying server instance as an unknown type.
func (w *alertAdminApiWrapper) Unwrap() any {
	return w.UnwrapServer()
}
