// Code generated by protoc-gen-wrapper. DO NOT EDIT.

package gen

import (
	wrap "github.com/smart-core-os/sc-golang/pkg/wrap"
	grpc "google.golang.org/grpc"
)

// WrapAlertAdminApi	adapts a gen.AlertAdminApiServer	and presents it as a gen.AlertAdminApiClient
func WrapAlertAdminApi(server AlertAdminApiServer) *AlertAdminApiWrapper {
	conn := wrap.ServerToClient(AlertAdminApi_ServiceDesc, server)
	client := NewAlertAdminApiClient(conn)
	return &AlertAdminApiWrapper{
		AlertAdminApiClient: client,
		server:              server,
		conn:                conn,
		desc:                AlertAdminApi_ServiceDesc,
	}
}

type AlertAdminApiWrapper struct {
	AlertAdminApiClient

	server AlertAdminApiServer
	conn   grpc.ClientConnInterface
	desc   grpc.ServiceDesc
}

// UnwrapServer returns the underlying server instance.
func (w *AlertAdminApiWrapper) UnwrapServer() AlertAdminApiServer {
	return w.server
}

// Unwrap implements wrap.Unwrapper and returns the underlying server instance as an unknown type.
func (w *AlertAdminApiWrapper) Unwrap() any {
	return w.UnwrapServer()
}

func (w *AlertAdminApiWrapper) UnwrapService() (grpc.ClientConnInterface, grpc.ServiceDesc) {
	return w.conn, w.desc
}
