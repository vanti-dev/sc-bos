// Code generated by protoc-gen-wrapper. DO NOT EDIT.

package gen

import (
	wrap "github.com/smart-core-os/sc-golang/pkg/wrap"
	grpc "google.golang.org/grpc"
)

// WrapAnprCameraApi	adapts a AnprCameraApiServer	and presents it as a AnprCameraApiClient
func WrapAnprCameraApi(server AnprCameraApiServer) *AnprCameraApiWrapper {
	conn := wrap.ServerToClient(AnprCameraApi_ServiceDesc, server)
	client := NewAnprCameraApiClient(conn)
	return &AnprCameraApiWrapper{
		AnprCameraApiClient: client,
		server:              server,
		conn:                conn,
		desc:                AnprCameraApi_ServiceDesc,
	}
}

type AnprCameraApiWrapper struct {
	AnprCameraApiClient

	server AnprCameraApiServer
	conn   grpc.ClientConnInterface
	desc   grpc.ServiceDesc
}

// UnwrapServer returns the underlying server instance.
func (w *AnprCameraApiWrapper) UnwrapServer() AnprCameraApiServer {
	return w.server
}

// Unwrap implements wrap.Unwrapper and returns the underlying server instance as an unknown type.
func (w *AnprCameraApiWrapper) Unwrap() any {
	return w.UnwrapServer()
}

func (w *AnprCameraApiWrapper) UnwrapService() (grpc.ClientConnInterface, grpc.ServiceDesc) {
	return w.conn, w.desc
}
