// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.29.3
// source: sound_sensor.proto

package gen

import (
	types "github.com/smart-core-os/sc-api/go/types"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// SoundLevel represents a sound/noise level.
type SoundLevel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional. The measured sound/noise level, usually in dBA or dB, use Info service to check the unit.
	// Omitted means unknown sound/noise level.
	SoundPressureLevel *float32 `protobuf:"fixed32,1,opt,name=sound_pressure_level,json=soundPressureLevel,proto3,oneof" json:"sound_pressure_level,omitempty"`
}

func (x *SoundLevel) Reset() {
	*x = SoundLevel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sound_sensor_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SoundLevel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SoundLevel) ProtoMessage() {}

func (x *SoundLevel) ProtoReflect() protoreflect.Message {
	mi := &file_sound_sensor_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SoundLevel.ProtoReflect.Descriptor instead.
func (*SoundLevel) Descriptor() ([]byte, []int) {
	return file_sound_sensor_proto_rawDescGZIP(), []int{0}
}

func (x *SoundLevel) GetSoundPressureLevel() float32 {
	if x != nil && x.SoundPressureLevel != nil {
		return *x.SoundPressureLevel
	}
	return 0
}

type SoundLevelSupport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// How a named device supports read/write/pull apis
	ResourceSupport *types.ResourceSupport `protobuf:"bytes,1,opt,name=resource_support,json=resourceSupport,proto3" json:"resource_support,omitempty"`
	// The unit associated with the sound_pressure_level value.
	// Known units:
	//   - dBA - decibels SPL, A-weighted
	//   - dB - decibels SPL, unweighted
	SoundLevelUnit string `protobuf:"bytes,2,opt,name=sound_level_unit,json=soundLevelUnit,proto3" json:"sound_level_unit,omitempty"`
}

func (x *SoundLevelSupport) Reset() {
	*x = SoundLevelSupport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sound_sensor_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SoundLevelSupport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SoundLevelSupport) ProtoMessage() {}

func (x *SoundLevelSupport) ProtoReflect() protoreflect.Message {
	mi := &file_sound_sensor_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SoundLevelSupport.ProtoReflect.Descriptor instead.
func (*SoundLevelSupport) Descriptor() ([]byte, []int) {
	return file_sound_sensor_proto_rawDescGZIP(), []int{1}
}

func (x *SoundLevelSupport) GetResourceSupport() *types.ResourceSupport {
	if x != nil {
		return x.ResourceSupport
	}
	return nil
}

func (x *SoundLevelSupport) GetSoundLevelUnit() string {
	if x != nil {
		return x.SoundLevelUnit
	}
	return ""
}

type GetSoundLevelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ReadMask *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=read_mask,json=readMask,proto3" json:"read_mask,omitempty"`
}

func (x *GetSoundLevelRequest) Reset() {
	*x = GetSoundLevelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sound_sensor_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSoundLevelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSoundLevelRequest) ProtoMessage() {}

func (x *GetSoundLevelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sound_sensor_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSoundLevelRequest.ProtoReflect.Descriptor instead.
func (*GetSoundLevelRequest) Descriptor() ([]byte, []int) {
	return file_sound_sensor_proto_rawDescGZIP(), []int{2}
}

func (x *GetSoundLevelRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetSoundLevelRequest) GetReadMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.ReadMask
	}
	return nil
}

type PullSoundLevelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ReadMask    *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=read_mask,json=readMask,proto3" json:"read_mask,omitempty"`
	UpdatesOnly bool                   `protobuf:"varint,3,opt,name=updates_only,json=updatesOnly,proto3" json:"updates_only,omitempty"`
}

func (x *PullSoundLevelRequest) Reset() {
	*x = PullSoundLevelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sound_sensor_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullSoundLevelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullSoundLevelRequest) ProtoMessage() {}

func (x *PullSoundLevelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sound_sensor_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullSoundLevelRequest.ProtoReflect.Descriptor instead.
func (*PullSoundLevelRequest) Descriptor() ([]byte, []int) {
	return file_sound_sensor_proto_rawDescGZIP(), []int{3}
}

func (x *PullSoundLevelRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PullSoundLevelRequest) GetReadMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.ReadMask
	}
	return nil
}

func (x *PullSoundLevelRequest) GetUpdatesOnly() bool {
	if x != nil {
		return x.UpdatesOnly
	}
	return false
}

type PullSoundLevelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Changes []*PullSoundLevelResponse_Change `protobuf:"bytes,1,rep,name=changes,proto3" json:"changes,omitempty"`
}

func (x *PullSoundLevelResponse) Reset() {
	*x = PullSoundLevelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sound_sensor_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullSoundLevelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullSoundLevelResponse) ProtoMessage() {}

func (x *PullSoundLevelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sound_sensor_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullSoundLevelResponse.ProtoReflect.Descriptor instead.
func (*PullSoundLevelResponse) Descriptor() ([]byte, []int) {
	return file_sound_sensor_proto_rawDescGZIP(), []int{4}
}

func (x *PullSoundLevelResponse) GetChanges() []*PullSoundLevelResponse_Change {
	if x != nil {
		return x.Changes
	}
	return nil
}

type DescribeSoundLevelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DescribeSoundLevelRequest) Reset() {
	*x = DescribeSoundLevelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sound_sensor_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeSoundLevelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeSoundLevelRequest) ProtoMessage() {}

func (x *DescribeSoundLevelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sound_sensor_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeSoundLevelRequest.ProtoReflect.Descriptor instead.
func (*DescribeSoundLevelRequest) Descriptor() ([]byte, []int) {
	return file_sound_sensor_proto_rawDescGZIP(), []int{5}
}

func (x *DescribeSoundLevelRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type PullSoundLevelResponse_Change struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ChangeTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=change_time,json=changeTime,proto3" json:"change_time,omitempty"`
	SoundLevel *SoundLevel            `protobuf:"bytes,3,opt,name=sound_level,json=soundLevel,proto3" json:"sound_level,omitempty"`
}

func (x *PullSoundLevelResponse_Change) Reset() {
	*x = PullSoundLevelResponse_Change{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sound_sensor_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullSoundLevelResponse_Change) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullSoundLevelResponse_Change) ProtoMessage() {}

func (x *PullSoundLevelResponse_Change) ProtoReflect() protoreflect.Message {
	mi := &file_sound_sensor_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullSoundLevelResponse_Change.ProtoReflect.Descriptor instead.
func (*PullSoundLevelResponse_Change) Descriptor() ([]byte, []int) {
	return file_sound_sensor_proto_rawDescGZIP(), []int{4, 0}
}

func (x *PullSoundLevelResponse_Change) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PullSoundLevelResponse_Change) GetChangeTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ChangeTime
	}
	return nil
}

func (x *PullSoundLevelResponse_Change) GetSoundLevel() *SoundLevel {
	if x != nil {
		return x.SoundLevel
	}
	return nil
}

var File_sound_sensor_proto protoreflect.FileDescriptor

var file_sound_sensor_proto_rawDesc = []byte{
	0x0a, 0x12, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x62, 0x6f, 0x73, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x69, 0x6e,
	0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5c, 0x0a, 0x0a, 0x53, 0x6f, 0x75, 0x6e,
	0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x35, 0x0a, 0x14, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x5f,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x02, 0x48, 0x00, 0x52, 0x12, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x50, 0x72, 0x65,
	0x73, 0x73, 0x75, 0x72, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x88, 0x01, 0x01, 0x42, 0x17, 0x0a,
	0x15, 0x5f, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x70, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65,
	0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x8a, 0x01, 0x0a, 0x11, 0x53, 0x6f, 0x75, 0x6e, 0x64,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x4b, 0x0a, 0x10,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x6f, 0x75,
	0x6e, 0x64, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x55,
	0x6e, 0x69, 0x74, 0x22, 0x63, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x37, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x08,
	0x72, 0x65, 0x61, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0x87, 0x01, 0x0a, 0x15, 0x50, 0x75, 0x6c,
	0x6c, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x6d,
	0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x08, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x12,
	0x21, 0x0a, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x4f, 0x6e,
	0x6c, 0x79, 0x22, 0xf8, 0x01, 0x0a, 0x16, 0x50, 0x75, 0x6c, 0x6c, 0x53, 0x6f, 0x75, 0x6e, 0x64,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a,
	0x07, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c,
	0x2e, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x62, 0x6f, 0x73, 0x2e, 0x50,
	0x75, 0x6c, 0x6c, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x07, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x73, 0x1a, 0x95, 0x01, 0x0a, 0x06, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x3a, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x62, 0x6f, 0x73, 0x2e, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x2f, 0x0a,
	0x19, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x32, 0xc6,
	0x01, 0x0a, 0x0e, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x41, 0x70,
	0x69, 0x12, 0x51, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x12, 0x23, 0x2e, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x62,
	0x6f, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x62, 0x6f, 0x73, 0x2e, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x0e, 0x50, 0x75, 0x6c, 0x6c, 0x53, 0x6f, 0x75, 0x6e,
	0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x24, 0x2e, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x62, 0x6f, 0x73, 0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x53, 0x6f, 0x75, 0x6e, 0x64,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x73,
	0x6d, 0x61, 0x72, 0x74, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x62, 0x6f, 0x73, 0x2e, 0x50, 0x75, 0x6c,
	0x6c, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x32, 0x75, 0x0a, 0x0f, 0x53, 0x6f, 0x75, 0x6e, 0x64,
	0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x62, 0x0a, 0x12, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x28, 0x2e, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x62, 0x6f, 0x73,
	0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x6d, 0x61,
	0x72, 0x74, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x62, 0x6f, 0x73, 0x2e, 0x53, 0x6f, 0x75, 0x6e, 0x64,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x00, 0x42, 0x25,
	0x5a, 0x23, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x76, 0x61, 0x6e,
	0x74, 0x69, 0x2d, 0x64, 0x65, 0x76, 0x2f, 0x73, 0x63, 0x2d, 0x62, 0x6f, 0x73, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x67, 0x65, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sound_sensor_proto_rawDescOnce sync.Once
	file_sound_sensor_proto_rawDescData = file_sound_sensor_proto_rawDesc
)

func file_sound_sensor_proto_rawDescGZIP() []byte {
	file_sound_sensor_proto_rawDescOnce.Do(func() {
		file_sound_sensor_proto_rawDescData = protoimpl.X.CompressGZIP(file_sound_sensor_proto_rawDescData)
	})
	return file_sound_sensor_proto_rawDescData
}

var file_sound_sensor_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_sound_sensor_proto_goTypes = []any{
	(*SoundLevel)(nil),                    // 0: smartcore.bos.SoundLevel
	(*SoundLevelSupport)(nil),             // 1: smartcore.bos.SoundLevelSupport
	(*GetSoundLevelRequest)(nil),          // 2: smartcore.bos.GetSoundLevelRequest
	(*PullSoundLevelRequest)(nil),         // 3: smartcore.bos.PullSoundLevelRequest
	(*PullSoundLevelResponse)(nil),        // 4: smartcore.bos.PullSoundLevelResponse
	(*DescribeSoundLevelRequest)(nil),     // 5: smartcore.bos.DescribeSoundLevelRequest
	(*PullSoundLevelResponse_Change)(nil), // 6: smartcore.bos.PullSoundLevelResponse.Change
	(*types.ResourceSupport)(nil),         // 7: smartcore.types.ResourceSupport
	(*fieldmaskpb.FieldMask)(nil),         // 8: google.protobuf.FieldMask
	(*timestamppb.Timestamp)(nil),         // 9: google.protobuf.Timestamp
}
var file_sound_sensor_proto_depIdxs = []int32{
	7, // 0: smartcore.bos.SoundLevelSupport.resource_support:type_name -> smartcore.types.ResourceSupport
	8, // 1: smartcore.bos.GetSoundLevelRequest.read_mask:type_name -> google.protobuf.FieldMask
	8, // 2: smartcore.bos.PullSoundLevelRequest.read_mask:type_name -> google.protobuf.FieldMask
	6, // 3: smartcore.bos.PullSoundLevelResponse.changes:type_name -> smartcore.bos.PullSoundLevelResponse.Change
	9, // 4: smartcore.bos.PullSoundLevelResponse.Change.change_time:type_name -> google.protobuf.Timestamp
	0, // 5: smartcore.bos.PullSoundLevelResponse.Change.sound_level:type_name -> smartcore.bos.SoundLevel
	2, // 6: smartcore.bos.SoundSensorApi.GetSoundLevel:input_type -> smartcore.bos.GetSoundLevelRequest
	3, // 7: smartcore.bos.SoundSensorApi.PullSoundLevel:input_type -> smartcore.bos.PullSoundLevelRequest
	5, // 8: smartcore.bos.SoundSensorInfo.DescribeSoundLevel:input_type -> smartcore.bos.DescribeSoundLevelRequest
	0, // 9: smartcore.bos.SoundSensorApi.GetSoundLevel:output_type -> smartcore.bos.SoundLevel
	4, // 10: smartcore.bos.SoundSensorApi.PullSoundLevel:output_type -> smartcore.bos.PullSoundLevelResponse
	1, // 11: smartcore.bos.SoundSensorInfo.DescribeSoundLevel:output_type -> smartcore.bos.SoundLevelSupport
	9, // [9:12] is the sub-list for method output_type
	6, // [6:9] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_sound_sensor_proto_init() }
func file_sound_sensor_proto_init() {
	if File_sound_sensor_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sound_sensor_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*SoundLevel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sound_sensor_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*SoundLevelSupport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sound_sensor_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*GetSoundLevelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sound_sensor_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*PullSoundLevelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sound_sensor_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*PullSoundLevelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sound_sensor_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*DescribeSoundLevelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sound_sensor_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*PullSoundLevelResponse_Change); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_sound_sensor_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sound_sensor_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_sound_sensor_proto_goTypes,
		DependencyIndexes: file_sound_sensor_proto_depIdxs,
		MessageInfos:      file_sound_sensor_proto_msgTypes,
	}.Build()
	File_sound_sensor_proto = out.File
	file_sound_sensor_proto_rawDesc = nil
	file_sound_sensor_proto_goTypes = nil
	file_sound_sensor_proto_depIdxs = nil
}
