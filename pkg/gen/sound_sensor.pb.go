// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.32.1
// source: sound_sensor.proto

package gen

import (
	types "github.com/smart-core-os/sc-api/go/types"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// SoundLevel represents a sound/noise level.
type SoundLevel struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Optional. The measured sound/noise level, usually in dBA or dB, use Info service to check the unit.
	// Omitted means unknown sound/noise level.
	SoundPressureLevel *float32 `protobuf:"fixed32,1,opt,name=sound_pressure_level,json=soundPressureLevel,proto3,oneof" json:"sound_pressure_level,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *SoundLevel) Reset() {
	*x = SoundLevel{}
	mi := &file_sound_sensor_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SoundLevel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SoundLevel) ProtoMessage() {}

func (x *SoundLevel) ProtoReflect() protoreflect.Message {
	mi := &file_sound_sensor_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SoundLevel.ProtoReflect.Descriptor instead.
func (*SoundLevel) Descriptor() ([]byte, []int) {
	return file_sound_sensor_proto_rawDescGZIP(), []int{0}
}

func (x *SoundLevel) GetSoundPressureLevel() float32 {
	if x != nil && x.SoundPressureLevel != nil {
		return *x.SoundPressureLevel
	}
	return 0
}

type SoundLevelSupport struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// How a named device supports read/write/pull apis
	ResourceSupport *types.ResourceSupport `protobuf:"bytes,1,opt,name=resource_support,json=resourceSupport,proto3" json:"resource_support,omitempty"`
	// The unit associated with the sound_pressure_level value.
	// Known units:
	//   - dBA - decibels SPL, A-weighted
	//   - dB - decibels SPL, unweighted
	SoundLevelUnit string `protobuf:"bytes,2,opt,name=sound_level_unit,json=soundLevelUnit,proto3" json:"sound_level_unit,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SoundLevelSupport) Reset() {
	*x = SoundLevelSupport{}
	mi := &file_sound_sensor_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SoundLevelSupport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SoundLevelSupport) ProtoMessage() {}

func (x *SoundLevelSupport) ProtoReflect() protoreflect.Message {
	mi := &file_sound_sensor_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SoundLevelSupport.ProtoReflect.Descriptor instead.
func (*SoundLevelSupport) Descriptor() ([]byte, []int) {
	return file_sound_sensor_proto_rawDescGZIP(), []int{1}
}

func (x *SoundLevelSupport) GetResourceSupport() *types.ResourceSupport {
	if x != nil {
		return x.ResourceSupport
	}
	return nil
}

func (x *SoundLevelSupport) GetSoundLevelUnit() string {
	if x != nil {
		return x.SoundLevelUnit
	}
	return ""
}

type GetSoundLevelRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ReadMask      *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=read_mask,json=readMask,proto3" json:"read_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSoundLevelRequest) Reset() {
	*x = GetSoundLevelRequest{}
	mi := &file_sound_sensor_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSoundLevelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSoundLevelRequest) ProtoMessage() {}

func (x *GetSoundLevelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sound_sensor_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSoundLevelRequest.ProtoReflect.Descriptor instead.
func (*GetSoundLevelRequest) Descriptor() ([]byte, []int) {
	return file_sound_sensor_proto_rawDescGZIP(), []int{2}
}

func (x *GetSoundLevelRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetSoundLevelRequest) GetReadMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.ReadMask
	}
	return nil
}

type PullSoundLevelRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ReadMask      *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=read_mask,json=readMask,proto3" json:"read_mask,omitempty"`
	UpdatesOnly   bool                   `protobuf:"varint,3,opt,name=updates_only,json=updatesOnly,proto3" json:"updates_only,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PullSoundLevelRequest) Reset() {
	*x = PullSoundLevelRequest{}
	mi := &file_sound_sensor_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PullSoundLevelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullSoundLevelRequest) ProtoMessage() {}

func (x *PullSoundLevelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sound_sensor_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullSoundLevelRequest.ProtoReflect.Descriptor instead.
func (*PullSoundLevelRequest) Descriptor() ([]byte, []int) {
	return file_sound_sensor_proto_rawDescGZIP(), []int{3}
}

func (x *PullSoundLevelRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PullSoundLevelRequest) GetReadMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.ReadMask
	}
	return nil
}

func (x *PullSoundLevelRequest) GetUpdatesOnly() bool {
	if x != nil {
		return x.UpdatesOnly
	}
	return false
}

type PullSoundLevelResponse struct {
	state         protoimpl.MessageState           `protogen:"open.v1"`
	Changes       []*PullSoundLevelResponse_Change `protobuf:"bytes,1,rep,name=changes,proto3" json:"changes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PullSoundLevelResponse) Reset() {
	*x = PullSoundLevelResponse{}
	mi := &file_sound_sensor_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PullSoundLevelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullSoundLevelResponse) ProtoMessage() {}

func (x *PullSoundLevelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sound_sensor_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullSoundLevelResponse.ProtoReflect.Descriptor instead.
func (*PullSoundLevelResponse) Descriptor() ([]byte, []int) {
	return file_sound_sensor_proto_rawDescGZIP(), []int{4}
}

func (x *PullSoundLevelResponse) GetChanges() []*PullSoundLevelResponse_Change {
	if x != nil {
		return x.Changes
	}
	return nil
}

type DescribeSoundLevelRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribeSoundLevelRequest) Reset() {
	*x = DescribeSoundLevelRequest{}
	mi := &file_sound_sensor_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeSoundLevelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeSoundLevelRequest) ProtoMessage() {}

func (x *DescribeSoundLevelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sound_sensor_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeSoundLevelRequest.ProtoReflect.Descriptor instead.
func (*DescribeSoundLevelRequest) Descriptor() ([]byte, []int) {
	return file_sound_sensor_proto_rawDescGZIP(), []int{5}
}

func (x *DescribeSoundLevelRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type PullSoundLevelResponse_Change struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ChangeTime    *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=change_time,json=changeTime,proto3" json:"change_time,omitempty"`
	SoundLevel    *SoundLevel            `protobuf:"bytes,3,opt,name=sound_level,json=soundLevel,proto3" json:"sound_level,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PullSoundLevelResponse_Change) Reset() {
	*x = PullSoundLevelResponse_Change{}
	mi := &file_sound_sensor_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PullSoundLevelResponse_Change) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullSoundLevelResponse_Change) ProtoMessage() {}

func (x *PullSoundLevelResponse_Change) ProtoReflect() protoreflect.Message {
	mi := &file_sound_sensor_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullSoundLevelResponse_Change.ProtoReflect.Descriptor instead.
func (*PullSoundLevelResponse_Change) Descriptor() ([]byte, []int) {
	return file_sound_sensor_proto_rawDescGZIP(), []int{4, 0}
}

func (x *PullSoundLevelResponse_Change) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PullSoundLevelResponse_Change) GetChangeTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ChangeTime
	}
	return nil
}

func (x *PullSoundLevelResponse_Change) GetSoundLevel() *SoundLevel {
	if x != nil {
		return x.SoundLevel
	}
	return nil
}

var File_sound_sensor_proto protoreflect.FileDescriptor

const file_sound_sensor_proto_rawDesc = "" +
	"\n" +
	"\x12sound_sensor.proto\x12\rsmartcore.bos\x1a google/protobuf/field_mask.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x10types/info.proto\"\\\n" +
	"\n" +
	"SoundLevel\x125\n" +
	"\x14sound_pressure_level\x18\x01 \x01(\x02H\x00R\x12soundPressureLevel\x88\x01\x01B\x17\n" +
	"\x15_sound_pressure_level\"\x8a\x01\n" +
	"\x11SoundLevelSupport\x12K\n" +
	"\x10resource_support\x18\x01 \x01(\v2 .smartcore.types.ResourceSupportR\x0fresourceSupport\x12(\n" +
	"\x10sound_level_unit\x18\x02 \x01(\tR\x0esoundLevelUnit\"c\n" +
	"\x14GetSoundLevelRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x127\n" +
	"\tread_mask\x18\x02 \x01(\v2\x1a.google.protobuf.FieldMaskR\breadMask\"\x87\x01\n" +
	"\x15PullSoundLevelRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x127\n" +
	"\tread_mask\x18\x02 \x01(\v2\x1a.google.protobuf.FieldMaskR\breadMask\x12!\n" +
	"\fupdates_only\x18\x03 \x01(\bR\vupdatesOnly\"\xf8\x01\n" +
	"\x16PullSoundLevelResponse\x12F\n" +
	"\achanges\x18\x01 \x03(\v2,.smartcore.bos.PullSoundLevelResponse.ChangeR\achanges\x1a\x95\x01\n" +
	"\x06Change\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12;\n" +
	"\vchange_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"changeTime\x12:\n" +
	"\vsound_level\x18\x03 \x01(\v2\x19.smartcore.bos.SoundLevelR\n" +
	"soundLevel\"/\n" +
	"\x19DescribeSoundLevelRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name2\xc6\x01\n" +
	"\x0eSoundSensorApi\x12Q\n" +
	"\rGetSoundLevel\x12#.smartcore.bos.GetSoundLevelRequest\x1a\x19.smartcore.bos.SoundLevel\"\x00\x12a\n" +
	"\x0ePullSoundLevel\x12$.smartcore.bos.PullSoundLevelRequest\x1a%.smartcore.bos.PullSoundLevelResponse\"\x000\x012u\n" +
	"\x0fSoundSensorInfo\x12b\n" +
	"\x12DescribeSoundLevel\x12(.smartcore.bos.DescribeSoundLevelRequest\x1a .smartcore.bos.SoundLevelSupport\"\x00B%Z#github.com/vanti-dev/sc-bos/pkg/genb\x06proto3"

var (
	file_sound_sensor_proto_rawDescOnce sync.Once
	file_sound_sensor_proto_rawDescData []byte
)

func file_sound_sensor_proto_rawDescGZIP() []byte {
	file_sound_sensor_proto_rawDescOnce.Do(func() {
		file_sound_sensor_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_sound_sensor_proto_rawDesc), len(file_sound_sensor_proto_rawDesc)))
	})
	return file_sound_sensor_proto_rawDescData
}

var file_sound_sensor_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_sound_sensor_proto_goTypes = []any{
	(*SoundLevel)(nil),                    // 0: smartcore.bos.SoundLevel
	(*SoundLevelSupport)(nil),             // 1: smartcore.bos.SoundLevelSupport
	(*GetSoundLevelRequest)(nil),          // 2: smartcore.bos.GetSoundLevelRequest
	(*PullSoundLevelRequest)(nil),         // 3: smartcore.bos.PullSoundLevelRequest
	(*PullSoundLevelResponse)(nil),        // 4: smartcore.bos.PullSoundLevelResponse
	(*DescribeSoundLevelRequest)(nil),     // 5: smartcore.bos.DescribeSoundLevelRequest
	(*PullSoundLevelResponse_Change)(nil), // 6: smartcore.bos.PullSoundLevelResponse.Change
	(*types.ResourceSupport)(nil),         // 7: smartcore.types.ResourceSupport
	(*fieldmaskpb.FieldMask)(nil),         // 8: google.protobuf.FieldMask
	(*timestamppb.Timestamp)(nil),         // 9: google.protobuf.Timestamp
}
var file_sound_sensor_proto_depIdxs = []int32{
	7, // 0: smartcore.bos.SoundLevelSupport.resource_support:type_name -> smartcore.types.ResourceSupport
	8, // 1: smartcore.bos.GetSoundLevelRequest.read_mask:type_name -> google.protobuf.FieldMask
	8, // 2: smartcore.bos.PullSoundLevelRequest.read_mask:type_name -> google.protobuf.FieldMask
	6, // 3: smartcore.bos.PullSoundLevelResponse.changes:type_name -> smartcore.bos.PullSoundLevelResponse.Change
	9, // 4: smartcore.bos.PullSoundLevelResponse.Change.change_time:type_name -> google.protobuf.Timestamp
	0, // 5: smartcore.bos.PullSoundLevelResponse.Change.sound_level:type_name -> smartcore.bos.SoundLevel
	2, // 6: smartcore.bos.SoundSensorApi.GetSoundLevel:input_type -> smartcore.bos.GetSoundLevelRequest
	3, // 7: smartcore.bos.SoundSensorApi.PullSoundLevel:input_type -> smartcore.bos.PullSoundLevelRequest
	5, // 8: smartcore.bos.SoundSensorInfo.DescribeSoundLevel:input_type -> smartcore.bos.DescribeSoundLevelRequest
	0, // 9: smartcore.bos.SoundSensorApi.GetSoundLevel:output_type -> smartcore.bos.SoundLevel
	4, // 10: smartcore.bos.SoundSensorApi.PullSoundLevel:output_type -> smartcore.bos.PullSoundLevelResponse
	1, // 11: smartcore.bos.SoundSensorInfo.DescribeSoundLevel:output_type -> smartcore.bos.SoundLevelSupport
	9, // [9:12] is the sub-list for method output_type
	6, // [6:9] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_sound_sensor_proto_init() }
func file_sound_sensor_proto_init() {
	if File_sound_sensor_proto != nil {
		return
	}
	file_sound_sensor_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_sound_sensor_proto_rawDesc), len(file_sound_sensor_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_sound_sensor_proto_goTypes,
		DependencyIndexes: file_sound_sensor_proto_depIdxs,
		MessageInfos:      file_sound_sensor_proto_msgTypes,
	}.Build()
	File_sound_sensor_proto = out.File
	file_sound_sensor_proto_goTypes = nil
	file_sound_sensor_proto_depIdxs = nil
}
