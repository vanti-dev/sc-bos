// Code generated by protoc-gen-wrapper. DO NOT EDIT.

package gen

import (
	wrap "github.com/smart-core-os/sc-golang/pkg/wrap"
	grpc "google.golang.org/grpc"
)

// WrapTransportApi	adapts a TransportApiServer	and presents it as a TransportApiClient
func WrapTransportApi(server TransportApiServer) *TransportApiWrapper {
	conn := wrap.ServerToClient(TransportApi_ServiceDesc, server)
	client := NewTransportApiClient(conn)
	return &TransportApiWrapper{
		TransportApiClient: client,
		server:             server,
		conn:               conn,
		desc:               TransportApi_ServiceDesc,
	}
}

type TransportApiWrapper struct {
	TransportApiClient

	server TransportApiServer
	conn   grpc.ClientConnInterface
	desc   grpc.ServiceDesc
}

// UnwrapServer returns the underlying server instance.
func (w *TransportApiWrapper) UnwrapServer() TransportApiServer {
	return w.server
}

// Unwrap implements wrap.Unwrapper and returns the underlying server instance as an unknown type.
func (w *TransportApiWrapper) Unwrap() any {
	return w.UnwrapServer()
}

func (w *TransportApiWrapper) UnwrapService() (grpc.ClientConnInterface, grpc.ServiceDesc) {
	return w.conn, w.desc
}
