// Code generated by protoc-gen-wrapper. DO NOT EDIT.

package gen

import (
	wrap "github.com/smart-core-os/sc-golang/pkg/wrap"
	grpc "google.golang.org/grpc"
)

// WrapSecurityEventApi	adapts a SecurityEventApiServer	and presents it as a SecurityEventApiClient
func WrapSecurityEventApi(server SecurityEventApiServer) *SecurityEventApiWrapper {
	conn := wrap.ServerToClient(SecurityEventApi_ServiceDesc, server)
	client := NewSecurityEventApiClient(conn)
	return &SecurityEventApiWrapper{
		SecurityEventApiClient: client,
		server:                 server,
		conn:                   conn,
		desc:                   SecurityEventApi_ServiceDesc,
	}
}

type SecurityEventApiWrapper struct {
	SecurityEventApiClient

	server SecurityEventApiServer
	conn   grpc.ClientConnInterface
	desc   grpc.ServiceDesc
}

// UnwrapServer returns the underlying server instance.
func (w *SecurityEventApiWrapper) UnwrapServer() SecurityEventApiServer {
	return w.server
}

// Unwrap implements wrap.Unwrapper and returns the underlying server instance as an unknown type.
func (w *SecurityEventApiWrapper) Unwrap() any {
	return w.UnwrapServer()
}

func (w *SecurityEventApiWrapper) UnwrapService() (grpc.ClientConnInterface, grpc.ServiceDesc) {
	return w.conn, w.desc
}
