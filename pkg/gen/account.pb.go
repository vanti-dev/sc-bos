// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.32.1
// source: account.proto

package gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Account_Type int32

const (
	Account_ACCOUNT_TYPE_UNSPECIFIED Account_Type = 0
	Account_USER_ACCOUNT             Account_Type = 1
	Account_SERVICE_ACCOUNT          Account_Type = 2
)

// Enum value maps for Account_Type.
var (
	Account_Type_name = map[int32]string{
		0: "ACCOUNT_TYPE_UNSPECIFIED",
		1: "USER_ACCOUNT",
		2: "SERVICE_ACCOUNT",
	}
	Account_Type_value = map[string]int32{
		"ACCOUNT_TYPE_UNSPECIFIED": 0,
		"USER_ACCOUNT":             1,
		"SERVICE_ACCOUNT":          2,
	}
)

func (x Account_Type) Enum() *Account_Type {
	p := new(Account_Type)
	*p = x
	return p
}

func (x Account_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Account_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_account_proto_enumTypes[0].Descriptor()
}

func (Account_Type) Type() protoreflect.EnumType {
	return &file_account_proto_enumTypes[0]
}

func (x Account_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Account_Type.Descriptor instead.
func (Account_Type) EnumDescriptor() ([]byte, []int) {
	return file_account_proto_rawDescGZIP(), []int{28, 0}
}

type RoleAssignment_ResourceType int32

const (
	RoleAssignment_RESOURCE_TYPE_UNSPECIFIED RoleAssignment_ResourceType = 0
	// Matches a single resource with the specified Smart Core name.
	RoleAssignment_NAMED_RESOURCE RoleAssignment_ResourceType = 1
	// Matches resources whose Smart Core name starts with the specified prefix, separated from an optional suffix
	// by a '/'.
	// Example:
	//
	//	Scope {
	//	  resource_type: NAMED_RESOURCE_PATH_PREFIX
	//	  resource: "foo/bar"
	//	}
	//
	//	Matches resources with Smart Core names:
	//	  - foo/bar
	//	  - foo/bar/baz
	//	Does not match:
	//	  - foo/barbaz
	RoleAssignment_NAMED_RESOURCE_PATH_PREFIX RoleAssignment_ResourceType = 2
	// Matches resources advertised by the Smart Core node with the given name.
	RoleAssignment_NODE RoleAssignment_ResourceType = 3
	// Matches resources whose advertised metadata subsystem property matches the specified value.
	RoleAssignment_SUBSYSTEM RoleAssignment_ResourceType = 4
	// Matches resources whose advertised metadata zone property matches the specified value.
	RoleAssignment_ZONE RoleAssignment_ResourceType = 5
)

// Enum value maps for RoleAssignment_ResourceType.
var (
	RoleAssignment_ResourceType_name = map[int32]string{
		0: "RESOURCE_TYPE_UNSPECIFIED",
		1: "NAMED_RESOURCE",
		2: "NAMED_RESOURCE_PATH_PREFIX",
		3: "NODE",
		4: "SUBSYSTEM",
		5: "ZONE",
	}
	RoleAssignment_ResourceType_value = map[string]int32{
		"RESOURCE_TYPE_UNSPECIFIED":  0,
		"NAMED_RESOURCE":             1,
		"NAMED_RESOURCE_PATH_PREFIX": 2,
		"NODE":                       3,
		"SUBSYSTEM":                  4,
		"ZONE":                       5,
	}
)

func (x RoleAssignment_ResourceType) Enum() *RoleAssignment_ResourceType {
	p := new(RoleAssignment_ResourceType)
	*p = x
	return p
}

func (x RoleAssignment_ResourceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RoleAssignment_ResourceType) Descriptor() protoreflect.EnumDescriptor {
	return file_account_proto_enumTypes[1].Descriptor()
}

func (RoleAssignment_ResourceType) Type() protoreflect.EnumType {
	return &file_account_proto_enumTypes[1]
}

func (x RoleAssignment_ResourceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RoleAssignment_ResourceType.Descriptor instead.
func (RoleAssignment_ResourceType) EnumDescriptor() ([]byte, []int) {
	return file_account_proto_rawDescGZIP(), []int{32, 0}
}

type GetAccountRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the node where the account is located.
	// Optional - if absent, the node you are connected to is assumed.
	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Id            string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAccountRequest) Reset() {
	*x = GetAccountRequest{}
	mi := &file_account_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountRequest) ProtoMessage() {}

func (x *GetAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountRequest.ProtoReflect.Descriptor instead.
func (*GetAccountRequest) Descriptor() ([]byte, []int) {
	return file_account_proto_rawDescGZIP(), []int{0}
}

func (x *GetAccountRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetAccountRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CreateAccountRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the node to create the account on.
	// Optional - if absent, the node you are connected to is assumed.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The account to create.
	Account *Account `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	// For user accounts, the initial password to set.
	// If absent, the account will be created without a password. The password must then be set with UpdateAccountPassword
	// before the account can be used.
	// Follows the same rules as UpdateAccountPassword.new_password.
	Password      string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateAccountRequest) Reset() {
	*x = CreateAccountRequest{}
	mi := &file_account_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAccountRequest) ProtoMessage() {}

func (x *CreateAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAccountRequest.ProtoReflect.Descriptor instead.
func (*CreateAccountRequest) Descriptor() ([]byte, []int) {
	return file_account_proto_rawDescGZIP(), []int{1}
}

func (x *CreateAccountRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateAccountRequest) GetAccount() *Account {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *CreateAccountRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type ListAccountsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the node to list accounts for.
	// Optional - if absent, the node you are connected to is assumed.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The maximum number of accounts to return in a single response.
	// If there are more results available, the response will contain a next_page_token to get them.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Token from previous ListAccounts response, to get the next page of results.
	PageToken     string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAccountsRequest) Reset() {
	*x = ListAccountsRequest{}
	mi := &file_account_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAccountsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAccountsRequest) ProtoMessage() {}

func (x *ListAccountsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAccountsRequest.ProtoReflect.Descriptor instead.
func (*ListAccountsRequest) Descriptor() ([]byte, []int) {
	return file_account_proto_rawDescGZIP(), []int{2}
}

func (x *ListAccountsRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListAccountsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListAccountsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListAccountsResponse struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	Accounts []*Account             `protobuf:"bytes,1,rep,name=accounts,proto3" json:"accounts,omitempty"`
	// Opaque value which can be provided to ListAccounts to get the next page of results.
	// Absent if there are no more results.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	// The total number of accounts available matching the request.
	// May be inaccurate if the number of matching accounts changes between the first and last pages being fetched.
	TotalSize     int32 `protobuf:"varint,3,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAccountsResponse) Reset() {
	*x = ListAccountsResponse{}
	mi := &file_account_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAccountsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAccountsResponse) ProtoMessage() {}

func (x *ListAccountsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_account_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAccountsResponse.ProtoReflect.Descriptor instead.
func (*ListAccountsResponse) Descriptor() ([]byte, []int) {
	return file_account_proto_rawDescGZIP(), []int{3}
}

func (x *ListAccountsResponse) GetAccounts() []*Account {
	if x != nil {
		return x.Accounts
	}
	return nil
}

func (x *ListAccountsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListAccountsResponse) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

type UpdateAccountRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the node where the account is located.
	// Optional - if absent, the node you are connected to is assumed.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The updated account data.
	// The account to update is identified by account.id, which must be present.
	Account       *Account               `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	UpdateMask    *fieldmaskpb.FieldMask `protobuf:"bytes,3,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateAccountRequest) Reset() {
	*x = UpdateAccountRequest{}
	mi := &file_account_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAccountRequest) ProtoMessage() {}

func (x *UpdateAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAccountRequest.ProtoReflect.Descriptor instead.
func (*UpdateAccountRequest) Descriptor() ([]byte, []int) {
	return file_account_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateAccountRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateAccountRequest) GetAccount() *Account {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *UpdateAccountRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

type UpdateAccountPasswordRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the node where the account is located.
	// Optional - if absent, the node you are connected to is assumed.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The id of the account to update the password for.
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// The new password to set.
	// The password must be between 10 and 72 characters long.
	// Leading and trailing whitespace is stripped.
	NewPassword string `protobuf:"bytes,3,opt,name=new_password,json=newPassword,proto3" json:"new_password,omitempty"`
	// The old password to verify. Required unless you have 'account:admin' permission.
	OldPassword   string `protobuf:"bytes,4,opt,name=old_password,json=oldPassword,proto3" json:"old_password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateAccountPasswordRequest) Reset() {
	*x = UpdateAccountPasswordRequest{}
	mi := &file_account_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAccountPasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAccountPasswordRequest) ProtoMessage() {}

func (x *UpdateAccountPasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAccountPasswordRequest.ProtoReflect.Descriptor instead.
func (*UpdateAccountPasswordRequest) Descriptor() ([]byte, []int) {
	return file_account_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateAccountPasswordRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateAccountPasswordRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateAccountPasswordRequest) GetNewPassword() string {
	if x != nil {
		return x.NewPassword
	}
	return ""
}

func (x *UpdateAccountPasswordRequest) GetOldPassword() string {
	if x != nil {
		return x.OldPassword
	}
	return ""
}

type UpdateAccountPasswordResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateAccountPasswordResponse) Reset() {
	*x = UpdateAccountPasswordResponse{}
	mi := &file_account_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAccountPasswordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAccountPasswordResponse) ProtoMessage() {}

func (x *UpdateAccountPasswordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_account_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAccountPasswordResponse.ProtoReflect.Descriptor instead.
func (*UpdateAccountPasswordResponse) Descriptor() ([]byte, []int) {
	return file_account_proto_rawDescGZIP(), []int{6}
}

type RotateAccountClientSecretRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the node where the account is located.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The id of the account to update the service credentials for. Must be a service account.
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// If present, the previous client_secret will remain valid for authentication until this time.
	// If absent, the previous client_secret is immediately invalidated.
	PreviousSecretExpireTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=previous_secret_expire_time,json=previousSecretExpireTime,proto3" json:"previous_secret_expire_time,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *RotateAccountClientSecretRequest) Reset() {
	*x = RotateAccountClientSecretRequest{}
	mi := &file_account_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RotateAccountClientSecretRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RotateAccountClientSecretRequest) ProtoMessage() {}

func (x *RotateAccountClientSecretRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RotateAccountClientSecretRequest.ProtoReflect.Descriptor instead.
func (*RotateAccountClientSecretRequest) Descriptor() ([]byte, []int) {
	return file_account_proto_rawDescGZIP(), []int{7}
}

func (x *RotateAccountClientSecretRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RotateAccountClientSecretRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RotateAccountClientSecretRequest) GetPreviousSecretExpireTime() *timestamppb.Timestamp {
	if x != nil {
		return x.PreviousSecretExpireTime
	}
	return nil
}

type RotateAccountClientSecretResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The new client_secret for the account.
	ClientSecret  string `protobuf:"bytes,1,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RotateAccountClientSecretResponse) Reset() {
	*x = RotateAccountClientSecretResponse{}
	mi := &file_account_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RotateAccountClientSecretResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RotateAccountClientSecretResponse) ProtoMessage() {}

func (x *RotateAccountClientSecretResponse) ProtoReflect() protoreflect.Message {
	mi := &file_account_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RotateAccountClientSecretResponse.ProtoReflect.Descriptor instead.
func (*RotateAccountClientSecretResponse) Descriptor() ([]byte, []int) {
	return file_account_proto_rawDescGZIP(), []int{8}
}

func (x *RotateAccountClientSecretResponse) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

type DeleteAccountRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the node where the account is located.
	// Optional - if absent, the node you are connected to is assumed.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The id of the account to delete.
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// If true, no error will be returned if the account does not exist.
	AllowMissing  bool `protobuf:"varint,3,opt,name=allow_missing,json=allowMissing,proto3" json:"allow_missing,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteAccountRequest) Reset() {
	*x = DeleteAccountRequest{}
	mi := &file_account_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAccountRequest) ProtoMessage() {}

func (x *DeleteAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAccountRequest.ProtoReflect.Descriptor instead.
func (*DeleteAccountRequest) Descriptor() ([]byte, []int) {
	return file_account_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteAccountRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DeleteAccountRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteAccountRequest) GetAllowMissing() bool {
	if x != nil {
		return x.AllowMissing
	}
	return false
}

type DeleteAccountResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteAccountResponse) Reset() {
	*x = DeleteAccountResponse{}
	mi := &file_account_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAccountResponse) ProtoMessage() {}

func (x *DeleteAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_account_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAccountResponse.ProtoReflect.Descriptor instead.
func (*DeleteAccountResponse) Descriptor() ([]byte, []int) {
	return file_account_proto_rawDescGZIP(), []int{10}
}

type GetRoleRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the node where the role is located.
	// Optional - if absent, the node you are connected to is assumed.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The id of the role to get.
	Id            string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRoleRequest) Reset() {
	*x = GetRoleRequest{}
	mi := &file_account_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoleRequest) ProtoMessage() {}

func (x *GetRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoleRequest.ProtoReflect.Descriptor instead.
func (*GetRoleRequest) Descriptor() ([]byte, []int) {
	return file_account_proto_rawDescGZIP(), []int{11}
}

func (x *GetRoleRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetRoleRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListRolesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the node to list roles for.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The maximum number of roles to return in a single response.
	// If there are more results available, the response will contain a next_page_token to get them.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Token from previous ListRoles response, to get the next page of results.
	PageToken     string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRolesRequest) Reset() {
	*x = ListRolesRequest{}
	mi := &file_account_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRolesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRolesRequest) ProtoMessage() {}

func (x *ListRolesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRolesRequest.ProtoReflect.Descriptor instead.
func (*ListRolesRequest) Descriptor() ([]byte, []int) {
	return file_account_proto_rawDescGZIP(), []int{12}
}

func (x *ListRolesRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListRolesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListRolesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListRolesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Roles []*Role                `protobuf:"bytes,1,rep,name=roles,proto3" json:"roles,omitempty"`
	// Opaque value which can be provided to ListRoles to get the next page of results.
	// Absent if there are no more results.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	// The total number of roles available matching the request.
	// May be inaccurate if the number of matching roles changes between the first and last pages being fetched.
	TotalSize     int32 `protobuf:"varint,3,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRolesResponse) Reset() {
	*x = ListRolesResponse{}
	mi := &file_account_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRolesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRolesResponse) ProtoMessage() {}

func (x *ListRolesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_account_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRolesResponse.ProtoReflect.Descriptor instead.
func (*ListRolesResponse) Descriptor() ([]byte, []int) {
	return file_account_proto_rawDescGZIP(), []int{13}
}

func (x *ListRolesResponse) GetRoles() []*Role {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *ListRolesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListRolesResponse) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

type CreateRoleRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the node where the role is located.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The role to create.
	Role          *Role `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRoleRequest) Reset() {
	*x = CreateRoleRequest{}
	mi := &file_account_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoleRequest) ProtoMessage() {}

func (x *CreateRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoleRequest.ProtoReflect.Descriptor instead.
func (*CreateRoleRequest) Descriptor() ([]byte, []int) {
	return file_account_proto_rawDescGZIP(), []int{14}
}

func (x *CreateRoleRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateRoleRequest) GetRole() *Role {
	if x != nil {
		return x.Role
	}
	return nil
}

type UpdateRoleRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the node where the role is located.
	// Optional - if absent, the node you are connected to is assumed.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The updated role data.
	// The role to update is identified by role.id, which must be present.
	Role          *Role                  `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`
	UpdateMask    *fieldmaskpb.FieldMask `protobuf:"bytes,3,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateRoleRequest) Reset() {
	*x = UpdateRoleRequest{}
	mi := &file_account_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRoleRequest) ProtoMessage() {}

func (x *UpdateRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRoleRequest.ProtoReflect.Descriptor instead.
func (*UpdateRoleRequest) Descriptor() ([]byte, []int) {
	return file_account_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateRoleRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateRoleRequest) GetRole() *Role {
	if x != nil {
		return x.Role
	}
	return nil
}

func (x *UpdateRoleRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

type DeleteRoleRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the node where the role is located.
	// Optional - if absent, the node you are connected to is assumed.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The id of the role to delete.
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// If true, no error will be returned if the role does not exist.
	AllowMissing  bool `protobuf:"varint,3,opt,name=allow_missing,json=allowMissing,proto3" json:"allow_missing,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRoleRequest) Reset() {
	*x = DeleteRoleRequest{}
	mi := &file_account_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRoleRequest) ProtoMessage() {}

func (x *DeleteRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRoleRequest.ProtoReflect.Descriptor instead.
func (*DeleteRoleRequest) Descriptor() ([]byte, []int) {
	return file_account_proto_rawDescGZIP(), []int{16}
}

func (x *DeleteRoleRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DeleteRoleRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteRoleRequest) GetAllowMissing() bool {
	if x != nil {
		return x.AllowMissing
	}
	return false
}

type DeleteRoleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRoleResponse) Reset() {
	*x = DeleteRoleResponse{}
	mi := &file_account_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRoleResponse) ProtoMessage() {}

func (x *DeleteRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_account_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRoleResponse.ProtoReflect.Descriptor instead.
func (*DeleteRoleResponse) Descriptor() ([]byte, []int) {
	return file_account_proto_rawDescGZIP(), []int{17}
}

type GetRoleAssignmentRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the node where the role assignment is located.
	// Optional - if absent, the node you are connected to is assumed.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The id of the role assignment to get.
	Id            string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRoleAssignmentRequest) Reset() {
	*x = GetRoleAssignmentRequest{}
	mi := &file_account_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRoleAssignmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoleAssignmentRequest) ProtoMessage() {}

func (x *GetRoleAssignmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoleAssignmentRequest.ProtoReflect.Descriptor instead.
func (*GetRoleAssignmentRequest) Descriptor() ([]byte, []int) {
	return file_account_proto_rawDescGZIP(), []int{18}
}

func (x *GetRoleAssignmentRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetRoleAssignmentRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListRoleAssignmentsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the node to list role assignments for.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The maximum number of role assignments to return in a single response.
	// If there are more results available, the response will contain a next_page_token to get them.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Token from previous ListRoleAssignments response, to get the next page of results.
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// Expression to limit the RoleAssignments returned.
	// If absent, all RoleAssignments are returned.
	// Supported syntax:
	//
	//	'account_id = <id>' - return only RoleAssignments for the specified account
	//	'role_id = <id>' - return only RoleAssignments for the specified role
	//
	// If a page_token is supplied, the filter must be the same as the filter used to get the page_token.
	Filter        string `protobuf:"bytes,4,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRoleAssignmentsRequest) Reset() {
	*x = ListRoleAssignmentsRequest{}
	mi := &file_account_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRoleAssignmentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRoleAssignmentsRequest) ProtoMessage() {}

func (x *ListRoleAssignmentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRoleAssignmentsRequest.ProtoReflect.Descriptor instead.
func (*ListRoleAssignmentsRequest) Descriptor() ([]byte, []int) {
	return file_account_proto_rawDescGZIP(), []int{19}
}

func (x *ListRoleAssignmentsRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListRoleAssignmentsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListRoleAssignmentsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListRoleAssignmentsRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

type ListRoleAssignmentsResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	RoleAssignments []*RoleAssignment      `protobuf:"bytes,1,rep,name=role_assignments,json=roleAssignments,proto3" json:"role_assignments,omitempty"`
	// Opaque value which can be provided to ListRoleAssignments to get the next page of results.
	// Absent if there are no more results.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	// The total number of role assignments available matching the request.
	// May be inaccurate if the number of matching role assignments changes between the first and last pages being fetched.
	TotalSize     int32 `protobuf:"varint,3,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRoleAssignmentsResponse) Reset() {
	*x = ListRoleAssignmentsResponse{}
	mi := &file_account_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRoleAssignmentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRoleAssignmentsResponse) ProtoMessage() {}

func (x *ListRoleAssignmentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_account_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRoleAssignmentsResponse.ProtoReflect.Descriptor instead.
func (*ListRoleAssignmentsResponse) Descriptor() ([]byte, []int) {
	return file_account_proto_rawDescGZIP(), []int{20}
}

func (x *ListRoleAssignmentsResponse) GetRoleAssignments() []*RoleAssignment {
	if x != nil {
		return x.RoleAssignments
	}
	return nil
}

func (x *ListRoleAssignmentsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListRoleAssignmentsResponse) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

type CreateRoleAssignmentRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the node where the role assignment is located.
	// Optional - if absent, the node you are connected to is assumed.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The role assignment to create.
	RoleAssignment *RoleAssignment `protobuf:"bytes,2,opt,name=role_assignment,json=roleAssignment,proto3" json:"role_assignment,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreateRoleAssignmentRequest) Reset() {
	*x = CreateRoleAssignmentRequest{}
	mi := &file_account_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRoleAssignmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoleAssignmentRequest) ProtoMessage() {}

func (x *CreateRoleAssignmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoleAssignmentRequest.ProtoReflect.Descriptor instead.
func (*CreateRoleAssignmentRequest) Descriptor() ([]byte, []int) {
	return file_account_proto_rawDescGZIP(), []int{21}
}

func (x *CreateRoleAssignmentRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateRoleAssignmentRequest) GetRoleAssignment() *RoleAssignment {
	if x != nil {
		return x.RoleAssignment
	}
	return nil
}

type DeleteRoleAssignmentRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the node where the role assignment is located.
	// Optional - if absent, the node you are connected to is assumed.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The id of the role assignment to delete.
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// If true, no error will be returned if the role assignment does not exist.
	AllowMissing  bool `protobuf:"varint,3,opt,name=allow_missing,json=allowMissing,proto3" json:"allow_missing,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRoleAssignmentRequest) Reset() {
	*x = DeleteRoleAssignmentRequest{}
	mi := &file_account_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRoleAssignmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRoleAssignmentRequest) ProtoMessage() {}

func (x *DeleteRoleAssignmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRoleAssignmentRequest.ProtoReflect.Descriptor instead.
func (*DeleteRoleAssignmentRequest) Descriptor() ([]byte, []int) {
	return file_account_proto_rawDescGZIP(), []int{22}
}

func (x *DeleteRoleAssignmentRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DeleteRoleAssignmentRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteRoleAssignmentRequest) GetAllowMissing() bool {
	if x != nil {
		return x.AllowMissing
	}
	return false
}

type DeleteRoleAssignmentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRoleAssignmentResponse) Reset() {
	*x = DeleteRoleAssignmentResponse{}
	mi := &file_account_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRoleAssignmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRoleAssignmentResponse) ProtoMessage() {}

func (x *DeleteRoleAssignmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_account_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRoleAssignmentResponse.ProtoReflect.Descriptor instead.
func (*DeleteRoleAssignmentResponse) Descriptor() ([]byte, []int) {
	return file_account_proto_rawDescGZIP(), []int{23}
}

type GetPermissionRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the node where the permission is located.
	// Optional - if absent, the node you are connected to is assumed.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The id of the permission to get.
	Id            string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPermissionRequest) Reset() {
	*x = GetPermissionRequest{}
	mi := &file_account_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPermissionRequest) ProtoMessage() {}

func (x *GetPermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPermissionRequest.ProtoReflect.Descriptor instead.
func (*GetPermissionRequest) Descriptor() ([]byte, []int) {
	return file_account_proto_rawDescGZIP(), []int{24}
}

func (x *GetPermissionRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetPermissionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListPermissionsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the node to list permissions for.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The maximum number of permissions to return in a single response.
	// If there are more results available, the response will contain a next_page_token to get them.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Token from previous ListPermissions response, to get the next page of results.
	PageToken     string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPermissionsRequest) Reset() {
	*x = ListPermissionsRequest{}
	mi := &file_account_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPermissionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPermissionsRequest) ProtoMessage() {}

func (x *ListPermissionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPermissionsRequest.ProtoReflect.Descriptor instead.
func (*ListPermissionsRequest) Descriptor() ([]byte, []int) {
	return file_account_proto_rawDescGZIP(), []int{25}
}

func (x *ListPermissionsRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListPermissionsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListPermissionsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListPermissionsResponse struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	Permissions []*Permission          `protobuf:"bytes,1,rep,name=permissions,proto3" json:"permissions,omitempty"`
	// Opaque value which can be provided to ListPermissions to get the next page of results.
	// Absent if there are no more results.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	// The total number of permissions available matching the request.
	TotalSize     int32 `protobuf:"varint,3,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPermissionsResponse) Reset() {
	*x = ListPermissionsResponse{}
	mi := &file_account_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPermissionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPermissionsResponse) ProtoMessage() {}

func (x *ListPermissionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_account_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPermissionsResponse.ProtoReflect.Descriptor instead.
func (*ListPermissionsResponse) Descriptor() ([]byte, []int) {
	return file_account_proto_rawDescGZIP(), []int{26}
}

func (x *ListPermissionsResponse) GetPermissions() []*Permission {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *ListPermissionsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListPermissionsResponse) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

type GetAccountLimitsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the node. Defaults to the node you are connected to.
	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAccountLimitsRequest) Reset() {
	*x = GetAccountLimitsRequest{}
	mi := &file_account_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAccountLimitsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountLimitsRequest) ProtoMessage() {}

func (x *GetAccountLimitsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_account_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountLimitsRequest.ProtoReflect.Descriptor instead.
func (*GetAccountLimitsRequest) Descriptor() ([]byte, []int) {
	return file_account_proto_rawDescGZIP(), []int{27}
}

func (x *GetAccountLimitsRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Account struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier for this account. Consistent for the life of the account.
	// Generated automatically on account creation.
	// For service accounts, this is the OAuth2 Client ID for authenticating.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The time this account was created. Output only.
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// Describes which type of account this is, which changes how authentication is handled.
	// Required for account creation.
	// Immutable.
	Type Account_Type `protobuf:"varint,3,opt,name=type,proto3,enum=smartcore.bos.Account_Type" json:"type,omitempty"`
	// A human-readable name for this account, for display purposes. Required.
	DisplayName string `protobuf:"bytes,4,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// A longer human-readable description of this account. Optional.
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// An account can be a user account or a service account.
	// On create, one of these must be present to select the account type.
	// Once an account is created, its type cannot be changed.
	//
	// Types that are valid to be assigned to Details:
	//
	//	*Account_UserDetails
	//	*Account_ServiceDetails
	Details       isAccount_Details `protobuf_oneof:"details"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Account) Reset() {
	*x = Account{}
	mi := &file_account_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Account) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Account) ProtoMessage() {}

func (x *Account) ProtoReflect() protoreflect.Message {
	mi := &file_account_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Account.ProtoReflect.Descriptor instead.
func (*Account) Descriptor() ([]byte, []int) {
	return file_account_proto_rawDescGZIP(), []int{28}
}

func (x *Account) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Account) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *Account) GetType() Account_Type {
	if x != nil {
		return x.Type
	}
	return Account_ACCOUNT_TYPE_UNSPECIFIED
}

func (x *Account) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *Account) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Account) GetDetails() isAccount_Details {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *Account) GetUserDetails() *UserAccount {
	if x != nil {
		if x, ok := x.Details.(*Account_UserDetails); ok {
			return x.UserDetails
		}
	}
	return nil
}

func (x *Account) GetServiceDetails() *ServiceAccount {
	if x != nil {
		if x, ok := x.Details.(*Account_ServiceDetails); ok {
			return x.ServiceDetails
		}
	}
	return nil
}

type isAccount_Details interface {
	isAccount_Details()
}

type Account_UserDetails struct {
	UserDetails *UserAccount `protobuf:"bytes,6,opt,name=user_details,json=userDetails,proto3,oneof"`
}

type Account_ServiceDetails struct {
	ServiceDetails *ServiceAccount `protobuf:"bytes,7,opt,name=service_details,json=serviceDetails,proto3,oneof"`
}

func (*Account_UserDetails) isAccount_Details() {}

func (*Account_ServiceDetails) isAccount_Details() {}

type UserAccount struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Used for username/password login.
	// A valid username is between 3 and 100 characters.
	// ASCII alphanumerics, and the following special characters are allowed: .-_@
	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	// Output only. True if a password is set for this account.
	HasPassword   bool `protobuf:"varint,2,opt,name=has_password,json=hasPassword,proto3" json:"has_password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserAccount) Reset() {
	*x = UserAccount{}
	mi := &file_account_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAccount) ProtoMessage() {}

func (x *UserAccount) ProtoReflect() protoreflect.Message {
	mi := &file_account_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAccount.ProtoReflect.Descriptor instead.
func (*UserAccount) Descriptor() ([]byte, []int) {
	return file_account_proto_rawDescGZIP(), []int{29}
}

func (x *UserAccount) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UserAccount) GetHasPassword() bool {
	if x != nil {
		return x.HasPassword
	}
	return false
}

type ServiceAccount struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The OAuth2 Client ID to use when authenticating against this service account.
	ClientId string `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	// The OAuth2 Client Secret to use when authenticating against this service account.
	// This field is only populated in the response from CreateAccount and RotateAccountServiceCredentials.
	// The secret is not stored in the system and cannot be retrieved later.
	ClientSecret string `protobuf:"bytes,2,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty"`
	// Output only.
	// If present, then the client_secret has been recently rotated, and the previous secret value is still valid
	// until this time.
	PreviousSecretExpireTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=previous_secret_expire_time,json=previousSecretExpireTime,proto3" json:"previous_secret_expire_time,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *ServiceAccount) Reset() {
	*x = ServiceAccount{}
	mi := &file_account_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceAccount) ProtoMessage() {}

func (x *ServiceAccount) ProtoReflect() protoreflect.Message {
	mi := &file_account_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceAccount.ProtoReflect.Descriptor instead.
func (*ServiceAccount) Descriptor() ([]byte, []int) {
	return file_account_proto_rawDescGZIP(), []int{30}
}

func (x *ServiceAccount) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *ServiceAccount) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

func (x *ServiceAccount) GetPreviousSecretExpireTime() *timestamppb.Timestamp {
	if x != nil {
		return x.PreviousSecretExpireTime
	}
	return nil
}

// A Role is a named collection of permissions.
//
// Roles are assigned to accounts using RoleAssignments.
type Role struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier for this role assigned by the system.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Short human-readable name for this role, for display purposes. Required. Must be unique.
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// Longer human-readable description of this role, for display purposes. Optional.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// The permissions granted by this role.
	PermissionIds []string `protobuf:"bytes,4,rep,name=permission_ids,json=permissionIds,proto3" json:"permission_ids,omitempty"`
	// Output only. Optional.
	// For roles which map to hardcoded roles in the legacy authentication system.
	// Legacy roles cannot be used in scoped RoleAssignments.
	LegacyRoleName string `protobuf:"bytes,5,opt,name=legacy_role_name,json=legacyRoleName,proto3" json:"legacy_role_name,omitempty"`
	// Output only. If true, this role is necessary for the system to function, and cannot be modified or deleted.
	Protected     bool `protobuf:"varint,7,opt,name=protected,proto3" json:"protected,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Role) Reset() {
	*x = Role{}
	mi := &file_account_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Role) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Role) ProtoMessage() {}

func (x *Role) ProtoReflect() protoreflect.Message {
	mi := &file_account_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Role.ProtoReflect.Descriptor instead.
func (*Role) Descriptor() ([]byte, []int) {
	return file_account_proto_rawDescGZIP(), []int{31}
}

func (x *Role) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Role) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *Role) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Role) GetPermissionIds() []string {
	if x != nil {
		return x.PermissionIds
	}
	return nil
}

func (x *Role) GetLegacyRoleName() string {
	if x != nil {
		return x.LegacyRoleName
	}
	return ""
}

func (x *Role) GetProtected() bool {
	if x != nil {
		return x.Protected
	}
	return false
}

// A RoleAssignment is an assignment of a Role to an Account.
// It is a sub-resource of the Account.
type RoleAssignment struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier for this role assignment assigned by the system.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The account this role assignment is associated with.
	AccountId string `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// The role this assignment grants.
	RoleId string `protobuf:"bytes,3,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	// The scope of the role assignment.
	// If present, the permissions in the role are only granted for the resources in the scope.
	// Otherwise, the permissions in the role apply to all resources.
	Scope         *RoleAssignment_Scope `protobuf:"bytes,4,opt,name=scope,proto3" json:"scope,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RoleAssignment) Reset() {
	*x = RoleAssignment{}
	mi := &file_account_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RoleAssignment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleAssignment) ProtoMessage() {}

func (x *RoleAssignment) ProtoReflect() protoreflect.Message {
	mi := &file_account_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleAssignment.ProtoReflect.Descriptor instead.
func (*RoleAssignment) Descriptor() ([]byte, []int) {
	return file_account_proto_rawDescGZIP(), []int{32}
}

func (x *RoleAssignment) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RoleAssignment) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *RoleAssignment) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

func (x *RoleAssignment) GetScope() *RoleAssignment_Scope {
	if x != nil {
		return x.Scope
	}
	return nil
}

// A permission is a named action that can be granted to a role.
// The set of valid permissions is determined statically by the system, and cannot be modified at runtime.
type Permission struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier for this permission.
	// Will remain stable for the lifetime of the system.
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DisplayName   string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Description   string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Permission) Reset() {
	*x = Permission{}
	mi := &file_account_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Permission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Permission) ProtoMessage() {}

func (x *Permission) ProtoReflect() protoreflect.Message {
	mi := &file_account_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Permission.ProtoReflect.Descriptor instead.
func (*Permission) Descriptor() ([]byte, []int) {
	return file_account_proto_rawDescGZIP(), []int{33}
}

func (x *Permission) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Permission) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *Permission) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type AccountLimits struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      *AccountLimits_Field   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password      *AccountLimits_Field   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	DisplayName   *AccountLimits_Field   `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Description   *AccountLimits_Field   `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AccountLimits) Reset() {
	*x = AccountLimits{}
	mi := &file_account_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccountLimits) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountLimits) ProtoMessage() {}

func (x *AccountLimits) ProtoReflect() protoreflect.Message {
	mi := &file_account_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountLimits.ProtoReflect.Descriptor instead.
func (*AccountLimits) Descriptor() ([]byte, []int) {
	return file_account_proto_rawDescGZIP(), []int{34}
}

func (x *AccountLimits) GetUsername() *AccountLimits_Field {
	if x != nil {
		return x.Username
	}
	return nil
}

func (x *AccountLimits) GetPassword() *AccountLimits_Field {
	if x != nil {
		return x.Password
	}
	return nil
}

func (x *AccountLimits) GetDisplayName() *AccountLimits_Field {
	if x != nil {
		return x.DisplayName
	}
	return nil
}

func (x *AccountLimits) GetDescription() *AccountLimits_Field {
	if x != nil {
		return x.Description
	}
	return nil
}

type RoleAssignment_Scope struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	ResourceType  RoleAssignment_ResourceType `protobuf:"varint,1,opt,name=resource_type,json=resourceType,proto3,enum=smartcore.bos.RoleAssignment_ResourceType" json:"resource_type,omitempty"`
	Resource      string                      `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RoleAssignment_Scope) Reset() {
	*x = RoleAssignment_Scope{}
	mi := &file_account_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RoleAssignment_Scope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleAssignment_Scope) ProtoMessage() {}

func (x *RoleAssignment_Scope) ProtoReflect() protoreflect.Message {
	mi := &file_account_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleAssignment_Scope.ProtoReflect.Descriptor instead.
func (*RoleAssignment_Scope) Descriptor() ([]byte, []int) {
	return file_account_proto_rawDescGZIP(), []int{32, 0}
}

func (x *RoleAssignment_Scope) GetResourceType() RoleAssignment_ResourceType {
	if x != nil {
		return x.ResourceType
	}
	return RoleAssignment_RESOURCE_TYPE_UNSPECIFIED
}

func (x *RoleAssignment_Scope) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

type AccountLimits_Field struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MinLength     int32                  `protobuf:"varint,1,opt,name=min_length,json=minLength,proto3" json:"min_length,omitempty"`
	MaxLength     int32                  `protobuf:"varint,2,opt,name=max_length,json=maxLength,proto3" json:"max_length,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AccountLimits_Field) Reset() {
	*x = AccountLimits_Field{}
	mi := &file_account_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccountLimits_Field) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountLimits_Field) ProtoMessage() {}

func (x *AccountLimits_Field) ProtoReflect() protoreflect.Message {
	mi := &file_account_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountLimits_Field.ProtoReflect.Descriptor instead.
func (*AccountLimits_Field) Descriptor() ([]byte, []int) {
	return file_account_proto_rawDescGZIP(), []int{34, 0}
}

func (x *AccountLimits_Field) GetMinLength() int32 {
	if x != nil {
		return x.MinLength
	}
	return 0
}

func (x *AccountLimits_Field) GetMaxLength() int32 {
	if x != nil {
		return x.MaxLength
	}
	return 0
}

var File_account_proto protoreflect.FileDescriptor

const file_account_proto_rawDesc = "" +
	"\n" +
	"\raccount.proto\x12\rsmartcore.bos\x1a\x1fgoogle/protobuf/timestamp.proto\x1a google/protobuf/field_mask.proto\"7\n" +
	"\x11GetAccountRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\"x\n" +
	"\x14CreateAccountRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x120\n" +
	"\aaccount\x18\x02 \x01(\v2\x16.smartcore.bos.AccountR\aaccount\x12\x1a\n" +
	"\bpassword\x18\x03 \x01(\tR\bpassword\"e\n" +
	"\x13ListAccountsRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tR\tpageToken\"\x91\x01\n" +
	"\x14ListAccountsResponse\x122\n" +
	"\baccounts\x18\x01 \x03(\v2\x16.smartcore.bos.AccountR\baccounts\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\x12\x1d\n" +
	"\n" +
	"total_size\x18\x03 \x01(\x05R\ttotalSize\"\x99\x01\n" +
	"\x14UpdateAccountRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x120\n" +
	"\aaccount\x18\x02 \x01(\v2\x16.smartcore.bos.AccountR\aaccount\x12;\n" +
	"\vupdate_mask\x18\x03 \x01(\v2\x1a.google.protobuf.FieldMaskR\n" +
	"updateMask\"\x88\x01\n" +
	"\x1cUpdateAccountPasswordRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\x12!\n" +
	"\fnew_password\x18\x03 \x01(\tR\vnewPassword\x12!\n" +
	"\fold_password\x18\x04 \x01(\tR\voldPassword\"\x1f\n" +
	"\x1dUpdateAccountPasswordResponse\"\xa1\x01\n" +
	" RotateAccountClientSecretRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\x12Y\n" +
	"\x1bprevious_secret_expire_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x18previousSecretExpireTime\"H\n" +
	"!RotateAccountClientSecretResponse\x12#\n" +
	"\rclient_secret\x18\x01 \x01(\tR\fclientSecret\"_\n" +
	"\x14DeleteAccountRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\x12#\n" +
	"\rallow_missing\x18\x03 \x01(\bR\fallowMissing\"\x17\n" +
	"\x15DeleteAccountResponse\"4\n" +
	"\x0eGetRoleRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\"b\n" +
	"\x10ListRolesRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tR\tpageToken\"\x85\x01\n" +
	"\x11ListRolesResponse\x12)\n" +
	"\x05roles\x18\x01 \x03(\v2\x13.smartcore.bos.RoleR\x05roles\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\x12\x1d\n" +
	"\n" +
	"total_size\x18\x03 \x01(\x05R\ttotalSize\"P\n" +
	"\x11CreateRoleRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12'\n" +
	"\x04role\x18\x02 \x01(\v2\x13.smartcore.bos.RoleR\x04role\"\x8d\x01\n" +
	"\x11UpdateRoleRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12'\n" +
	"\x04role\x18\x02 \x01(\v2\x13.smartcore.bos.RoleR\x04role\x12;\n" +
	"\vupdate_mask\x18\x03 \x01(\v2\x1a.google.protobuf.FieldMaskR\n" +
	"updateMask\"\\\n" +
	"\x11DeleteRoleRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\x12#\n" +
	"\rallow_missing\x18\x03 \x01(\bR\fallowMissing\"\x14\n" +
	"\x12DeleteRoleResponse\">\n" +
	"\x18GetRoleAssignmentRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\"\x84\x01\n" +
	"\x1aListRoleAssignmentsRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tR\tpageToken\x12\x16\n" +
	"\x06filter\x18\x04 \x01(\tR\x06filter\"\xae\x01\n" +
	"\x1bListRoleAssignmentsResponse\x12H\n" +
	"\x10role_assignments\x18\x01 \x03(\v2\x1d.smartcore.bos.RoleAssignmentR\x0froleAssignments\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\x12\x1d\n" +
	"\n" +
	"total_size\x18\x03 \x01(\x05R\ttotalSize\"y\n" +
	"\x1bCreateRoleAssignmentRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12F\n" +
	"\x0frole_assignment\x18\x02 \x01(\v2\x1d.smartcore.bos.RoleAssignmentR\x0eroleAssignment\"f\n" +
	"\x1bDeleteRoleAssignmentRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\x12#\n" +
	"\rallow_missing\x18\x03 \x01(\bR\fallowMissing\"\x1e\n" +
	"\x1cDeleteRoleAssignmentResponse\":\n" +
	"\x14GetPermissionRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\"h\n" +
	"\x16ListPermissionsRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tR\tpageToken\"\x9d\x01\n" +
	"\x17ListPermissionsResponse\x12;\n" +
	"\vpermissions\x18\x01 \x03(\v2\x19.smartcore.bos.PermissionR\vpermissions\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\x12\x1d\n" +
	"\n" +
	"total_size\x18\x03 \x01(\x05R\ttotalSize\"-\n" +
	"\x17GetAccountLimitsRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"\xaf\x03\n" +
	"\aAccount\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12;\n" +
	"\vcreate_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"createTime\x12/\n" +
	"\x04type\x18\x03 \x01(\x0e2\x1b.smartcore.bos.Account.TypeR\x04type\x12!\n" +
	"\fdisplay_name\x18\x04 \x01(\tR\vdisplayName\x12 \n" +
	"\vdescription\x18\x05 \x01(\tR\vdescription\x12?\n" +
	"\fuser_details\x18\x06 \x01(\v2\x1a.smartcore.bos.UserAccountH\x00R\vuserDetails\x12H\n" +
	"\x0fservice_details\x18\a \x01(\v2\x1d.smartcore.bos.ServiceAccountH\x00R\x0eserviceDetails\"K\n" +
	"\x04Type\x12\x1c\n" +
	"\x18ACCOUNT_TYPE_UNSPECIFIED\x10\x00\x12\x10\n" +
	"\fUSER_ACCOUNT\x10\x01\x12\x13\n" +
	"\x0fSERVICE_ACCOUNT\x10\x02B\t\n" +
	"\adetails\"L\n" +
	"\vUserAccount\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\x12!\n" +
	"\fhas_password\x18\x02 \x01(\bR\vhasPassword\"\xad\x01\n" +
	"\x0eServiceAccount\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\tR\bclientId\x12#\n" +
	"\rclient_secret\x18\x02 \x01(\tR\fclientSecret\x12Y\n" +
	"\x1bprevious_secret_expire_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x18previousSecretExpireTime\"\xca\x01\n" +
	"\x04Role\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12!\n" +
	"\fdisplay_name\x18\x02 \x01(\tR\vdisplayName\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12%\n" +
	"\x0epermission_ids\x18\x04 \x03(\tR\rpermissionIds\x12(\n" +
	"\x10legacy_role_name\x18\x05 \x01(\tR\x0elegacyRoleName\x12\x1c\n" +
	"\tprotected\x18\a \x01(\bR\tprotected\"\x90\x03\n" +
	"\x0eRoleAssignment\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12\x17\n" +
	"\arole_id\x18\x03 \x01(\tR\x06roleId\x129\n" +
	"\x05scope\x18\x04 \x01(\v2#.smartcore.bos.RoleAssignment.ScopeR\x05scope\x1at\n" +
	"\x05Scope\x12O\n" +
	"\rresource_type\x18\x01 \x01(\x0e2*.smartcore.bos.RoleAssignment.ResourceTypeR\fresourceType\x12\x1a\n" +
	"\bresource\x18\x02 \x01(\tR\bresource\"\x84\x01\n" +
	"\fResourceType\x12\x1d\n" +
	"\x19RESOURCE_TYPE_UNSPECIFIED\x10\x00\x12\x12\n" +
	"\x0eNAMED_RESOURCE\x10\x01\x12\x1e\n" +
	"\x1aNAMED_RESOURCE_PATH_PREFIX\x10\x02\x12\b\n" +
	"\x04NODE\x10\x03\x12\r\n" +
	"\tSUBSYSTEM\x10\x04\x12\b\n" +
	"\x04ZONE\x10\x05\"a\n" +
	"\n" +
	"Permission\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12!\n" +
	"\fdisplay_name\x18\x02 \x01(\tR\vdisplayName\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\"\xe9\x02\n" +
	"\rAccountLimits\x12>\n" +
	"\busername\x18\x01 \x01(\v2\".smartcore.bos.AccountLimits.FieldR\busername\x12>\n" +
	"\bpassword\x18\x02 \x01(\v2\".smartcore.bos.AccountLimits.FieldR\bpassword\x12E\n" +
	"\fdisplay_name\x18\x03 \x01(\v2\".smartcore.bos.AccountLimits.FieldR\vdisplayName\x12D\n" +
	"\vdescription\x18\x04 \x01(\v2\".smartcore.bos.AccountLimits.FieldR\vdescription\x1aE\n" +
	"\x05Field\x12\x1d\n" +
	"\n" +
	"min_length\x18\x01 \x01(\x05R\tminLength\x12\x1d\n" +
	"\n" +
	"max_length\x18\x02 \x01(\x05R\tmaxLengthJ\x04\b\x05\x10\x062\xa4\v\n" +
	"\n" +
	"AccountApi\x12F\n" +
	"\n" +
	"GetAccount\x12 .smartcore.bos.GetAccountRequest\x1a\x16.smartcore.bos.Account\x12W\n" +
	"\fListAccounts\x12\".smartcore.bos.ListAccountsRequest\x1a#.smartcore.bos.ListAccountsResponse\x12L\n" +
	"\rCreateAccount\x12#.smartcore.bos.CreateAccountRequest\x1a\x16.smartcore.bos.Account\x12L\n" +
	"\rUpdateAccount\x12#.smartcore.bos.UpdateAccountRequest\x1a\x16.smartcore.bos.Account\x12r\n" +
	"\x15UpdateAccountPassword\x12+.smartcore.bos.UpdateAccountPasswordRequest\x1a,.smartcore.bos.UpdateAccountPasswordResponse\x12~\n" +
	"\x19RotateAccountClientSecret\x12/.smartcore.bos.RotateAccountClientSecretRequest\x1a0.smartcore.bos.RotateAccountClientSecretResponse\x12Z\n" +
	"\rDeleteAccount\x12#.smartcore.bos.DeleteAccountRequest\x1a$.smartcore.bos.DeleteAccountResponse\x12=\n" +
	"\aGetRole\x12\x1d.smartcore.bos.GetRoleRequest\x1a\x13.smartcore.bos.Role\x12N\n" +
	"\tListRoles\x12\x1f.smartcore.bos.ListRolesRequest\x1a .smartcore.bos.ListRolesResponse\x12C\n" +
	"\n" +
	"CreateRole\x12 .smartcore.bos.CreateRoleRequest\x1a\x13.smartcore.bos.Role\x12C\n" +
	"\n" +
	"UpdateRole\x12 .smartcore.bos.UpdateRoleRequest\x1a\x13.smartcore.bos.Role\x12Q\n" +
	"\n" +
	"DeleteRole\x12 .smartcore.bos.DeleteRoleRequest\x1a!.smartcore.bos.DeleteRoleResponse\x12[\n" +
	"\x11GetRoleAssignment\x12'.smartcore.bos.GetRoleAssignmentRequest\x1a\x1d.smartcore.bos.RoleAssignment\x12l\n" +
	"\x13ListRoleAssignments\x12).smartcore.bos.ListRoleAssignmentsRequest\x1a*.smartcore.bos.ListRoleAssignmentsResponse\x12a\n" +
	"\x14CreateRoleAssignment\x12*.smartcore.bos.CreateRoleAssignmentRequest\x1a\x1d.smartcore.bos.RoleAssignment\x12o\n" +
	"\x14DeleteRoleAssignment\x12*.smartcore.bos.DeleteRoleAssignmentRequest\x1a+.smartcore.bos.DeleteRoleAssignmentResponse2\x9a\x02\n" +
	"\vAccountInfo\x12O\n" +
	"\rGetPermission\x12#.smartcore.bos.GetPermissionRequest\x1a\x19.smartcore.bos.Permission\x12`\n" +
	"\x0fListPermissions\x12%.smartcore.bos.ListPermissionsRequest\x1a&.smartcore.bos.ListPermissionsResponse\x12X\n" +
	"\x10GetAccountLimits\x12&.smartcore.bos.GetAccountLimitsRequest\x1a\x1c.smartcore.bos.AccountLimitsB%Z#github.com/vanti-dev/sc-bos/pkg/genb\x06proto3"

var (
	file_account_proto_rawDescOnce sync.Once
	file_account_proto_rawDescData []byte
)

func file_account_proto_rawDescGZIP() []byte {
	file_account_proto_rawDescOnce.Do(func() {
		file_account_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_account_proto_rawDesc), len(file_account_proto_rawDesc)))
	})
	return file_account_proto_rawDescData
}

var file_account_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_account_proto_msgTypes = make([]protoimpl.MessageInfo, 37)
var file_account_proto_goTypes = []any{
	(Account_Type)(0),                         // 0: smartcore.bos.Account.Type
	(RoleAssignment_ResourceType)(0),          // 1: smartcore.bos.RoleAssignment.ResourceType
	(*GetAccountRequest)(nil),                 // 2: smartcore.bos.GetAccountRequest
	(*CreateAccountRequest)(nil),              // 3: smartcore.bos.CreateAccountRequest
	(*ListAccountsRequest)(nil),               // 4: smartcore.bos.ListAccountsRequest
	(*ListAccountsResponse)(nil),              // 5: smartcore.bos.ListAccountsResponse
	(*UpdateAccountRequest)(nil),              // 6: smartcore.bos.UpdateAccountRequest
	(*UpdateAccountPasswordRequest)(nil),      // 7: smartcore.bos.UpdateAccountPasswordRequest
	(*UpdateAccountPasswordResponse)(nil),     // 8: smartcore.bos.UpdateAccountPasswordResponse
	(*RotateAccountClientSecretRequest)(nil),  // 9: smartcore.bos.RotateAccountClientSecretRequest
	(*RotateAccountClientSecretResponse)(nil), // 10: smartcore.bos.RotateAccountClientSecretResponse
	(*DeleteAccountRequest)(nil),              // 11: smartcore.bos.DeleteAccountRequest
	(*DeleteAccountResponse)(nil),             // 12: smartcore.bos.DeleteAccountResponse
	(*GetRoleRequest)(nil),                    // 13: smartcore.bos.GetRoleRequest
	(*ListRolesRequest)(nil),                  // 14: smartcore.bos.ListRolesRequest
	(*ListRolesResponse)(nil),                 // 15: smartcore.bos.ListRolesResponse
	(*CreateRoleRequest)(nil),                 // 16: smartcore.bos.CreateRoleRequest
	(*UpdateRoleRequest)(nil),                 // 17: smartcore.bos.UpdateRoleRequest
	(*DeleteRoleRequest)(nil),                 // 18: smartcore.bos.DeleteRoleRequest
	(*DeleteRoleResponse)(nil),                // 19: smartcore.bos.DeleteRoleResponse
	(*GetRoleAssignmentRequest)(nil),          // 20: smartcore.bos.GetRoleAssignmentRequest
	(*ListRoleAssignmentsRequest)(nil),        // 21: smartcore.bos.ListRoleAssignmentsRequest
	(*ListRoleAssignmentsResponse)(nil),       // 22: smartcore.bos.ListRoleAssignmentsResponse
	(*CreateRoleAssignmentRequest)(nil),       // 23: smartcore.bos.CreateRoleAssignmentRequest
	(*DeleteRoleAssignmentRequest)(nil),       // 24: smartcore.bos.DeleteRoleAssignmentRequest
	(*DeleteRoleAssignmentResponse)(nil),      // 25: smartcore.bos.DeleteRoleAssignmentResponse
	(*GetPermissionRequest)(nil),              // 26: smartcore.bos.GetPermissionRequest
	(*ListPermissionsRequest)(nil),            // 27: smartcore.bos.ListPermissionsRequest
	(*ListPermissionsResponse)(nil),           // 28: smartcore.bos.ListPermissionsResponse
	(*GetAccountLimitsRequest)(nil),           // 29: smartcore.bos.GetAccountLimitsRequest
	(*Account)(nil),                           // 30: smartcore.bos.Account
	(*UserAccount)(nil),                       // 31: smartcore.bos.UserAccount
	(*ServiceAccount)(nil),                    // 32: smartcore.bos.ServiceAccount
	(*Role)(nil),                              // 33: smartcore.bos.Role
	(*RoleAssignment)(nil),                    // 34: smartcore.bos.RoleAssignment
	(*Permission)(nil),                        // 35: smartcore.bos.Permission
	(*AccountLimits)(nil),                     // 36: smartcore.bos.AccountLimits
	(*RoleAssignment_Scope)(nil),              // 37: smartcore.bos.RoleAssignment.Scope
	(*AccountLimits_Field)(nil),               // 38: smartcore.bos.AccountLimits.Field
	(*fieldmaskpb.FieldMask)(nil),             // 39: google.protobuf.FieldMask
	(*timestamppb.Timestamp)(nil),             // 40: google.protobuf.Timestamp
}
var file_account_proto_depIdxs = []int32{
	30, // 0: smartcore.bos.CreateAccountRequest.account:type_name -> smartcore.bos.Account
	30, // 1: smartcore.bos.ListAccountsResponse.accounts:type_name -> smartcore.bos.Account
	30, // 2: smartcore.bos.UpdateAccountRequest.account:type_name -> smartcore.bos.Account
	39, // 3: smartcore.bos.UpdateAccountRequest.update_mask:type_name -> google.protobuf.FieldMask
	40, // 4: smartcore.bos.RotateAccountClientSecretRequest.previous_secret_expire_time:type_name -> google.protobuf.Timestamp
	33, // 5: smartcore.bos.ListRolesResponse.roles:type_name -> smartcore.bos.Role
	33, // 6: smartcore.bos.CreateRoleRequest.role:type_name -> smartcore.bos.Role
	33, // 7: smartcore.bos.UpdateRoleRequest.role:type_name -> smartcore.bos.Role
	39, // 8: smartcore.bos.UpdateRoleRequest.update_mask:type_name -> google.protobuf.FieldMask
	34, // 9: smartcore.bos.ListRoleAssignmentsResponse.role_assignments:type_name -> smartcore.bos.RoleAssignment
	34, // 10: smartcore.bos.CreateRoleAssignmentRequest.role_assignment:type_name -> smartcore.bos.RoleAssignment
	35, // 11: smartcore.bos.ListPermissionsResponse.permissions:type_name -> smartcore.bos.Permission
	40, // 12: smartcore.bos.Account.create_time:type_name -> google.protobuf.Timestamp
	0,  // 13: smartcore.bos.Account.type:type_name -> smartcore.bos.Account.Type
	31, // 14: smartcore.bos.Account.user_details:type_name -> smartcore.bos.UserAccount
	32, // 15: smartcore.bos.Account.service_details:type_name -> smartcore.bos.ServiceAccount
	40, // 16: smartcore.bos.ServiceAccount.previous_secret_expire_time:type_name -> google.protobuf.Timestamp
	37, // 17: smartcore.bos.RoleAssignment.scope:type_name -> smartcore.bos.RoleAssignment.Scope
	38, // 18: smartcore.bos.AccountLimits.username:type_name -> smartcore.bos.AccountLimits.Field
	38, // 19: smartcore.bos.AccountLimits.password:type_name -> smartcore.bos.AccountLimits.Field
	38, // 20: smartcore.bos.AccountLimits.display_name:type_name -> smartcore.bos.AccountLimits.Field
	38, // 21: smartcore.bos.AccountLimits.description:type_name -> smartcore.bos.AccountLimits.Field
	1,  // 22: smartcore.bos.RoleAssignment.Scope.resource_type:type_name -> smartcore.bos.RoleAssignment.ResourceType
	2,  // 23: smartcore.bos.AccountApi.GetAccount:input_type -> smartcore.bos.GetAccountRequest
	4,  // 24: smartcore.bos.AccountApi.ListAccounts:input_type -> smartcore.bos.ListAccountsRequest
	3,  // 25: smartcore.bos.AccountApi.CreateAccount:input_type -> smartcore.bos.CreateAccountRequest
	6,  // 26: smartcore.bos.AccountApi.UpdateAccount:input_type -> smartcore.bos.UpdateAccountRequest
	7,  // 27: smartcore.bos.AccountApi.UpdateAccountPassword:input_type -> smartcore.bos.UpdateAccountPasswordRequest
	9,  // 28: smartcore.bos.AccountApi.RotateAccountClientSecret:input_type -> smartcore.bos.RotateAccountClientSecretRequest
	11, // 29: smartcore.bos.AccountApi.DeleteAccount:input_type -> smartcore.bos.DeleteAccountRequest
	13, // 30: smartcore.bos.AccountApi.GetRole:input_type -> smartcore.bos.GetRoleRequest
	14, // 31: smartcore.bos.AccountApi.ListRoles:input_type -> smartcore.bos.ListRolesRequest
	16, // 32: smartcore.bos.AccountApi.CreateRole:input_type -> smartcore.bos.CreateRoleRequest
	17, // 33: smartcore.bos.AccountApi.UpdateRole:input_type -> smartcore.bos.UpdateRoleRequest
	18, // 34: smartcore.bos.AccountApi.DeleteRole:input_type -> smartcore.bos.DeleteRoleRequest
	20, // 35: smartcore.bos.AccountApi.GetRoleAssignment:input_type -> smartcore.bos.GetRoleAssignmentRequest
	21, // 36: smartcore.bos.AccountApi.ListRoleAssignments:input_type -> smartcore.bos.ListRoleAssignmentsRequest
	23, // 37: smartcore.bos.AccountApi.CreateRoleAssignment:input_type -> smartcore.bos.CreateRoleAssignmentRequest
	24, // 38: smartcore.bos.AccountApi.DeleteRoleAssignment:input_type -> smartcore.bos.DeleteRoleAssignmentRequest
	26, // 39: smartcore.bos.AccountInfo.GetPermission:input_type -> smartcore.bos.GetPermissionRequest
	27, // 40: smartcore.bos.AccountInfo.ListPermissions:input_type -> smartcore.bos.ListPermissionsRequest
	29, // 41: smartcore.bos.AccountInfo.GetAccountLimits:input_type -> smartcore.bos.GetAccountLimitsRequest
	30, // 42: smartcore.bos.AccountApi.GetAccount:output_type -> smartcore.bos.Account
	5,  // 43: smartcore.bos.AccountApi.ListAccounts:output_type -> smartcore.bos.ListAccountsResponse
	30, // 44: smartcore.bos.AccountApi.CreateAccount:output_type -> smartcore.bos.Account
	30, // 45: smartcore.bos.AccountApi.UpdateAccount:output_type -> smartcore.bos.Account
	8,  // 46: smartcore.bos.AccountApi.UpdateAccountPassword:output_type -> smartcore.bos.UpdateAccountPasswordResponse
	10, // 47: smartcore.bos.AccountApi.RotateAccountClientSecret:output_type -> smartcore.bos.RotateAccountClientSecretResponse
	12, // 48: smartcore.bos.AccountApi.DeleteAccount:output_type -> smartcore.bos.DeleteAccountResponse
	33, // 49: smartcore.bos.AccountApi.GetRole:output_type -> smartcore.bos.Role
	15, // 50: smartcore.bos.AccountApi.ListRoles:output_type -> smartcore.bos.ListRolesResponse
	33, // 51: smartcore.bos.AccountApi.CreateRole:output_type -> smartcore.bos.Role
	33, // 52: smartcore.bos.AccountApi.UpdateRole:output_type -> smartcore.bos.Role
	19, // 53: smartcore.bos.AccountApi.DeleteRole:output_type -> smartcore.bos.DeleteRoleResponse
	34, // 54: smartcore.bos.AccountApi.GetRoleAssignment:output_type -> smartcore.bos.RoleAssignment
	22, // 55: smartcore.bos.AccountApi.ListRoleAssignments:output_type -> smartcore.bos.ListRoleAssignmentsResponse
	34, // 56: smartcore.bos.AccountApi.CreateRoleAssignment:output_type -> smartcore.bos.RoleAssignment
	25, // 57: smartcore.bos.AccountApi.DeleteRoleAssignment:output_type -> smartcore.bos.DeleteRoleAssignmentResponse
	35, // 58: smartcore.bos.AccountInfo.GetPermission:output_type -> smartcore.bos.Permission
	28, // 59: smartcore.bos.AccountInfo.ListPermissions:output_type -> smartcore.bos.ListPermissionsResponse
	36, // 60: smartcore.bos.AccountInfo.GetAccountLimits:output_type -> smartcore.bos.AccountLimits
	42, // [42:61] is the sub-list for method output_type
	23, // [23:42] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_account_proto_init() }
func file_account_proto_init() {
	if File_account_proto != nil {
		return
	}
	file_account_proto_msgTypes[28].OneofWrappers = []any{
		(*Account_UserDetails)(nil),
		(*Account_ServiceDetails)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_account_proto_rawDesc), len(file_account_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   37,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_account_proto_goTypes,
		DependencyIndexes: file_account_proto_depIdxs,
		EnumInfos:         file_account_proto_enumTypes,
		MessageInfos:      file_account_proto_msgTypes,
	}.Build()
	File_account_proto = out.File
	file_account_proto_goTypes = nil
	file_account_proto_depIdxs = nil
}
