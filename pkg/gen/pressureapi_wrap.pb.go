// Code generated by protoc-gen-wrapper. DO NOT EDIT.

package gen

import (
	wrap "github.com/smart-core-os/sc-golang/pkg/wrap"
	grpc "google.golang.org/grpc"
)

// WrapPressureApi	adapts a PressureApiServer	and presents it as a PressureApiClient
func WrapPressureApi(server PressureApiServer) *PressureApiWrapper {
	conn := wrap.ServerToClient(PressureApi_ServiceDesc, server)
	client := NewPressureApiClient(conn)
	return &PressureApiWrapper{
		PressureApiClient: client,
		server:            server,
		conn:              conn,
		desc:              PressureApi_ServiceDesc,
	}
}

type PressureApiWrapper struct {
	PressureApiClient

	server PressureApiServer
	conn   grpc.ClientConnInterface
	desc   grpc.ServiceDesc
}

// UnwrapServer returns the underlying server instance.
func (w *PressureApiWrapper) UnwrapServer() PressureApiServer {
	return w.server
}

// Unwrap implements wrap.Unwrapper and returns the underlying server instance as an unknown type.
func (w *PressureApiWrapper) Unwrap() any {
	return w.UnwrapServer()
}

func (w *PressureApiWrapper) UnwrapService() (grpc.ClientConnInterface, grpc.ServiceDesc) {
	return w.conn, w.desc
}
