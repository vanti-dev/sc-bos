// Code generated by protoc-gen-wrapper. DO NOT EDIT.

package gen

import (
	wrap "github.com/smart-core-os/sc-golang/pkg/wrap"
	grpc "google.golang.org/grpc"
)

// WrapTransportInfo	adapts a TransportInfoServer	and presents it as a TransportInfoClient
func WrapTransportInfo(server TransportInfoServer) *TransportInfoWrapper {
	conn := wrap.ServerToClient(TransportInfo_ServiceDesc, server)
	client := NewTransportInfoClient(conn)
	return &TransportInfoWrapper{
		TransportInfoClient: client,
		server:              server,
		conn:                conn,
		desc:                TransportInfo_ServiceDesc,
	}
}

type TransportInfoWrapper struct {
	TransportInfoClient

	server TransportInfoServer
	conn   grpc.ClientConnInterface
	desc   grpc.ServiceDesc
}

// UnwrapServer returns the underlying server instance.
func (w *TransportInfoWrapper) UnwrapServer() TransportInfoServer {
	return w.server
}

// Unwrap implements wrap.Unwrapper and returns the underlying server instance as an unknown type.
func (w *TransportInfoWrapper) Unwrap() any {
	return w.UnwrapServer()
}

func (w *TransportInfoWrapper) UnwrapService() (grpc.ClientConnInterface, grpc.ServiceDesc) {
	return w.conn, w.desc
}
