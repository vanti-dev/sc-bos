// Code generated by protoc-gen-wrapper. DO NOT EDIT.

package gen

import (
	wrap "github.com/smart-core-os/sc-golang/pkg/wrap"
	grpc "google.golang.org/grpc"
)

// WrapSoundSensorApi	adapts a SoundSensorApiServer	and presents it as a SoundSensorApiClient
func WrapSoundSensorApi(server SoundSensorApiServer) *SoundSensorApiWrapper {
	conn := wrap.ServerToClient(SoundSensorApi_ServiceDesc, server)
	client := NewSoundSensorApiClient(conn)
	return &SoundSensorApiWrapper{
		SoundSensorApiClient: client,
		server:               server,
		conn:                 conn,
		desc:                 SoundSensorApi_ServiceDesc,
	}
}

type SoundSensorApiWrapper struct {
	SoundSensorApiClient

	server SoundSensorApiServer
	conn   grpc.ClientConnInterface
	desc   grpc.ServiceDesc
}

// UnwrapServer returns the underlying server instance.
func (w *SoundSensorApiWrapper) UnwrapServer() SoundSensorApiServer {
	return w.server
}

// Unwrap implements wrap.Unwrapper and returns the underlying server instance as an unknown type.
func (w *SoundSensorApiWrapper) Unwrap() any {
	return w.UnwrapServer()
}

func (w *SoundSensorApiWrapper) UnwrapService() (grpc.ClientConnInterface, grpc.ServiceDesc) {
	return w.conn, w.desc
}
