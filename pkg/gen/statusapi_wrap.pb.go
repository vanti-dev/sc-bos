// Code generated by protoc-gen-wrapper. DO NOT EDIT.

package gen

import (
	"github.com/smart-core-os/sc-golang/pkg/wrap"
)

// WrapStatusApi	adapts a gen.StatusApiServer	and presents it as a gen.StatusApiClient
func WrapStatusApi(server StatusApiServer) StatusApiClient {
	conn := wrap.ServerToClient(StatusApi_ServiceDesc, server)
	client := NewStatusApiClient(conn)
	return &statusApiWrapper{
		StatusApiClient: client,
		server:          server,
	}
}

type statusApiWrapper struct {
	StatusApiClient

	server StatusApiServer
}

// compile time check that we implement the interface we need
var _ StatusApiClient = (*statusApiWrapper)(nil)

// UnwrapServer returns the underlying server instance.
func (w *statusApiWrapper) UnwrapServer() StatusApiServer {
	return w.server
}

// Unwrap implements wrap.Unwrapper and returns the underlying server instance as an unknown type.
func (w *statusApiWrapper) Unwrap() any {
	return w.UnwrapServer()
}
