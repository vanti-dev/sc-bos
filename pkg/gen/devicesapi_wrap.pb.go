// Code generated by protoc-gen-wrapper. DO NOT EDIT.

package gen

import (
	"github.com/smart-core-os/sc-golang/pkg/wrap"
)

// WrapDevicesApi	adapts a gen.DevicesApiServer	and presents it as a gen.DevicesApiClient
func WrapDevicesApi(server DevicesApiServer) DevicesApiClient {
	conn := wrap.ServerToClient(DevicesApi_ServiceDesc, server)
	client := NewDevicesApiClient(conn)
	return &devicesApiWrapper{
		DevicesApiClient: client,
		server:           server,
	}
}

type devicesApiWrapper struct {
	DevicesApiClient

	server DevicesApiServer
}

// compile time check that we implement the interface we need
var _ DevicesApiClient = (*devicesApiWrapper)(nil)

// UnwrapServer returns the underlying server instance.
func (w *devicesApiWrapper) UnwrapServer() DevicesApiServer {
	return w.server
}

// Unwrap implements wrap.Unwrapper and returns the underlying server instance as an unknown type.
func (w *devicesApiWrapper) Unwrap() any {
	return w.UnwrapServer()
}
