// Code generated by protoc-gen-wrapper. DO NOT EDIT.

package gen

import (
	wrap "github.com/smart-core-os/sc-golang/pkg/wrap"
	grpc "google.golang.org/grpc"
)

// WrapDevicesApi	adapts a gen.DevicesApiServer	and presents it as a gen.DevicesApiClient
func WrapDevicesApi(server DevicesApiServer) *DevicesApiWrapper {
	conn := wrap.ServerToClient(DevicesApi_ServiceDesc, server)
	client := NewDevicesApiClient(conn)
	return &DevicesApiWrapper{
		DevicesApiClient: client,
		server:           server,
		conn:             conn,
		desc:             DevicesApi_ServiceDesc,
	}
}

type DevicesApiWrapper struct {
	DevicesApiClient

	server DevicesApiServer
	conn   grpc.ClientConnInterface
	desc   grpc.ServiceDesc
}

// UnwrapServer returns the underlying server instance.
func (w *DevicesApiWrapper) UnwrapServer() DevicesApiServer {
	return w.server
}

// Unwrap implements wrap.Unwrapper and returns the underlying server instance as an unknown type.
func (w *DevicesApiWrapper) Unwrap() any {
	return w.UnwrapServer()
}

func (w *DevicesApiWrapper) UnwrapService() (grpc.ClientConnInterface, grpc.ServiceDesc) {
	return w.conn, w.desc
}
