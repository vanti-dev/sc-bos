// Code generated by protoc-gen-wrapper. DO NOT EDIT.

package gen

import (
	wrap "github.com/smart-core-os/sc-golang/pkg/wrap"
	grpc "google.golang.org/grpc"
)

// WrapServiceTicketApi	adapts a ServiceTicketApiServer	and presents it as a ServiceTicketApiClient
func WrapServiceTicketApi(server ServiceTicketApiServer) *ServiceTicketApiWrapper {
	conn := wrap.ServerToClient(ServiceTicketApi_ServiceDesc, server)
	client := NewServiceTicketApiClient(conn)
	return &ServiceTicketApiWrapper{
		ServiceTicketApiClient: client,
		server:                 server,
		conn:                   conn,
		desc:                   ServiceTicketApi_ServiceDesc,
	}
}

type ServiceTicketApiWrapper struct {
	ServiceTicketApiClient

	server ServiceTicketApiServer
	conn   grpc.ClientConnInterface
	desc   grpc.ServiceDesc
}

// UnwrapServer returns the underlying server instance.
func (w *ServiceTicketApiWrapper) UnwrapServer() ServiceTicketApiServer {
	return w.server
}

// Unwrap implements wrap.Unwrapper and returns the underlying server instance as an unknown type.
func (w *ServiceTicketApiWrapper) Unwrap() any {
	return w.UnwrapServer()
}

func (w *ServiceTicketApiWrapper) UnwrapService() (grpc.ClientConnInterface, grpc.ServiceDesc) {
	return w.conn, w.desc
}
