// Code generated by protoc-gen-wrapper. DO NOT EDIT.

package gen

import (
	"github.com/smart-core-os/sc-golang/pkg/wrap"
)

// WrapMeterHistory	adapts a gen.MeterHistoryServer	and presents it as a gen.MeterHistoryClient
func WrapMeterHistory(server MeterHistoryServer) MeterHistoryClient {
	conn := wrap.ServerToClient(MeterHistory_ServiceDesc, server)
	client := NewMeterHistoryClient(conn)
	return &meterHistoryWrapper{
		MeterHistoryClient: client,
		server:             server,
	}
}

type meterHistoryWrapper struct {
	MeterHistoryClient

	server MeterHistoryServer
}

// compile time check that we implement the interface we need
var _ MeterHistoryClient = (*meterHistoryWrapper)(nil)

// UnwrapServer returns the underlying server instance.
func (w *meterHistoryWrapper) UnwrapServer() MeterHistoryServer {
	return w.server
}

// Unwrap implements wrap.Unwrapper and returns the underlying server instance as an unknown type.
func (w *meterHistoryWrapper) Unwrap() any {
	return w.UnwrapServer()
}
