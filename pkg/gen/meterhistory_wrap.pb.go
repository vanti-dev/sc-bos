// Code generated by protoc-gen-wrapper. DO NOT EDIT.

package gen

import (
	context "context"
	grpc "google.golang.org/grpc"
)

// WrapMeterHistory	adapts a MeterHistoryServer	and presents it as a MeterHistoryClient
func WrapMeterHistory(server MeterHistoryServer) MeterHistoryClient {
	return &meterHistoryWrapper{server}
}

type meterHistoryWrapper struct {
	server MeterHistoryServer
}

// compile time check that we implement the interface we need
var _ MeterHistoryClient = (*meterHistoryWrapper)(nil)

// UnwrapServer returns the underlying server instance.
func (w *meterHistoryWrapper) UnwrapServer() MeterHistoryServer {
	return w.server
}

// Unwrap implements wrap.Unwrapper and returns the underlying server instance as an unknown type.
func (w *meterHistoryWrapper) Unwrap() any {
	return w.UnwrapServer()
}

func (w *meterHistoryWrapper) ListMeterReadingHistory(ctx context.Context, req *ListMeterReadingHistoryRequest, _ ...grpc.CallOption) (*ListMeterReadingHistoryResponse, error) {
	return w.server.ListMeterReadingHistory(ctx, req)
}
