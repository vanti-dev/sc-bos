// Code generated by protoc-gen-wrapper. DO NOT EDIT.

package gen

import (
	context "context"
	grpc "google.golang.org/grpc"
)

// WrapPriorityApi	adapts a PriorityApiServer	and presents it as a PriorityApiClient
func WrapPriorityApi(server PriorityApiServer) PriorityApiClient {
	return &priorityApiWrapper{server}
}

type priorityApiWrapper struct {
	server PriorityApiServer
}

// compile time check that we implement the interface we need
var _ PriorityApiClient = (*priorityApiWrapper)(nil)

// UnwrapServer returns the underlying server instance.
func (w *priorityApiWrapper) UnwrapServer() PriorityApiServer {
	return w.server
}

// Unwrap implements wrap.Unwrapper and returns the underlying server instance as an unknown type.
func (w *priorityApiWrapper) Unwrap() any {
	return w.UnwrapServer()
}

func (w *priorityApiWrapper) ClearPriorityEntry(ctx context.Context, req *ClearPriorityValueRequest, _ ...grpc.CallOption) (*ClearPriorityValueResponse, error) {
	return w.server.ClearPriorityEntry(ctx, req)
}
