// Code generated by protoc-gen-wrapper. DO NOT EDIT.

package gen

import (
	"github.com/smart-core-os/sc-golang/pkg/wrap"
)

// WrapTemperatureApi	adapts a gen.TemperatureApiServer	and presents it as a gen.TemperatureApiClient
func WrapTemperatureApi(server TemperatureApiServer) TemperatureApiClient {
	conn := wrap.ServerToClient(TemperatureApi_ServiceDesc, server)
	client := NewTemperatureApiClient(conn)
	return &temperatureApiWrapper{
		TemperatureApiClient: client,
		server:               server,
	}
}

type temperatureApiWrapper struct {
	TemperatureApiClient

	server TemperatureApiServer
}

// compile time check that we implement the interface we need
var _ TemperatureApiClient = (*temperatureApiWrapper)(nil)

// UnwrapServer returns the underlying server instance.
func (w *temperatureApiWrapper) UnwrapServer() TemperatureApiServer {
	return w.server
}

// Unwrap implements wrap.Unwrapper and returns the underlying server instance as an unknown type.
func (w *temperatureApiWrapper) Unwrap() any {
	return w.UnwrapServer()
}
