// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: fluid_flow.proto

package gen

import (
	types "github.com/smart-core-os/sc-api/go/types"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Direction describes the control of fluid flow. It is either flowing the fluid, returning the fluid passed or is blocking the flow.
type FluidFlow_Direction int32

const (
	FluidFlow_DIRECTION_UNSPECIFIED FluidFlow_Direction = 0
	// The device is set to allow fluid to flow through it.
	FluidFlow_FLOW FluidFlow_Direction = 1
	// The device is set to return the fluid that is passing through it.
	FluidFlow_RETURN FluidFlow_Direction = 2
	// The device is set to block the flow of fluid.
	FluidFlow_BLOCKING FluidFlow_Direction = 3
)

// Enum value maps for FluidFlow_Direction.
var (
	FluidFlow_Direction_name = map[int32]string{
		0: "DIRECTION_UNSPECIFIED",
		1: "FLOW",
		2: "RETURN",
		3: "BLOCKING",
	}
	FluidFlow_Direction_value = map[string]int32{
		"DIRECTION_UNSPECIFIED": 0,
		"FLOW":                  1,
		"RETURN":                2,
		"BLOCKING":              3,
	}
)

func (x FluidFlow_Direction) Enum() *FluidFlow_Direction {
	p := new(FluidFlow_Direction)
	*p = x
	return p
}

func (x FluidFlow_Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FluidFlow_Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_fluid_flow_proto_enumTypes[0].Descriptor()
}

func (FluidFlow_Direction) Type() protoreflect.EnumType {
	return &file_fluid_flow_proto_enumTypes[0]
}

func (x FluidFlow_Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FluidFlow_Direction.Descriptor instead.
func (FluidFlow_Direction) EnumDescriptor() ([]byte, []int) {
	return file_fluid_flow_proto_rawDescGZIP(), []int{0, 0}
}

// FluidFlow represents the state and control parameters of a fluid flow device.
type FluidFlow struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The target flow rate set at the device e.g. L/s
	TargetFlowRate *float32 `protobuf:"fixed32,1,opt,name=target_flow_rate,json=targetFlowRate,proto3,oneof" json:"target_flow_rate,omitempty"`
	// If the flow is powered by a pump or similar device, this field indicates
	// the frequency at which the drive operates to achieve the desired flow rate.
	// This is particularly relevant for variable frequency drives (VFDs) used in pumps to control the speed and flow rate.
	TargetDriveFrequency *float32 `protobuf:"fixed32,2,opt,name=target_drive_frequency,json=targetDriveFrequency,proto3,oneof" json:"target_drive_frequency,omitempty"`
	// The measured flow rate e.g. L/s
	// Output only
	FlowRate *float32 `protobuf:"fixed32,3,opt,name=flow_rate,json=flowRate,proto3,oneof" json:"flow_rate,omitempty"`
	// The measured drive frequency e.g. Hz
	// Output only
	DriveFrequency *float32 `protobuf:"fixed32,4,opt,name=drive_frequency,json=driveFrequency,proto3,oneof" json:"drive_frequency,omitempty"`
	// The flow device operation direction
	Direction     FluidFlow_Direction `protobuf:"varint,11,opt,name=direction,proto3,enum=smartcore.bos.FluidFlow_Direction" json:"direction,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FluidFlow) Reset() {
	*x = FluidFlow{}
	mi := &file_fluid_flow_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FluidFlow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FluidFlow) ProtoMessage() {}

func (x *FluidFlow) ProtoReflect() protoreflect.Message {
	mi := &file_fluid_flow_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FluidFlow.ProtoReflect.Descriptor instead.
func (*FluidFlow) Descriptor() ([]byte, []int) {
	return file_fluid_flow_proto_rawDescGZIP(), []int{0}
}

func (x *FluidFlow) GetTargetFlowRate() float32 {
	if x != nil && x.TargetFlowRate != nil {
		return *x.TargetFlowRate
	}
	return 0
}

func (x *FluidFlow) GetTargetDriveFrequency() float32 {
	if x != nil && x.TargetDriveFrequency != nil {
		return *x.TargetDriveFrequency
	}
	return 0
}

func (x *FluidFlow) GetFlowRate() float32 {
	if x != nil && x.FlowRate != nil {
		return *x.FlowRate
	}
	return 0
}

func (x *FluidFlow) GetDriveFrequency() float32 {
	if x != nil && x.DriveFrequency != nil {
		return *x.DriveFrequency
	}
	return 0
}

func (x *FluidFlow) GetDirection() FluidFlow_Direction {
	if x != nil {
		return x.Direction
	}
	return FluidFlow_DIRECTION_UNSPECIFIED
}

type GetFluidFlowRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ReadMask      *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=read_mask,json=readMask,proto3" json:"read_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFluidFlowRequest) Reset() {
	*x = GetFluidFlowRequest{}
	mi := &file_fluid_flow_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFluidFlowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFluidFlowRequest) ProtoMessage() {}

func (x *GetFluidFlowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fluid_flow_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFluidFlowRequest.ProtoReflect.Descriptor instead.
func (*GetFluidFlowRequest) Descriptor() ([]byte, []int) {
	return file_fluid_flow_proto_rawDescGZIP(), []int{1}
}

func (x *GetFluidFlowRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetFluidFlowRequest) GetReadMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.ReadMask
	}
	return nil
}

type PullFluidFlowRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ReadMask      *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=read_mask,json=readMask,proto3" json:"read_mask,omitempty"`
	UpdatesOnly   bool                   `protobuf:"varint,3,opt,name=updates_only,json=updatesOnly,proto3" json:"updates_only,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PullFluidFlowRequest) Reset() {
	*x = PullFluidFlowRequest{}
	mi := &file_fluid_flow_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PullFluidFlowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullFluidFlowRequest) ProtoMessage() {}

func (x *PullFluidFlowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fluid_flow_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullFluidFlowRequest.ProtoReflect.Descriptor instead.
func (*PullFluidFlowRequest) Descriptor() ([]byte, []int) {
	return file_fluid_flow_proto_rawDescGZIP(), []int{2}
}

func (x *PullFluidFlowRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PullFluidFlowRequest) GetReadMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.ReadMask
	}
	return nil
}

func (x *PullFluidFlowRequest) GetUpdatesOnly() bool {
	if x != nil {
		return x.UpdatesOnly
	}
	return false
}

type PullFluidFlowResponse struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	Changes       []*PullFluidFlowResponse_Change `protobuf:"bytes,1,rep,name=changes,proto3" json:"changes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PullFluidFlowResponse) Reset() {
	*x = PullFluidFlowResponse{}
	mi := &file_fluid_flow_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PullFluidFlowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullFluidFlowResponse) ProtoMessage() {}

func (x *PullFluidFlowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fluid_flow_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullFluidFlowResponse.ProtoReflect.Descriptor instead.
func (*PullFluidFlowResponse) Descriptor() ([]byte, []int) {
	return file_fluid_flow_proto_rawDescGZIP(), []int{3}
}

func (x *PullFluidFlowResponse) GetChanges() []*PullFluidFlowResponse_Change {
	if x != nil {
		return x.Changes
	}
	return nil
}

type UpdateFluidFlowRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Flow          *FluidFlow             `protobuf:"bytes,2,opt,name=flow,proto3" json:"flow,omitempty"`
	UpdateMask    *fieldmaskpb.FieldMask `protobuf:"bytes,3,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateFluidFlowRequest) Reset() {
	*x = UpdateFluidFlowRequest{}
	mi := &file_fluid_flow_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateFluidFlowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFluidFlowRequest) ProtoMessage() {}

func (x *UpdateFluidFlowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fluid_flow_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFluidFlowRequest.ProtoReflect.Descriptor instead.
func (*UpdateFluidFlowRequest) Descriptor() ([]byte, []int) {
	return file_fluid_flow_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateFluidFlowRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateFluidFlowRequest) GetFlow() *FluidFlow {
	if x != nil {
		return x.Flow
	}
	return nil
}

func (x *UpdateFluidFlowRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

type UpdateFluidFlowResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Flow          *FluidFlow             `protobuf:"bytes,1,opt,name=flow,proto3" json:"flow,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateFluidFlowResponse) Reset() {
	*x = UpdateFluidFlowResponse{}
	mi := &file_fluid_flow_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateFluidFlowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFluidFlowResponse) ProtoMessage() {}

func (x *UpdateFluidFlowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fluid_flow_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFluidFlowResponse.ProtoReflect.Descriptor instead.
func (*UpdateFluidFlowResponse) Descriptor() ([]byte, []int) {
	return file_fluid_flow_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateFluidFlowResponse) GetFlow() *FluidFlow {
	if x != nil {
		return x.Flow
	}
	return nil
}

type DescribeFluidFlowRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribeFluidFlowRequest) Reset() {
	*x = DescribeFluidFlowRequest{}
	mi := &file_fluid_flow_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeFluidFlowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeFluidFlowRequest) ProtoMessage() {}

func (x *DescribeFluidFlowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fluid_flow_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeFluidFlowRequest.ProtoReflect.Descriptor instead.
func (*DescribeFluidFlowRequest) Descriptor() ([]byte, []int) {
	return file_fluid_flow_proto_rawDescGZIP(), []int{6}
}

func (x *DescribeFluidFlowRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// FluidFlowSupport describes the capabilities of devices implementing this trait
type FluidFlowSupport struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// How a named device supports read/write/pull apis
	ResourceSupport *types.ResourceSupport `protobuf:"bytes,1,opt,name=resource_support,json=resourceSupport,proto3" json:"resource_support,omitempty"`
	// The unit associated with the flow rate target and measured values
	FlowRateUnit string `protobuf:"bytes,2,opt,name=flow_rate_unit,json=flowRateUnit,proto3" json:"flow_rate_unit,omitempty"`
	// The unit associated with the drive frequency target and measured values
	DriveFrequencyUnit string `protobuf:"bytes,3,opt,name=drive_frequency_unit,json=driveFrequencyUnit,proto3" json:"drive_frequency_unit,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *FluidFlowSupport) Reset() {
	*x = FluidFlowSupport{}
	mi := &file_fluid_flow_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FluidFlowSupport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FluidFlowSupport) ProtoMessage() {}

func (x *FluidFlowSupport) ProtoReflect() protoreflect.Message {
	mi := &file_fluid_flow_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FluidFlowSupport.ProtoReflect.Descriptor instead.
func (*FluidFlowSupport) Descriptor() ([]byte, []int) {
	return file_fluid_flow_proto_rawDescGZIP(), []int{7}
}

func (x *FluidFlowSupport) GetResourceSupport() *types.ResourceSupport {
	if x != nil {
		return x.ResourceSupport
	}
	return nil
}

func (x *FluidFlowSupport) GetFlowRateUnit() string {
	if x != nil {
		return x.FlowRateUnit
	}
	return ""
}

func (x *FluidFlowSupport) GetDriveFrequencyUnit() string {
	if x != nil {
		return x.DriveFrequencyUnit
	}
	return ""
}

type PullFluidFlowResponse_Change struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ChangeTime    *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=change_time,json=changeTime,proto3" json:"change_time,omitempty"`
	Flow          *FluidFlow             `protobuf:"bytes,3,opt,name=flow,proto3" json:"flow,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PullFluidFlowResponse_Change) Reset() {
	*x = PullFluidFlowResponse_Change{}
	mi := &file_fluid_flow_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PullFluidFlowResponse_Change) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullFluidFlowResponse_Change) ProtoMessage() {}

func (x *PullFluidFlowResponse_Change) ProtoReflect() protoreflect.Message {
	mi := &file_fluid_flow_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullFluidFlowResponse_Change.ProtoReflect.Descriptor instead.
func (*PullFluidFlowResponse_Change) Descriptor() ([]byte, []int) {
	return file_fluid_flow_proto_rawDescGZIP(), []int{3, 0}
}

func (x *PullFluidFlowResponse_Change) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PullFluidFlowResponse_Change) GetChangeTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ChangeTime
	}
	return nil
}

func (x *PullFluidFlowResponse_Change) GetFlow() *FluidFlow {
	if x != nil {
		return x.Flow
	}
	return nil
}

var File_fluid_flow_proto protoreflect.FileDescriptor

const file_fluid_flow_proto_rawDesc = "" +
	"\n" +
	"\x10fluid_flow.proto\x12\rsmartcore.bos\x1a google/protobuf/field_mask.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x10types/info.proto\"\xa5\x03\n" +
	"\tFluidFlow\x12-\n" +
	"\x10target_flow_rate\x18\x01 \x01(\x02H\x00R\x0etargetFlowRate\x88\x01\x01\x129\n" +
	"\x16target_drive_frequency\x18\x02 \x01(\x02H\x01R\x14targetDriveFrequency\x88\x01\x01\x12 \n" +
	"\tflow_rate\x18\x03 \x01(\x02H\x02R\bflowRate\x88\x01\x01\x12,\n" +
	"\x0fdrive_frequency\x18\x04 \x01(\x02H\x03R\x0edriveFrequency\x88\x01\x01\x12@\n" +
	"\tdirection\x18\v \x01(\x0e2\".smartcore.bos.FluidFlow.DirectionR\tdirection\"J\n" +
	"\tDirection\x12\x19\n" +
	"\x15DIRECTION_UNSPECIFIED\x10\x00\x12\b\n" +
	"\x04FLOW\x10\x01\x12\n" +
	"\n" +
	"\x06RETURN\x10\x02\x12\f\n" +
	"\bBLOCKING\x10\x03B\x13\n" +
	"\x11_target_flow_rateB\x19\n" +
	"\x17_target_drive_frequencyB\f\n" +
	"\n" +
	"_flow_rateB\x12\n" +
	"\x10_drive_frequency\"b\n" +
	"\x13GetFluidFlowRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x127\n" +
	"\tread_mask\x18\x02 \x01(\v2\x1a.google.protobuf.FieldMaskR\breadMask\"\x86\x01\n" +
	"\x14PullFluidFlowRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x127\n" +
	"\tread_mask\x18\x02 \x01(\v2\x1a.google.protobuf.FieldMaskR\breadMask\x12!\n" +
	"\fupdates_only\x18\x03 \x01(\bR\vupdatesOnly\"\xe8\x01\n" +
	"\x15PullFluidFlowResponse\x12E\n" +
	"\achanges\x18\x01 \x03(\v2+.smartcore.bos.PullFluidFlowResponse.ChangeR\achanges\x1a\x87\x01\n" +
	"\x06Change\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12;\n" +
	"\vchange_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"changeTime\x12,\n" +
	"\x04flow\x18\x03 \x01(\v2\x18.smartcore.bos.FluidFlowR\x04flow\"\x97\x01\n" +
	"\x16UpdateFluidFlowRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12,\n" +
	"\x04flow\x18\x02 \x01(\v2\x18.smartcore.bos.FluidFlowR\x04flow\x12;\n" +
	"\vupdate_mask\x18\x03 \x01(\v2\x1a.google.protobuf.FieldMaskR\n" +
	"updateMask\"G\n" +
	"\x17UpdateFluidFlowResponse\x12,\n" +
	"\x04flow\x18\x01 \x01(\v2\x18.smartcore.bos.FluidFlowR\x04flow\".\n" +
	"\x18DescribeFluidFlowRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"\xb7\x01\n" +
	"\x10FluidFlowSupport\x12K\n" +
	"\x10resource_support\x18\x01 \x01(\v2 .smartcore.types.ResourceSupportR\x0fresourceSupport\x12$\n" +
	"\x0eflow_rate_unit\x18\x02 \x01(\tR\fflowRateUnit\x120\n" +
	"\x14drive_frequency_unit\x18\x03 \x01(\tR\x12driveFrequencyUnit2\x94\x02\n" +
	"\fFluidFlowApi\x12N\n" +
	"\fGetFluidFlow\x12\".smartcore.bos.GetFluidFlowRequest\x1a\x18.smartcore.bos.FluidFlow\"\x00\x12^\n" +
	"\rPullFluidFlow\x12#.smartcore.bos.PullFluidFlowRequest\x1a$.smartcore.bos.PullFluidFlowResponse\"\x000\x01\x12T\n" +
	"\x0fUpdateFluidFlow\x12%.smartcore.bos.UpdateFluidFlowRequest\x1a\x18.smartcore.bos.FluidFlow\"\x002p\n" +
	"\rFluidFlowInfo\x12_\n" +
	"\x11DescribeFluidFlow\x12'.smartcore.bos.DescribeFluidFlowRequest\x1a\x1f.smartcore.bos.FluidFlowSupport\"\x00B%Z#github.com/vanti-dev/sc-bos/pkg/genb\x06proto3"

var (
	file_fluid_flow_proto_rawDescOnce sync.Once
	file_fluid_flow_proto_rawDescData []byte
)

func file_fluid_flow_proto_rawDescGZIP() []byte {
	file_fluid_flow_proto_rawDescOnce.Do(func() {
		file_fluid_flow_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_fluid_flow_proto_rawDesc), len(file_fluid_flow_proto_rawDesc)))
	})
	return file_fluid_flow_proto_rawDescData
}

var file_fluid_flow_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_fluid_flow_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_fluid_flow_proto_goTypes = []any{
	(FluidFlow_Direction)(0),             // 0: smartcore.bos.FluidFlow.Direction
	(*FluidFlow)(nil),                    // 1: smartcore.bos.FluidFlow
	(*GetFluidFlowRequest)(nil),          // 2: smartcore.bos.GetFluidFlowRequest
	(*PullFluidFlowRequest)(nil),         // 3: smartcore.bos.PullFluidFlowRequest
	(*PullFluidFlowResponse)(nil),        // 4: smartcore.bos.PullFluidFlowResponse
	(*UpdateFluidFlowRequest)(nil),       // 5: smartcore.bos.UpdateFluidFlowRequest
	(*UpdateFluidFlowResponse)(nil),      // 6: smartcore.bos.UpdateFluidFlowResponse
	(*DescribeFluidFlowRequest)(nil),     // 7: smartcore.bos.DescribeFluidFlowRequest
	(*FluidFlowSupport)(nil),             // 8: smartcore.bos.FluidFlowSupport
	(*PullFluidFlowResponse_Change)(nil), // 9: smartcore.bos.PullFluidFlowResponse.Change
	(*fieldmaskpb.FieldMask)(nil),        // 10: google.protobuf.FieldMask
	(*types.ResourceSupport)(nil),        // 11: smartcore.types.ResourceSupport
	(*timestamppb.Timestamp)(nil),        // 12: google.protobuf.Timestamp
}
var file_fluid_flow_proto_depIdxs = []int32{
	0,  // 0: smartcore.bos.FluidFlow.direction:type_name -> smartcore.bos.FluidFlow.Direction
	10, // 1: smartcore.bos.GetFluidFlowRequest.read_mask:type_name -> google.protobuf.FieldMask
	10, // 2: smartcore.bos.PullFluidFlowRequest.read_mask:type_name -> google.protobuf.FieldMask
	9,  // 3: smartcore.bos.PullFluidFlowResponse.changes:type_name -> smartcore.bos.PullFluidFlowResponse.Change
	1,  // 4: smartcore.bos.UpdateFluidFlowRequest.flow:type_name -> smartcore.bos.FluidFlow
	10, // 5: smartcore.bos.UpdateFluidFlowRequest.update_mask:type_name -> google.protobuf.FieldMask
	1,  // 6: smartcore.bos.UpdateFluidFlowResponse.flow:type_name -> smartcore.bos.FluidFlow
	11, // 7: smartcore.bos.FluidFlowSupport.resource_support:type_name -> smartcore.types.ResourceSupport
	12, // 8: smartcore.bos.PullFluidFlowResponse.Change.change_time:type_name -> google.protobuf.Timestamp
	1,  // 9: smartcore.bos.PullFluidFlowResponse.Change.flow:type_name -> smartcore.bos.FluidFlow
	2,  // 10: smartcore.bos.FluidFlowApi.GetFluidFlow:input_type -> smartcore.bos.GetFluidFlowRequest
	3,  // 11: smartcore.bos.FluidFlowApi.PullFluidFlow:input_type -> smartcore.bos.PullFluidFlowRequest
	5,  // 12: smartcore.bos.FluidFlowApi.UpdateFluidFlow:input_type -> smartcore.bos.UpdateFluidFlowRequest
	7,  // 13: smartcore.bos.FluidFlowInfo.DescribeFluidFlow:input_type -> smartcore.bos.DescribeFluidFlowRequest
	1,  // 14: smartcore.bos.FluidFlowApi.GetFluidFlow:output_type -> smartcore.bos.FluidFlow
	4,  // 15: smartcore.bos.FluidFlowApi.PullFluidFlow:output_type -> smartcore.bos.PullFluidFlowResponse
	1,  // 16: smartcore.bos.FluidFlowApi.UpdateFluidFlow:output_type -> smartcore.bos.FluidFlow
	8,  // 17: smartcore.bos.FluidFlowInfo.DescribeFluidFlow:output_type -> smartcore.bos.FluidFlowSupport
	14, // [14:18] is the sub-list for method output_type
	10, // [10:14] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_fluid_flow_proto_init() }
func file_fluid_flow_proto_init() {
	if File_fluid_flow_proto != nil {
		return
	}
	file_fluid_flow_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_fluid_flow_proto_rawDesc), len(file_fluid_flow_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_fluid_flow_proto_goTypes,
		DependencyIndexes: file_fluid_flow_proto_depIdxs,
		EnumInfos:         file_fluid_flow_proto_enumTypes,
		MessageInfos:      file_fluid_flow_proto_msgTypes,
	}.Build()
	File_fluid_flow_proto = out.File
	file_fluid_flow_proto_goTypes = nil
	file_fluid_flow_proto_depIdxs = nil
}
