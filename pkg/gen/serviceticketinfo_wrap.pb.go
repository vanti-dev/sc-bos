// Code generated by protoc-gen-wrapper. DO NOT EDIT.

package gen

import (
	wrap "github.com/smart-core-os/sc-golang/pkg/wrap"
	grpc "google.golang.org/grpc"
)

// WrapServiceTicketInfo	adapts a ServiceTicketInfoServer	and presents it as a ServiceTicketInfoClient
func WrapServiceTicketInfo(server ServiceTicketInfoServer) *ServiceTicketInfoWrapper {
	conn := wrap.ServerToClient(ServiceTicketInfo_ServiceDesc, server)
	client := NewServiceTicketInfoClient(conn)
	return &ServiceTicketInfoWrapper{
		ServiceTicketInfoClient: client,
		server:                  server,
		conn:                    conn,
		desc:                    ServiceTicketInfo_ServiceDesc,
	}
}

type ServiceTicketInfoWrapper struct {
	ServiceTicketInfoClient

	server ServiceTicketInfoServer
	conn   grpc.ClientConnInterface
	desc   grpc.ServiceDesc
}

// UnwrapServer returns the underlying server instance.
func (w *ServiceTicketInfoWrapper) UnwrapServer() ServiceTicketInfoServer {
	return w.server
}

// Unwrap implements wrap.Unwrapper and returns the underlying server instance as an unknown type.
func (w *ServiceTicketInfoWrapper) Unwrap() any {
	return w.UnwrapServer()
}

func (w *ServiceTicketInfoWrapper) UnwrapService() (grpc.ClientConnInterface, grpc.ServiceDesc) {
	return w.conn, w.desc
}
