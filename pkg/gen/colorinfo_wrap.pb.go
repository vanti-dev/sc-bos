// Code generated by protoc-gen-wrapper. DO NOT EDIT.

package gen

import (
	"github.com/smart-core-os/sc-golang/pkg/wrap"
)

// WrapColorInfo	adapts a gen.ColorInfoServer	and presents it as a gen.ColorInfoClient
func WrapColorInfo(server ColorInfoServer) ColorInfoClient {
	conn := wrap.ServerToClient(ColorInfo_ServiceDesc, server)
	client := NewColorInfoClient(conn)
	return &colorInfoWrapper{
		ColorInfoClient: client,
		server:          server,
	}
}

type colorInfoWrapper struct {
	ColorInfoClient

	server ColorInfoServer
}

// compile time check that we implement the interface we need
var _ ColorInfoClient = (*colorInfoWrapper)(nil)

// UnwrapServer returns the underlying server instance.
func (w *colorInfoWrapper) UnwrapServer() ColorInfoServer {
	return w.server
}

// Unwrap implements wrap.Unwrapper and returns the underlying server instance as an unknown type.
func (w *colorInfoWrapper) Unwrap() any {
	return w.UnwrapServer()
}
