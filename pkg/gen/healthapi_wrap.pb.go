// Code generated by protoc-gen-wrapper. DO NOT EDIT.

package gen

import (
	wrap "github.com/smart-core-os/sc-golang/pkg/wrap"
	grpc "google.golang.org/grpc"
)

// WrapHealthApi	adapts a HealthApiServer	and presents it as a HealthApiClient
func WrapHealthApi(server HealthApiServer) *HealthApiWrapper {
	conn := wrap.ServerToClient(HealthApi_ServiceDesc, server)
	client := NewHealthApiClient(conn)
	return &HealthApiWrapper{
		HealthApiClient: client,
		server:          server,
		conn:            conn,
		desc:            HealthApi_ServiceDesc,
	}
}

type HealthApiWrapper struct {
	HealthApiClient

	server HealthApiServer
	conn   grpc.ClientConnInterface
	desc   grpc.ServiceDesc
}

// UnwrapServer returns the underlying server instance.
func (w *HealthApiWrapper) UnwrapServer() HealthApiServer {
	return w.server
}

// Unwrap implements wrap.Unwrapper and returns the underlying server instance as an unknown type.
func (w *HealthApiWrapper) Unwrap() any {
	return w.UnwrapServer()
}

func (w *HealthApiWrapper) UnwrapService() (grpc.ClientConnInterface, grpc.ServiceDesc) {
	return w.conn, w.desc
}
