// Code generated by protoc-gen-wrapper. DO NOT EDIT.

package gen

import (
	"github.com/smart-core-os/sc-golang/pkg/wrap"
)

// WrapTenantApi	adapts a gen.TenantApiServer	and presents it as a gen.TenantApiClient
func WrapTenantApi(server TenantApiServer) TenantApiClient {
	conn := wrap.ServerToClient(TenantApi_ServiceDesc, server)
	client := NewTenantApiClient(conn)
	return &tenantApiWrapper{
		TenantApiClient: client,
		server:          server,
	}
}

type tenantApiWrapper struct {
	TenantApiClient

	server TenantApiServer
}

// compile time check that we implement the interface we need
var _ TenantApiClient = (*tenantApiWrapper)(nil)

// UnwrapServer returns the underlying server instance.
func (w *tenantApiWrapper) UnwrapServer() TenantApiServer {
	return w.server
}

// Unwrap implements wrap.Unwrapper and returns the underlying server instance as an unknown type.
func (w *tenantApiWrapper) Unwrap() any {
	return w.UnwrapServer()
}
