// Code generated by protoc-gen-wrapper. DO NOT EDIT.

package gen

import (
	wrap "github.com/smart-core-os/sc-golang/pkg/wrap"
	grpc "google.golang.org/grpc"
)

// WrapElectricHistory	adapts a ElectricHistoryServer	and presents it as a ElectricHistoryClient
func WrapElectricHistory(server ElectricHistoryServer) *ElectricHistoryWrapper {
	conn := wrap.ServerToClient(ElectricHistory_ServiceDesc, server)
	client := NewElectricHistoryClient(conn)
	return &ElectricHistoryWrapper{
		ElectricHistoryClient: client,
		server:                server,
		conn:                  conn,
		desc:                  ElectricHistory_ServiceDesc,
	}
}

type ElectricHistoryWrapper struct {
	ElectricHistoryClient

	server ElectricHistoryServer
	conn   grpc.ClientConnInterface
	desc   grpc.ServiceDesc
}

// UnwrapServer returns the underlying server instance.
func (w *ElectricHistoryWrapper) UnwrapServer() ElectricHistoryServer {
	return w.server
}

// Unwrap implements wrap.Unwrapper and returns the underlying server instance as an unknown type.
func (w *ElectricHistoryWrapper) Unwrap() any {
	return w.UnwrapServer()
}

func (w *ElectricHistoryWrapper) UnwrapService() (grpc.ClientConnInterface, grpc.ServiceDesc) {
	return w.conn, w.desc
}
