// Code generated by protoc-gen-wrapper. DO NOT EDIT.

package gen

import (
	wrap "github.com/smart-core-os/sc-golang/pkg/wrap"
	grpc "google.golang.org/grpc"
)

// WrapMqttService	adapts a gen.MqttServiceServer	and presents it as a gen.MqttServiceClient
func WrapMqttService(server MqttServiceServer) *MqttServiceWrapper {
	conn := wrap.ServerToClient(MqttService_ServiceDesc, server)
	client := NewMqttServiceClient(conn)
	return &MqttServiceWrapper{
		MqttServiceClient: client,
		server:            server,
		conn:              conn,
		desc:              MqttService_ServiceDesc,
	}
}

type MqttServiceWrapper struct {
	MqttServiceClient

	server MqttServiceServer
	conn   grpc.ClientConnInterface
	desc   grpc.ServiceDesc
}

// UnwrapServer returns the underlying server instance.
func (w *MqttServiceWrapper) UnwrapServer() MqttServiceServer {
	return w.server
}

// Unwrap implements wrap.Unwrapper and returns the underlying server instance as an unknown type.
func (w *MqttServiceWrapper) Unwrap() any {
	return w.UnwrapServer()
}

func (w *MqttServiceWrapper) UnwrapService() (grpc.ClientConnInterface, grpc.ServiceDesc) {
	return w.conn, w.desc
}
