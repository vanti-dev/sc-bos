// Code generated by protoc-gen-wrapper. DO NOT EDIT.

package gen

import (
	wrap "github.com/smart-core-os/sc-golang/pkg/wrap"
	grpc "google.golang.org/grpc"
)

// WrapMeterApi	adapts a MeterApiServer	and presents it as a MeterApiClient
func WrapMeterApi(server MeterApiServer) *MeterApiWrapper {
	conn := wrap.ServerToClient(MeterApi_ServiceDesc, server)
	client := NewMeterApiClient(conn)
	return &MeterApiWrapper{
		MeterApiClient: client,
		server:         server,
		conn:           conn,
		desc:           MeterApi_ServiceDesc,
	}
}

type MeterApiWrapper struct {
	MeterApiClient

	server MeterApiServer
	conn   grpc.ClientConnInterface
	desc   grpc.ServiceDesc
}

// UnwrapServer returns the underlying server instance.
func (w *MeterApiWrapper) UnwrapServer() MeterApiServer {
	return w.server
}

// Unwrap implements wrap.Unwrapper and returns the underlying server instance as an unknown type.
func (w *MeterApiWrapper) Unwrap() any {
	return w.UnwrapServer()
}

func (w *MeterApiWrapper) UnwrapService() (grpc.ClientConnInterface, grpc.ServiceDesc) {
	return w.conn, w.desc
}
