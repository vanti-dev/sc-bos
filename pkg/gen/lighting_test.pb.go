// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: lighting_test.proto

package gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LightFault int32

const (
	LightFault_FAULT_UNSPECIFIED     LightFault = 0
	LightFault_DURATION_TEST_FAILED  LightFault = 1 // the most recent duration test failed
	LightFault_FUNCTION_TEST_FAILED  LightFault = 2 // the most recent function test failed
	LightFault_BATTERY_FAULT         LightFault = 3 // there is a problem with the emergency battery
	LightFault_LAMP_FAULT            LightFault = 4 // there is a problem with the emergency lamp
	LightFault_COMMUNICATION_FAILURE LightFault = 5 // the system is unable to communicate with the emergency light
	LightFault_OTHER_FAULT           LightFault = 6
)

// Enum value maps for LightFault.
var (
	LightFault_name = map[int32]string{
		0: "FAULT_UNSPECIFIED",
		1: "DURATION_TEST_FAILED",
		2: "FUNCTION_TEST_FAILED",
		3: "BATTERY_FAULT",
		4: "LAMP_FAULT",
		5: "COMMUNICATION_FAILURE",
		6: "OTHER_FAULT",
	}
	LightFault_value = map[string]int32{
		"FAULT_UNSPECIFIED":     0,
		"DURATION_TEST_FAILED":  1,
		"FUNCTION_TEST_FAILED":  2,
		"BATTERY_FAULT":         3,
		"LAMP_FAULT":            4,
		"COMMUNICATION_FAILURE": 5,
		"OTHER_FAULT":           6,
	}
)

func (x LightFault) Enum() *LightFault {
	p := new(LightFault)
	*p = x
	return p
}

func (x LightFault) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LightFault) Descriptor() protoreflect.EnumDescriptor {
	return file_lighting_test_proto_enumTypes[0].Descriptor()
}

func (LightFault) Type() protoreflect.EnumType {
	return &file_lighting_test_proto_enumTypes[0]
}

func (x LightFault) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LightFault.Descriptor instead.
func (LightFault) EnumDescriptor() ([]byte, []int) {
	return file_lighting_test_proto_rawDescGZIP(), []int{0}
}

type LightHealth struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Smart Core device name of the emergency light.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The last time this data was updated.
	UpdateTime       *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	Faults           []LightFault           `protobuf:"varint,3,rep,packed,name=faults,proto3,enum=smartcore.bos.LightFault" json:"faults,omitempty"`
	LastFunctionTest *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=last_function_test,json=lastFunctionTest,proto3" json:"last_function_test,omitempty"`
	LastDurationTest *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=last_duration_test,json=lastDurationTest,proto3" json:"last_duration_test,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *LightHealth) Reset() {
	*x = LightHealth{}
	mi := &file_lighting_test_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LightHealth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LightHealth) ProtoMessage() {}

func (x *LightHealth) ProtoReflect() protoreflect.Message {
	mi := &file_lighting_test_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LightHealth.ProtoReflect.Descriptor instead.
func (*LightHealth) Descriptor() ([]byte, []int) {
	return file_lighting_test_proto_rawDescGZIP(), []int{0}
}

func (x *LightHealth) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LightHealth) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *LightHealth) GetFaults() []LightFault {
	if x != nil {
		return x.Faults
	}
	return nil
}

func (x *LightHealth) GetLastFunctionTest() *timestamppb.Timestamp {
	if x != nil {
		return x.LastFunctionTest
	}
	return nil
}

func (x *LightHealth) GetLastDurationTest() *timestamppb.Timestamp {
	if x != nil {
		return x.LastDurationTest
	}
	return nil
}

type LightingEvent struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Name      string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"` // Smart Core device name of the light this entry applies to
	Id        string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`     // An opaque, unique identifier for this log entry
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Types that are valid to be assigned to Event:
	//
	//	*LightingEvent_DurationTestPass_
	//	*LightingEvent_FunctionTestPass_
	//	*LightingEvent_StatusReport_
	Event         isLightingEvent_Event `protobuf_oneof:"event"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LightingEvent) Reset() {
	*x = LightingEvent{}
	mi := &file_lighting_test_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LightingEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LightingEvent) ProtoMessage() {}

func (x *LightingEvent) ProtoReflect() protoreflect.Message {
	mi := &file_lighting_test_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LightingEvent.ProtoReflect.Descriptor instead.
func (*LightingEvent) Descriptor() ([]byte, []int) {
	return file_lighting_test_proto_rawDescGZIP(), []int{1}
}

func (x *LightingEvent) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LightingEvent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LightingEvent) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *LightingEvent) GetEvent() isLightingEvent_Event {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *LightingEvent) GetDurationTestPass() *LightingEvent_DurationTestPass {
	if x != nil {
		if x, ok := x.Event.(*LightingEvent_DurationTestPass_); ok {
			return x.DurationTestPass
		}
	}
	return nil
}

func (x *LightingEvent) GetFunctionTestPass() *LightingEvent_FunctionTestPass {
	if x != nil {
		if x, ok := x.Event.(*LightingEvent_FunctionTestPass_); ok {
			return x.FunctionTestPass
		}
	}
	return nil
}

func (x *LightingEvent) GetStatusReport() *LightingEvent_StatusReport {
	if x != nil {
		if x, ok := x.Event.(*LightingEvent_StatusReport_); ok {
			return x.StatusReport
		}
	}
	return nil
}

type isLightingEvent_Event interface {
	isLightingEvent_Event()
}

type LightingEvent_DurationTestPass_ struct {
	DurationTestPass *LightingEvent_DurationTestPass `protobuf:"bytes,4,opt,name=duration_test_pass,json=durationTestPass,proto3,oneof"`
}

type LightingEvent_FunctionTestPass_ struct {
	FunctionTestPass *LightingEvent_FunctionTestPass `protobuf:"bytes,5,opt,name=function_test_pass,json=functionTestPass,proto3,oneof"`
}

type LightingEvent_StatusReport_ struct {
	StatusReport *LightingEvent_StatusReport `protobuf:"bytes,6,opt,name=status_report,json=statusReport,proto3,oneof"`
}

func (*LightingEvent_DurationTestPass_) isLightingEvent_Event() {}

func (*LightingEvent_FunctionTestPass_) isLightingEvent_Event() {}

func (*LightingEvent_StatusReport_) isLightingEvent_Event() {}

type GetLightHealthRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLightHealthRequest) Reset() {
	*x = GetLightHealthRequest{}
	mi := &file_lighting_test_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLightHealthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLightHealthRequest) ProtoMessage() {}

func (x *GetLightHealthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lighting_test_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLightHealthRequest.ProtoReflect.Descriptor instead.
func (*GetLightHealthRequest) Descriptor() ([]byte, []int) {
	return file_lighting_test_proto_rawDescGZIP(), []int{2}
}

func (x *GetLightHealthRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ListLightHealthRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The maximum number of emergency light names to return at once. The service may choose to return fewer.
	// If unspecified, defaults to 50.
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Page token from a previous ListEmergencyLists call. Provide to get the next page.
	// If omitted, the first page is supplied.
	PageToken     string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListLightHealthRequest) Reset() {
	*x = ListLightHealthRequest{}
	mi := &file_lighting_test_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListLightHealthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLightHealthRequest) ProtoMessage() {}

func (x *ListLightHealthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lighting_test_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLightHealthRequest.ProtoReflect.Descriptor instead.
func (*ListLightHealthRequest) Descriptor() ([]byte, []int) {
	return file_lighting_test_proto_rawDescGZIP(), []int{3}
}

func (x *ListLightHealthRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListLightHealthRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListLightHealthResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	EmergencyLights []*LightHealth         `protobuf:"bytes,1,rep,name=emergency_lights,json=emergencyLights,proto3" json:"emergency_lights,omitempty"`
	NextPageToken   string                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ListLightHealthResponse) Reset() {
	*x = ListLightHealthResponse{}
	mi := &file_lighting_test_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListLightHealthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLightHealthResponse) ProtoMessage() {}

func (x *ListLightHealthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lighting_test_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLightHealthResponse.ProtoReflect.Descriptor instead.
func (*ListLightHealthResponse) Descriptor() ([]byte, []int) {
	return file_lighting_test_proto_rawDescGZIP(), []int{4}
}

func (x *ListLightHealthResponse) GetEmergencyLights() []*LightHealth {
	if x != nil {
		return x.EmergencyLights
	}
	return nil
}

func (x *ListLightHealthResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type ListLightEventsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PageSize      int32                  `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken     string                 `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"` // TODO: add filtering support
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListLightEventsRequest) Reset() {
	*x = ListLightEventsRequest{}
	mi := &file_lighting_test_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListLightEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLightEventsRequest) ProtoMessage() {}

func (x *ListLightEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lighting_test_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLightEventsRequest.ProtoReflect.Descriptor instead.
func (*ListLightEventsRequest) Descriptor() ([]byte, []int) {
	return file_lighting_test_proto_rawDescGZIP(), []int{5}
}

func (x *ListLightEventsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListLightEventsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListLightEventsResponse struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	Events []*LightingEvent       `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	// Contains a page token which can be supplied as page_token in ListLightEventsRequest to fetch the next page of
	// results.
	// Only present when more results are immediately available.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	// Contains a page token which can be supplied as page_token in ListLightEventsRequest to fetch only new data
	// in the future.
	// Unlike next_page_token, this is present even when no more pages are immediately available. The client can check
	// again in the future
	FuturePageToken string `protobuf:"bytes,3,opt,name=future_page_token,json=futurePageToken,proto3" json:"future_page_token,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ListLightEventsResponse) Reset() {
	*x = ListLightEventsResponse{}
	mi := &file_lighting_test_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListLightEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLightEventsResponse) ProtoMessage() {}

func (x *ListLightEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lighting_test_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLightEventsResponse.ProtoReflect.Descriptor instead.
func (*ListLightEventsResponse) Descriptor() ([]byte, []int) {
	return file_lighting_test_proto_rawDescGZIP(), []int{6}
}

func (x *ListLightEventsResponse) GetEvents() []*LightingEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *ListLightEventsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListLightEventsResponse) GetFuturePageToken() string {
	if x != nil {
		return x.FuturePageToken
	}
	return ""
}

type GetReportCSVRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Add a header to the generated CSV as the first row.
	IncludeHeader bool `protobuf:"varint,1,opt,name=include_header,json=includeHeader,proto3" json:"include_header,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetReportCSVRequest) Reset() {
	*x = GetReportCSVRequest{}
	mi := &file_lighting_test_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReportCSVRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReportCSVRequest) ProtoMessage() {}

func (x *GetReportCSVRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lighting_test_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReportCSVRequest.ProtoReflect.Descriptor instead.
func (*GetReportCSVRequest) Descriptor() ([]byte, []int) {
	return file_lighting_test_proto_rawDescGZIP(), []int{7}
}

func (x *GetReportCSVRequest) GetIncludeHeader() bool {
	if x != nil {
		return x.IncludeHeader
	}
	return false
}

type ReportCSV struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Csv           []byte                 `protobuf:"bytes,1,opt,name=csv,proto3" json:"csv,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReportCSV) Reset() {
	*x = ReportCSV{}
	mi := &file_lighting_test_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportCSV) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportCSV) ProtoMessage() {}

func (x *ReportCSV) ProtoReflect() protoreflect.Message {
	mi := &file_lighting_test_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportCSV.ProtoReflect.Descriptor instead.
func (*ReportCSV) Descriptor() ([]byte, []int) {
	return file_lighting_test_proto_rawDescGZIP(), []int{8}
}

func (x *ReportCSV) GetCsv() []byte {
	if x != nil {
		return x.Csv
	}
	return nil
}

type LightingEvent_DurationTestPass struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	AchievedDuration *durationpb.Duration   `protobuf:"bytes,1,opt,name=achieved_duration,json=achievedDuration,proto3" json:"achieved_duration,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *LightingEvent_DurationTestPass) Reset() {
	*x = LightingEvent_DurationTestPass{}
	mi := &file_lighting_test_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LightingEvent_DurationTestPass) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LightingEvent_DurationTestPass) ProtoMessage() {}

func (x *LightingEvent_DurationTestPass) ProtoReflect() protoreflect.Message {
	mi := &file_lighting_test_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LightingEvent_DurationTestPass.ProtoReflect.Descriptor instead.
func (*LightingEvent_DurationTestPass) Descriptor() ([]byte, []int) {
	return file_lighting_test_proto_rawDescGZIP(), []int{1, 0}
}

func (x *LightingEvent_DurationTestPass) GetAchievedDuration() *durationpb.Duration {
	if x != nil {
		return x.AchievedDuration
	}
	return nil
}

type LightingEvent_FunctionTestPass struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LightingEvent_FunctionTestPass) Reset() {
	*x = LightingEvent_FunctionTestPass{}
	mi := &file_lighting_test_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LightingEvent_FunctionTestPass) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LightingEvent_FunctionTestPass) ProtoMessage() {}

func (x *LightingEvent_FunctionTestPass) ProtoReflect() protoreflect.Message {
	mi := &file_lighting_test_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LightingEvent_FunctionTestPass.ProtoReflect.Descriptor instead.
func (*LightingEvent_FunctionTestPass) Descriptor() ([]byte, []int) {
	return file_lighting_test_proto_rawDescGZIP(), []int{1, 1}
}

type LightingEvent_StatusReport struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Faults        []LightFault           `protobuf:"varint,1,rep,packed,name=faults,proto3,enum=smartcore.bos.LightFault" json:"faults,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LightingEvent_StatusReport) Reset() {
	*x = LightingEvent_StatusReport{}
	mi := &file_lighting_test_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LightingEvent_StatusReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LightingEvent_StatusReport) ProtoMessage() {}

func (x *LightingEvent_StatusReport) ProtoReflect() protoreflect.Message {
	mi := &file_lighting_test_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LightingEvent_StatusReport.ProtoReflect.Descriptor instead.
func (*LightingEvent_StatusReport) Descriptor() ([]byte, []int) {
	return file_lighting_test_proto_rawDescGZIP(), []int{1, 2}
}

func (x *LightingEvent_StatusReport) GetFaults() []LightFault {
	if x != nil {
		return x.Faults
	}
	return nil
}

var File_lighting_test_proto protoreflect.FileDescriptor

const file_lighting_test_proto_rawDesc = "" +
	"\n" +
	"\x13lighting_test.proto\x12\rsmartcore.bos\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1egoogle/protobuf/duration.proto\"\xa5\x02\n" +
	"\vLightHealth\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12;\n" +
	"\vupdate_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"updateTime\x121\n" +
	"\x06faults\x18\x03 \x03(\x0e2\x19.smartcore.bos.LightFaultR\x06faults\x12H\n" +
	"\x12last_function_test\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x10lastFunctionTest\x12H\n" +
	"\x12last_duration_test\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\x10lastDurationTest\"\xb9\x04\n" +
	"\rLightingEvent\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\x128\n" +
	"\ttimestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12]\n" +
	"\x12duration_test_pass\x18\x04 \x01(\v2-.smartcore.bos.LightingEvent.DurationTestPassH\x00R\x10durationTestPass\x12]\n" +
	"\x12function_test_pass\x18\x05 \x01(\v2-.smartcore.bos.LightingEvent.FunctionTestPassH\x00R\x10functionTestPass\x12P\n" +
	"\rstatus_report\x18\x06 \x01(\v2).smartcore.bos.LightingEvent.StatusReportH\x00R\fstatusReport\x1aZ\n" +
	"\x10DurationTestPass\x12F\n" +
	"\x11achieved_duration\x18\x01 \x01(\v2\x19.google.protobuf.DurationR\x10achievedDuration\x1a\x12\n" +
	"\x10FunctionTestPass\x1aA\n" +
	"\fStatusReport\x121\n" +
	"\x06faults\x18\x01 \x03(\x0e2\x19.smartcore.bos.LightFaultR\x06faultsB\a\n" +
	"\x05event\"+\n" +
	"\x15GetLightHealthRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"T\n" +
	"\x16ListLightHealthRequest\x12\x1b\n" +
	"\tpage_size\x18\x01 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tR\tpageToken\"\x88\x01\n" +
	"\x17ListLightHealthResponse\x12E\n" +
	"\x10emergency_lights\x18\x01 \x03(\v2\x1a.smartcore.bos.LightHealthR\x0femergencyLights\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"T\n" +
	"\x16ListLightEventsRequest\x12\x1b\n" +
	"\tpage_size\x18\x01 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tR\tpageToken\"\xa3\x01\n" +
	"\x17ListLightEventsResponse\x124\n" +
	"\x06events\x18\x01 \x03(\v2\x1c.smartcore.bos.LightingEventR\x06events\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\x12*\n" +
	"\x11future_page_token\x18\x03 \x01(\tR\x0ffuturePageToken\"<\n" +
	"\x13GetReportCSVRequest\x12%\n" +
	"\x0einclude_header\x18\x01 \x01(\bR\rincludeHeader\"\x1d\n" +
	"\tReportCSV\x12\x10\n" +
	"\x03csv\x18\x01 \x01(\fR\x03csv*\xa6\x01\n" +
	"\n" +
	"LightFault\x12\x15\n" +
	"\x11FAULT_UNSPECIFIED\x10\x00\x12\x18\n" +
	"\x14DURATION_TEST_FAILED\x10\x01\x12\x18\n" +
	"\x14FUNCTION_TEST_FAILED\x10\x02\x12\x11\n" +
	"\rBATTERY_FAULT\x10\x03\x12\x0e\n" +
	"\n" +
	"LAMP_FAULT\x10\x04\x12\x19\n" +
	"\x15COMMUNICATION_FAILURE\x10\x05\x12\x0f\n" +
	"\vOTHER_FAULT\x10\x062\xf7\x02\n" +
	"\x0fLightingTestApi\x12R\n" +
	"\x0eGetLightHealth\x12$.smartcore.bos.GetLightHealthRequest\x1a\x1a.smartcore.bos.LightHealth\x12`\n" +
	"\x0fListLightHealth\x12%.smartcore.bos.ListLightHealthRequest\x1a&.smartcore.bos.ListLightHealthResponse\x12`\n" +
	"\x0fListLightEvents\x12%.smartcore.bos.ListLightEventsRequest\x1a&.smartcore.bos.ListLightEventsResponse\x12L\n" +
	"\fGetReportCSV\x12\".smartcore.bos.GetReportCSVRequest\x1a\x18.smartcore.bos.ReportCSVB%Z#github.com/vanti-dev/sc-bos/pkg/genb\x06proto3"

var (
	file_lighting_test_proto_rawDescOnce sync.Once
	file_lighting_test_proto_rawDescData []byte
)

func file_lighting_test_proto_rawDescGZIP() []byte {
	file_lighting_test_proto_rawDescOnce.Do(func() {
		file_lighting_test_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_lighting_test_proto_rawDesc), len(file_lighting_test_proto_rawDesc)))
	})
	return file_lighting_test_proto_rawDescData
}

var file_lighting_test_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_lighting_test_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_lighting_test_proto_goTypes = []any{
	(LightFault)(0),                        // 0: smartcore.bos.LightFault
	(*LightHealth)(nil),                    // 1: smartcore.bos.LightHealth
	(*LightingEvent)(nil),                  // 2: smartcore.bos.LightingEvent
	(*GetLightHealthRequest)(nil),          // 3: smartcore.bos.GetLightHealthRequest
	(*ListLightHealthRequest)(nil),         // 4: smartcore.bos.ListLightHealthRequest
	(*ListLightHealthResponse)(nil),        // 5: smartcore.bos.ListLightHealthResponse
	(*ListLightEventsRequest)(nil),         // 6: smartcore.bos.ListLightEventsRequest
	(*ListLightEventsResponse)(nil),        // 7: smartcore.bos.ListLightEventsResponse
	(*GetReportCSVRequest)(nil),            // 8: smartcore.bos.GetReportCSVRequest
	(*ReportCSV)(nil),                      // 9: smartcore.bos.ReportCSV
	(*LightingEvent_DurationTestPass)(nil), // 10: smartcore.bos.LightingEvent.DurationTestPass
	(*LightingEvent_FunctionTestPass)(nil), // 11: smartcore.bos.LightingEvent.FunctionTestPass
	(*LightingEvent_StatusReport)(nil),     // 12: smartcore.bos.LightingEvent.StatusReport
	(*timestamppb.Timestamp)(nil),          // 13: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),            // 14: google.protobuf.Duration
}
var file_lighting_test_proto_depIdxs = []int32{
	13, // 0: smartcore.bos.LightHealth.update_time:type_name -> google.protobuf.Timestamp
	0,  // 1: smartcore.bos.LightHealth.faults:type_name -> smartcore.bos.LightFault
	13, // 2: smartcore.bos.LightHealth.last_function_test:type_name -> google.protobuf.Timestamp
	13, // 3: smartcore.bos.LightHealth.last_duration_test:type_name -> google.protobuf.Timestamp
	13, // 4: smartcore.bos.LightingEvent.timestamp:type_name -> google.protobuf.Timestamp
	10, // 5: smartcore.bos.LightingEvent.duration_test_pass:type_name -> smartcore.bos.LightingEvent.DurationTestPass
	11, // 6: smartcore.bos.LightingEvent.function_test_pass:type_name -> smartcore.bos.LightingEvent.FunctionTestPass
	12, // 7: smartcore.bos.LightingEvent.status_report:type_name -> smartcore.bos.LightingEvent.StatusReport
	1,  // 8: smartcore.bos.ListLightHealthResponse.emergency_lights:type_name -> smartcore.bos.LightHealth
	2,  // 9: smartcore.bos.ListLightEventsResponse.events:type_name -> smartcore.bos.LightingEvent
	14, // 10: smartcore.bos.LightingEvent.DurationTestPass.achieved_duration:type_name -> google.protobuf.Duration
	0,  // 11: smartcore.bos.LightingEvent.StatusReport.faults:type_name -> smartcore.bos.LightFault
	3,  // 12: smartcore.bos.LightingTestApi.GetLightHealth:input_type -> smartcore.bos.GetLightHealthRequest
	4,  // 13: smartcore.bos.LightingTestApi.ListLightHealth:input_type -> smartcore.bos.ListLightHealthRequest
	6,  // 14: smartcore.bos.LightingTestApi.ListLightEvents:input_type -> smartcore.bos.ListLightEventsRequest
	8,  // 15: smartcore.bos.LightingTestApi.GetReportCSV:input_type -> smartcore.bos.GetReportCSVRequest
	1,  // 16: smartcore.bos.LightingTestApi.GetLightHealth:output_type -> smartcore.bos.LightHealth
	5,  // 17: smartcore.bos.LightingTestApi.ListLightHealth:output_type -> smartcore.bos.ListLightHealthResponse
	7,  // 18: smartcore.bos.LightingTestApi.ListLightEvents:output_type -> smartcore.bos.ListLightEventsResponse
	9,  // 19: smartcore.bos.LightingTestApi.GetReportCSV:output_type -> smartcore.bos.ReportCSV
	16, // [16:20] is the sub-list for method output_type
	12, // [12:16] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_lighting_test_proto_init() }
func file_lighting_test_proto_init() {
	if File_lighting_test_proto != nil {
		return
	}
	file_lighting_test_proto_msgTypes[1].OneofWrappers = []any{
		(*LightingEvent_DurationTestPass_)(nil),
		(*LightingEvent_FunctionTestPass_)(nil),
		(*LightingEvent_StatusReport_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_lighting_test_proto_rawDesc), len(file_lighting_test_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_lighting_test_proto_goTypes,
		DependencyIndexes: file_lighting_test_proto_depIdxs,
		EnumInfos:         file_lighting_test_proto_enumTypes,
		MessageInfos:      file_lighting_test_proto_msgTypes,
	}.Build()
	File_lighting_test_proto = out.File
	file_lighting_test_proto_goTypes = nil
	file_lighting_test_proto_depIdxs = nil
}
