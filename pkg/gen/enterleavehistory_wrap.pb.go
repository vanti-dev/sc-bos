// Code generated by protoc-gen-wrapper. DO NOT EDIT.

package gen

import (
	wrap "github.com/smart-core-os/sc-golang/pkg/wrap"
	grpc "google.golang.org/grpc"
)

// WrapEnterLeaveHistory	adapts a EnterLeaveHistoryServer	and presents it as a EnterLeaveHistoryClient
func WrapEnterLeaveHistory(server EnterLeaveHistoryServer) *EnterLeaveHistoryWrapper {
	conn := wrap.ServerToClient(EnterLeaveHistory_ServiceDesc, server)
	client := NewEnterLeaveHistoryClient(conn)
	return &EnterLeaveHistoryWrapper{
		EnterLeaveHistoryClient: client,
		server:                  server,
		conn:                    conn,
		desc:                    EnterLeaveHistory_ServiceDesc,
	}
}

type EnterLeaveHistoryWrapper struct {
	EnterLeaveHistoryClient

	server EnterLeaveHistoryServer
	conn   grpc.ClientConnInterface
	desc   grpc.ServiceDesc
}

// UnwrapServer returns the underlying server instance.
func (w *EnterLeaveHistoryWrapper) UnwrapServer() EnterLeaveHistoryServer {
	return w.server
}

// Unwrap implements wrap.Unwrapper and returns the underlying server instance as an unknown type.
func (w *EnterLeaveHistoryWrapper) Unwrap() any {
	return w.UnwrapServer()
}

func (w *EnterLeaveHistoryWrapper) UnwrapService() (grpc.ClientConnInterface, grpc.ServiceDesc) {
	return w.conn, w.desc
}
