// Code generated by protoc-gen-wrapper. DO NOT EDIT.

package gen

import (
	wrap "github.com/smart-core-os/sc-golang/pkg/wrap"
	grpc "google.golang.org/grpc"
)

// WrapAccountApi	adapts a AccountApiServer	and presents it as a AccountApiClient
func WrapAccountApi(server AccountApiServer) *AccountApiWrapper {
	conn := wrap.ServerToClient(AccountApi_ServiceDesc, server)
	client := NewAccountApiClient(conn)
	return &AccountApiWrapper{
		AccountApiClient: client,
		server:           server,
		conn:             conn,
		desc:             AccountApi_ServiceDesc,
	}
}

type AccountApiWrapper struct {
	AccountApiClient

	server AccountApiServer
	conn   grpc.ClientConnInterface
	desc   grpc.ServiceDesc
}

// UnwrapServer returns the underlying server instance.
func (w *AccountApiWrapper) UnwrapServer() AccountApiServer {
	return w.server
}

// Unwrap implements wrap.Unwrapper and returns the underlying server instance as an unknown type.
func (w *AccountApiWrapper) Unwrap() any {
	return w.UnwrapServer()
}

func (w *AccountApiWrapper) UnwrapService() (grpc.ClientConnInterface, grpc.ServiceDesc) {
	return w.conn, w.desc
}
