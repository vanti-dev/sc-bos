// Code generated by protoc-gen-wrapper. DO NOT EDIT.

package gen

import (
	wrap "github.com/smart-core-os/sc-golang/pkg/wrap"
	grpc "google.golang.org/grpc"
)

// WrapRaiseLowerInfo	adapts a RaiseLowerInfoServer	and presents it as a RaiseLowerInfoClient
func WrapRaiseLowerInfo(server RaiseLowerInfoServer) *RaiseLowerInfoWrapper {
	conn := wrap.ServerToClient(RaiseLowerInfo_ServiceDesc, server)
	client := NewRaiseLowerInfoClient(conn)
	return &RaiseLowerInfoWrapper{
		RaiseLowerInfoClient: client,
		server:               server,
		conn:                 conn,
		desc:                 RaiseLowerInfo_ServiceDesc,
	}
}

type RaiseLowerInfoWrapper struct {
	RaiseLowerInfoClient

	server RaiseLowerInfoServer
	conn   grpc.ClientConnInterface
	desc   grpc.ServiceDesc
}

// UnwrapServer returns the underlying server instance.
func (w *RaiseLowerInfoWrapper) UnwrapServer() RaiseLowerInfoServer {
	return w.server
}

// Unwrap implements wrap.Unwrapper and returns the underlying server instance as an unknown type.
func (w *RaiseLowerInfoWrapper) Unwrap() any {
	return w.UnwrapServer()
}

func (w *RaiseLowerInfoWrapper) UnwrapService() (grpc.ClientConnInterface, grpc.ServiceDesc) {
	return w.conn, w.desc
}
