// Code generated by protoc-gen-wrapper. DO NOT EDIT.

package gen

import (
	"github.com/smart-core-os/sc-golang/pkg/wrap"
)

// WrapColorApi	adapts a gen.ColorApiServer	and presents it as a gen.ColorApiClient
func WrapColorApi(server ColorApiServer) ColorApiClient {
	conn := wrap.ServerToClient(ColorApi_ServiceDesc, server)
	client := NewColorApiClient(conn)
	return &colorApiWrapper{
		ColorApiClient: client,
		server:         server,
	}
}

type colorApiWrapper struct {
	ColorApiClient

	server ColorApiServer
}

// compile time check that we implement the interface we need
var _ ColorApiClient = (*colorApiWrapper)(nil)

// UnwrapServer returns the underlying server instance.
func (w *colorApiWrapper) UnwrapServer() ColorApiServer {
	return w.server
}

// Unwrap implements wrap.Unwrapper and returns the underlying server instance as an unknown type.
func (w *colorApiWrapper) Unwrap() any {
	return w.UnwrapServer()
}
