// Code generated by protoc-gen-wrapper. DO NOT EDIT.

package gen

import (
	"github.com/smart-core-os/sc-golang/pkg/wrap"
)

// WrapDaliApi	adapts a gen.DaliApiServer	and presents it as a gen.DaliApiClient
func WrapDaliApi(server DaliApiServer) DaliApiClient {
	conn := wrap.ServerToClient(DaliApi_ServiceDesc, server)
	client := NewDaliApiClient(conn)
	return &daliApiWrapper{
		DaliApiClient: client,
		server:        server,
	}
}

type daliApiWrapper struct {
	DaliApiClient

	server DaliApiServer
}

// compile time check that we implement the interface we need
var _ DaliApiClient = (*daliApiWrapper)(nil)

// UnwrapServer returns the underlying server instance.
func (w *daliApiWrapper) UnwrapServer() DaliApiServer {
	return w.server
}

// Unwrap implements wrap.Unwrapper and returns the underlying server instance as an unknown type.
func (w *daliApiWrapper) Unwrap() any {
	return w.UnwrapServer()
}
