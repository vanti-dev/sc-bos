// Code generated by protoc-gen-wrapper. DO NOT EDIT.

package gen

import (
	"github.com/smart-core-os/sc-golang/pkg/wrap"
)

// WrapStatusHistory	adapts a gen.StatusHistoryServer	and presents it as a gen.StatusHistoryClient
func WrapStatusHistory(server StatusHistoryServer) StatusHistoryClient {
	conn := wrap.ServerToClient(StatusHistory_ServiceDesc, server)
	client := NewStatusHistoryClient(conn)
	return &statusHistoryWrapper{
		StatusHistoryClient: client,
		server:              server,
	}
}

type statusHistoryWrapper struct {
	StatusHistoryClient

	server StatusHistoryServer
}

// compile time check that we implement the interface we need
var _ StatusHistoryClient = (*statusHistoryWrapper)(nil)

// UnwrapServer returns the underlying server instance.
func (w *statusHistoryWrapper) UnwrapServer() StatusHistoryServer {
	return w.server
}

// Unwrap implements wrap.Unwrapper and returns the underlying server instance as an unknown type.
func (w *statusHistoryWrapper) Unwrap() any {
	return w.UnwrapServer()
}
