// Code generated by protoc-gen-wrapper. DO NOT EDIT.

package gen

import (
	wrap "github.com/smart-core-os/sc-golang/pkg/wrap"
	grpc "google.golang.org/grpc"
)

// WrapAxiomXaDriverService	adapts a AxiomXaDriverServiceServer	and presents it as a AxiomXaDriverServiceClient
func WrapAxiomXaDriverService(server AxiomXaDriverServiceServer) *AxiomXaDriverServiceWrapper {
	conn := wrap.ServerToClient(AxiomXaDriverService_ServiceDesc, server)
	client := NewAxiomXaDriverServiceClient(conn)
	return &AxiomXaDriverServiceWrapper{
		AxiomXaDriverServiceClient: client,
		server:                     server,
		conn:                       conn,
		desc:                       AxiomXaDriverService_ServiceDesc,
	}
}

type AxiomXaDriverServiceWrapper struct {
	AxiomXaDriverServiceClient

	server AxiomXaDriverServiceServer
	conn   grpc.ClientConnInterface
	desc   grpc.ServiceDesc
}

// UnwrapServer returns the underlying server instance.
func (w *AxiomXaDriverServiceWrapper) UnwrapServer() AxiomXaDriverServiceServer {
	return w.server
}

// Unwrap implements wrap.Unwrapper and returns the underlying server instance as an unknown type.
func (w *AxiomXaDriverServiceWrapper) Unwrap() any {
	return w.UnwrapServer()
}

func (w *AxiomXaDriverServiceWrapper) UnwrapService() (grpc.ClientConnInterface, grpc.ServiceDesc) {
	return w.conn, w.desc
}
