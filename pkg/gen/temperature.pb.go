// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.32.1
// source: temperature.proto

package gen

import (
	types "github.com/smart-core-os/sc-api/go/types"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Temperature represents a target and measured temperature.
type Temperature struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Read/write, the target temperature.
	SetPoint *types.Temperature `protobuf:"bytes,1,opt,name=set_point,json=setPoint,proto3" json:"set_point,omitempty"`
	// Output only, the measured temperature.
	Measured *types.Temperature `protobuf:"bytes,2,opt,name=measured,proto3" json:"measured,omitempty"`
	// Title of the Temperature context (e.g., "primary flow", "primary return").
	// Required if there are multiple Temperature instances per device as it is used as ID. Must be unique per device.
	Title         string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Temperature) Reset() {
	*x = Temperature{}
	mi := &file_temperature_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Temperature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Temperature) ProtoMessage() {}

func (x *Temperature) ProtoReflect() protoreflect.Message {
	mi := &file_temperature_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Temperature.ProtoReflect.Descriptor instead.
func (*Temperature) Descriptor() ([]byte, []int) {
	return file_temperature_proto_rawDescGZIP(), []int{0}
}

func (x *Temperature) GetSetPoint() *types.Temperature {
	if x != nil {
		return x.SetPoint
	}
	return nil
}

func (x *Temperature) GetMeasured() *types.Temperature {
	if x != nil {
		return x.Measured
	}
	return nil
}

func (x *Temperature) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type GetTemperatureRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ReadMask      *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=read_mask,json=readMask,proto3" json:"read_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTemperatureRequest) Reset() {
	*x = GetTemperatureRequest{}
	mi := &file_temperature_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTemperatureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTemperatureRequest) ProtoMessage() {}

func (x *GetTemperatureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temperature_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTemperatureRequest.ProtoReflect.Descriptor instead.
func (*GetTemperatureRequest) Descriptor() ([]byte, []int) {
	return file_temperature_proto_rawDescGZIP(), []int{1}
}

func (x *GetTemperatureRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetTemperatureRequest) GetReadMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.ReadMask
	}
	return nil
}

type GetTemperatureResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Temperatures  []*Temperature         `protobuf:"bytes,1,rep,name=temperatures,proto3" json:"temperatures,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTemperatureResponse) Reset() {
	*x = GetTemperatureResponse{}
	mi := &file_temperature_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTemperatureResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTemperatureResponse) ProtoMessage() {}

func (x *GetTemperatureResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temperature_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTemperatureResponse.ProtoReflect.Descriptor instead.
func (*GetTemperatureResponse) Descriptor() ([]byte, []int) {
	return file_temperature_proto_rawDescGZIP(), []int{2}
}

func (x *GetTemperatureResponse) GetTemperatures() []*Temperature {
	if x != nil {
		return x.Temperatures
	}
	return nil
}

type PullTemperatureRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ReadMask      *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=read_mask,json=readMask,proto3" json:"read_mask,omitempty"`
	UpdatesOnly   bool                   `protobuf:"varint,3,opt,name=updates_only,json=updatesOnly,proto3" json:"updates_only,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PullTemperatureRequest) Reset() {
	*x = PullTemperatureRequest{}
	mi := &file_temperature_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PullTemperatureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullTemperatureRequest) ProtoMessage() {}

func (x *PullTemperatureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temperature_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullTemperatureRequest.ProtoReflect.Descriptor instead.
func (*PullTemperatureRequest) Descriptor() ([]byte, []int) {
	return file_temperature_proto_rawDescGZIP(), []int{3}
}

func (x *PullTemperatureRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PullTemperatureRequest) GetReadMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.ReadMask
	}
	return nil
}

func (x *PullTemperatureRequest) GetUpdatesOnly() bool {
	if x != nil {
		return x.UpdatesOnly
	}
	return false
}

type PullTemperatureResponse struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Changes       []*PullTemperatureResponse_Change `protobuf:"bytes,1,rep,name=changes,proto3" json:"changes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PullTemperatureResponse) Reset() {
	*x = PullTemperatureResponse{}
	mi := &file_temperature_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PullTemperatureResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullTemperatureResponse) ProtoMessage() {}

func (x *PullTemperatureResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temperature_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullTemperatureResponse.ProtoReflect.Descriptor instead.
func (*PullTemperatureResponse) Descriptor() ([]byte, []int) {
	return file_temperature_proto_rawDescGZIP(), []int{4}
}

func (x *PullTemperatureResponse) GetChanges() []*PullTemperatureResponse_Change {
	if x != nil {
		return x.Changes
	}
	return nil
}

// Update temperatures. Multiple temperature set points can be updated in one request,
// use the Title as the identifier in Temperatures to uniquely identify each Temperature.
type UpdateTemperatureRequest struct {
	state        protoimpl.MessageState `protogen:"open.v1"`
	Name         string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Temperatures []*Temperature         `protobuf:"bytes,2,rep,name=temperatures,proto3" json:"temperatures,omitempty"`
	UpdateMask   *fieldmaskpb.FieldMask `protobuf:"bytes,3,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	// When true, temperature is a change to the devices current value.
	Delta         bool `protobuf:"varint,4,opt,name=delta,proto3" json:"delta,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTemperatureRequest) Reset() {
	*x = UpdateTemperatureRequest{}
	mi := &file_temperature_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTemperatureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTemperatureRequest) ProtoMessage() {}

func (x *UpdateTemperatureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temperature_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTemperatureRequest.ProtoReflect.Descriptor instead.
func (*UpdateTemperatureRequest) Descriptor() ([]byte, []int) {
	return file_temperature_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateTemperatureRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateTemperatureRequest) GetTemperatures() []*Temperature {
	if x != nil {
		return x.Temperatures
	}
	return nil
}

func (x *UpdateTemperatureRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

func (x *UpdateTemperatureRequest) GetDelta() bool {
	if x != nil {
		return x.Delta
	}
	return false
}

type UpdateTemperatureResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Temperatures  []*Temperature         `protobuf:"bytes,1,rep,name=temperatures,proto3" json:"temperatures,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTemperatureResponse) Reset() {
	*x = UpdateTemperatureResponse{}
	mi := &file_temperature_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTemperatureResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTemperatureResponse) ProtoMessage() {}

func (x *UpdateTemperatureResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temperature_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTemperatureResponse.ProtoReflect.Descriptor instead.
func (*UpdateTemperatureResponse) Descriptor() ([]byte, []int) {
	return file_temperature_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateTemperatureResponse) GetTemperatures() []*Temperature {
	if x != nil {
		return x.Temperatures
	}
	return nil
}

type PullTemperatureResponse_Change struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ChangeTime    *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=change_time,json=changeTime,proto3" json:"change_time,omitempty"`
	Temperature   *Temperature           `protobuf:"bytes,3,opt,name=temperature,proto3" json:"temperature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PullTemperatureResponse_Change) Reset() {
	*x = PullTemperatureResponse_Change{}
	mi := &file_temperature_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PullTemperatureResponse_Change) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullTemperatureResponse_Change) ProtoMessage() {}

func (x *PullTemperatureResponse_Change) ProtoReflect() protoreflect.Message {
	mi := &file_temperature_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullTemperatureResponse_Change.ProtoReflect.Descriptor instead.
func (*PullTemperatureResponse_Change) Descriptor() ([]byte, []int) {
	return file_temperature_proto_rawDescGZIP(), []int{4, 0}
}

func (x *PullTemperatureResponse_Change) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PullTemperatureResponse_Change) GetChangeTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ChangeTime
	}
	return nil
}

func (x *PullTemperatureResponse_Change) GetTemperature() *Temperature {
	if x != nil {
		return x.Temperature
	}
	return nil
}

var File_temperature_proto protoreflect.FileDescriptor

const file_temperature_proto_rawDesc = "" +
	"\n" +
	"\x11temperature.proto\x12\rsmartcore.bos\x1a google/protobuf/field_mask.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x10types/unit.proto\"\x98\x01\n" +
	"\vTemperature\x129\n" +
	"\tset_point\x18\x01 \x01(\v2\x1c.smartcore.types.TemperatureR\bsetPoint\x128\n" +
	"\bmeasured\x18\x02 \x01(\v2\x1c.smartcore.types.TemperatureR\bmeasured\x12\x14\n" +
	"\x05title\x18\x03 \x01(\tR\x05title\"d\n" +
	"\x15GetTemperatureRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x127\n" +
	"\tread_mask\x18\x02 \x01(\v2\x1a.google.protobuf.FieldMaskR\breadMask\"X\n" +
	"\x16GetTemperatureResponse\x12>\n" +
	"\ftemperatures\x18\x01 \x03(\v2\x1a.smartcore.bos.TemperatureR\ftemperatures\"\x88\x01\n" +
	"\x16PullTemperatureRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x127\n" +
	"\tread_mask\x18\x02 \x01(\v2\x1a.google.protobuf.FieldMaskR\breadMask\x12!\n" +
	"\fupdates_only\x18\x03 \x01(\bR\vupdatesOnly\"\xfc\x01\n" +
	"\x17PullTemperatureResponse\x12G\n" +
	"\achanges\x18\x01 \x03(\v2-.smartcore.bos.PullTemperatureResponse.ChangeR\achanges\x1a\x97\x01\n" +
	"\x06Change\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12;\n" +
	"\vchange_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"changeTime\x12<\n" +
	"\vtemperature\x18\x03 \x01(\v2\x1a.smartcore.bos.TemperatureR\vtemperature\"\xc1\x01\n" +
	"\x18UpdateTemperatureRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12>\n" +
	"\ftemperatures\x18\x02 \x03(\v2\x1a.smartcore.bos.TemperatureR\ftemperatures\x12;\n" +
	"\vupdate_mask\x18\x03 \x01(\v2\x1a.google.protobuf.FieldMaskR\n" +
	"updateMask\x12\x14\n" +
	"\x05delta\x18\x04 \x01(\bR\x05delta\"[\n" +
	"\x19UpdateTemperatureResponse\x12>\n" +
	"\ftemperatures\x18\x01 \x03(\v2\x1a.smartcore.bos.TemperatureR\ftemperatures2\xc1\x02\n" +
	"\x0eTemperatureApi\x12_\n" +
	"\x0eGetTemperature\x12$.smartcore.bos.GetTemperatureRequest\x1a%.smartcore.bos.GetTemperatureResponse\"\x00\x12d\n" +
	"\x0fPullTemperature\x12%.smartcore.bos.PullTemperatureRequest\x1a&.smartcore.bos.PullTemperatureResponse\"\x000\x01\x12h\n" +
	"\x11UpdateTemperature\x12'.smartcore.bos.UpdateTemperatureRequest\x1a(.smartcore.bos.UpdateTemperatureResponse\"\x00B%Z#github.com/vanti-dev/sc-bos/pkg/genb\x06proto3"

var (
	file_temperature_proto_rawDescOnce sync.Once
	file_temperature_proto_rawDescData []byte
)

func file_temperature_proto_rawDescGZIP() []byte {
	file_temperature_proto_rawDescOnce.Do(func() {
		file_temperature_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_temperature_proto_rawDesc), len(file_temperature_proto_rawDesc)))
	})
	return file_temperature_proto_rawDescData
}

var file_temperature_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_temperature_proto_goTypes = []any{
	(*Temperature)(nil),                    // 0: smartcore.bos.Temperature
	(*GetTemperatureRequest)(nil),          // 1: smartcore.bos.GetTemperatureRequest
	(*GetTemperatureResponse)(nil),         // 2: smartcore.bos.GetTemperatureResponse
	(*PullTemperatureRequest)(nil),         // 3: smartcore.bos.PullTemperatureRequest
	(*PullTemperatureResponse)(nil),        // 4: smartcore.bos.PullTemperatureResponse
	(*UpdateTemperatureRequest)(nil),       // 5: smartcore.bos.UpdateTemperatureRequest
	(*UpdateTemperatureResponse)(nil),      // 6: smartcore.bos.UpdateTemperatureResponse
	(*PullTemperatureResponse_Change)(nil), // 7: smartcore.bos.PullTemperatureResponse.Change
	(*types.Temperature)(nil),              // 8: smartcore.types.Temperature
	(*fieldmaskpb.FieldMask)(nil),          // 9: google.protobuf.FieldMask
	(*timestamppb.Timestamp)(nil),          // 10: google.protobuf.Timestamp
}
var file_temperature_proto_depIdxs = []int32{
	8,  // 0: smartcore.bos.Temperature.set_point:type_name -> smartcore.types.Temperature
	8,  // 1: smartcore.bos.Temperature.measured:type_name -> smartcore.types.Temperature
	9,  // 2: smartcore.bos.GetTemperatureRequest.read_mask:type_name -> google.protobuf.FieldMask
	0,  // 3: smartcore.bos.GetTemperatureResponse.temperatures:type_name -> smartcore.bos.Temperature
	9,  // 4: smartcore.bos.PullTemperatureRequest.read_mask:type_name -> google.protobuf.FieldMask
	7,  // 5: smartcore.bos.PullTemperatureResponse.changes:type_name -> smartcore.bos.PullTemperatureResponse.Change
	0,  // 6: smartcore.bos.UpdateTemperatureRequest.temperatures:type_name -> smartcore.bos.Temperature
	9,  // 7: smartcore.bos.UpdateTemperatureRequest.update_mask:type_name -> google.protobuf.FieldMask
	0,  // 8: smartcore.bos.UpdateTemperatureResponse.temperatures:type_name -> smartcore.bos.Temperature
	10, // 9: smartcore.bos.PullTemperatureResponse.Change.change_time:type_name -> google.protobuf.Timestamp
	0,  // 10: smartcore.bos.PullTemperatureResponse.Change.temperature:type_name -> smartcore.bos.Temperature
	1,  // 11: smartcore.bos.TemperatureApi.GetTemperature:input_type -> smartcore.bos.GetTemperatureRequest
	3,  // 12: smartcore.bos.TemperatureApi.PullTemperature:input_type -> smartcore.bos.PullTemperatureRequest
	5,  // 13: smartcore.bos.TemperatureApi.UpdateTemperature:input_type -> smartcore.bos.UpdateTemperatureRequest
	2,  // 14: smartcore.bos.TemperatureApi.GetTemperature:output_type -> smartcore.bos.GetTemperatureResponse
	4,  // 15: smartcore.bos.TemperatureApi.PullTemperature:output_type -> smartcore.bos.PullTemperatureResponse
	6,  // 16: smartcore.bos.TemperatureApi.UpdateTemperature:output_type -> smartcore.bos.UpdateTemperatureResponse
	14, // [14:17] is the sub-list for method output_type
	11, // [11:14] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_temperature_proto_init() }
func file_temperature_proto_init() {
	if File_temperature_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_temperature_proto_rawDesc), len(file_temperature_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_temperature_proto_goTypes,
		DependencyIndexes: file_temperature_proto_depIdxs,
		MessageInfos:      file_temperature_proto_msgTypes,
	}.Build()
	File_temperature_proto = out.File
	file_temperature_proto_goTypes = nil
	file_temperature_proto_depIdxs = nil
}
