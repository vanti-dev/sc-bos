// Code generated by protoc-gen-wrapper. DO NOT EDIT.

package gen

import (
	wrap "github.com/smart-core-os/sc-golang/pkg/wrap"
	grpc "google.golang.org/grpc"
)

// WrapReportApi	adapts a ReportApiServer	and presents it as a ReportApiClient
func WrapReportApi(server ReportApiServer) *ReportApiWrapper {
	conn := wrap.ServerToClient(ReportApi_ServiceDesc, server)
	client := NewReportApiClient(conn)
	return &ReportApiWrapper{
		ReportApiClient: client,
		server:          server,
		conn:            conn,
		desc:            ReportApi_ServiceDesc,
	}
}

type ReportApiWrapper struct {
	ReportApiClient

	server ReportApiServer
	conn   grpc.ClientConnInterface
	desc   grpc.ServiceDesc
}

// UnwrapServer returns the underlying server instance.
func (w *ReportApiWrapper) UnwrapServer() ReportApiServer {
	return w.server
}

// Unwrap implements wrap.Unwrapper and returns the underlying server instance as an unknown type.
func (w *ReportApiWrapper) Unwrap() any {
	return w.UnwrapServer()
}

func (w *ReportApiWrapper) UnwrapService() (grpc.ClientConnInterface, grpc.ServiceDesc) {
	return w.conn, w.desc
}
