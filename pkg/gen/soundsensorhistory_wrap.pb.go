// Code generated by protoc-gen-wrapper. DO NOT EDIT.

package gen

import (
	wrap "github.com/smart-core-os/sc-golang/pkg/wrap"
	grpc "google.golang.org/grpc"
)

// WrapSoundSensorHistory	adapts a SoundSensorHistoryServer	and presents it as a SoundSensorHistoryClient
func WrapSoundSensorHistory(server SoundSensorHistoryServer) *SoundSensorHistoryWrapper {
	conn := wrap.ServerToClient(SoundSensorHistory_ServiceDesc, server)
	client := NewSoundSensorHistoryClient(conn)
	return &SoundSensorHistoryWrapper{
		SoundSensorHistoryClient: client,
		server:                   server,
		conn:                     conn,
		desc:                     SoundSensorHistory_ServiceDesc,
	}
}

type SoundSensorHistoryWrapper struct {
	SoundSensorHistoryClient

	server SoundSensorHistoryServer
	conn   grpc.ClientConnInterface
	desc   grpc.ServiceDesc
}

// UnwrapServer returns the underlying server instance.
func (w *SoundSensorHistoryWrapper) UnwrapServer() SoundSensorHistoryServer {
	return w.server
}

// Unwrap implements wrap.Unwrapper and returns the underlying server instance as an unknown type.
func (w *SoundSensorHistoryWrapper) Unwrap() any {
	return w.UnwrapServer()
}

func (w *SoundSensorHistoryWrapper) UnwrapService() (grpc.ClientConnInterface, grpc.ServiceDesc) {
	return w.conn, w.desc
}
