// Code generated by protoc-gen-wrapper. DO NOT EDIT.

package gen

import (
	wrap "github.com/smart-core-os/sc-golang/pkg/wrap"
	grpc "google.golang.org/grpc"
)

// WrapPressureInfo	adapts a PressureInfoServer	and presents it as a PressureInfoClient
func WrapPressureInfo(server PressureInfoServer) *PressureInfoWrapper {
	conn := wrap.ServerToClient(PressureInfo_ServiceDesc, server)
	client := NewPressureInfoClient(conn)
	return &PressureInfoWrapper{
		PressureInfoClient: client,
		server:             server,
		conn:               conn,
		desc:               PressureInfo_ServiceDesc,
	}
}

type PressureInfoWrapper struct {
	PressureInfoClient

	server PressureInfoServer
	conn   grpc.ClientConnInterface
	desc   grpc.ServiceDesc
}

// UnwrapServer returns the underlying server instance.
func (w *PressureInfoWrapper) UnwrapServer() PressureInfoServer {
	return w.server
}

// Unwrap implements wrap.Unwrapper and returns the underlying server instance as an unknown type.
func (w *PressureInfoWrapper) Unwrap() any {
	return w.UnwrapServer()
}

func (w *PressureInfoWrapper) UnwrapService() (grpc.ClientConnInterface, grpc.ServiceDesc) {
	return w.conn, w.desc
}
