/**
 * @fileoverview gRPC-Web generated client stub for smartcore.bos
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v5.29.1
// source: history.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');


var google_protobuf_field_mask_pb = require('google-protobuf/google/protobuf/field_mask_pb.js')

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js')

var types_time_period_pb = require('@smart-core-os/sc-api-grpc-web/types/time/period_pb.js')

var traits_air_temperature_pb = require('@smart-core-os/sc-api-grpc-web/traits/air_temperature_pb.js')

var traits_electric_pb = require('@smart-core-os/sc-api-grpc-web/traits/electric_pb.js')

var traits_occupancy_sensor_pb = require('@smart-core-os/sc-api-grpc-web/traits/occupancy_sensor_pb.js')

var traits_air_quality_sensor_pb = require('@smart-core-os/sc-api-grpc-web/traits/air_quality_sensor_pb.js')

var meter_pb = require('./meter_pb.js')
const proto = {};
proto.smartcore = {};
proto.smartcore.bos = require('./history_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.smartcore.bos.HistoryAdminApiClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.smartcore.bos.HistoryAdminApiPromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.smartcore.bos.CreateHistoryRecordRequest,
 *   !proto.smartcore.bos.HistoryRecord>}
 */
const methodDescriptor_HistoryAdminApi_CreateHistoryRecord = new grpc.web.MethodDescriptor(
  '/smartcore.bos.HistoryAdminApi/CreateHistoryRecord',
  grpc.web.MethodType.UNARY,
  proto.smartcore.bos.CreateHistoryRecordRequest,
  proto.smartcore.bos.HistoryRecord,
  /**
   * @param {!proto.smartcore.bos.CreateHistoryRecordRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.smartcore.bos.HistoryRecord.deserializeBinary
);


/**
 * @param {!proto.smartcore.bos.CreateHistoryRecordRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.smartcore.bos.HistoryRecord)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.smartcore.bos.HistoryRecord>|undefined}
 *     The XHR Node Readable Stream
 */
proto.smartcore.bos.HistoryAdminApiClient.prototype.createHistoryRecord =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/smartcore.bos.HistoryAdminApi/CreateHistoryRecord',
      request,
      metadata || {},
      methodDescriptor_HistoryAdminApi_CreateHistoryRecord,
      callback);
};


/**
 * @param {!proto.smartcore.bos.CreateHistoryRecordRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.smartcore.bos.HistoryRecord>}
 *     Promise that resolves to the response
 */
proto.smartcore.bos.HistoryAdminApiPromiseClient.prototype.createHistoryRecord =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/smartcore.bos.HistoryAdminApi/CreateHistoryRecord',
      request,
      metadata || {},
      methodDescriptor_HistoryAdminApi_CreateHistoryRecord);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.smartcore.bos.ListHistoryRecordsRequest,
 *   !proto.smartcore.bos.ListHistoryRecordsResponse>}
 */
const methodDescriptor_HistoryAdminApi_ListHistoryRecords = new grpc.web.MethodDescriptor(
  '/smartcore.bos.HistoryAdminApi/ListHistoryRecords',
  grpc.web.MethodType.UNARY,
  proto.smartcore.bos.ListHistoryRecordsRequest,
  proto.smartcore.bos.ListHistoryRecordsResponse,
  /**
   * @param {!proto.smartcore.bos.ListHistoryRecordsRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.smartcore.bos.ListHistoryRecordsResponse.deserializeBinary
);


/**
 * @param {!proto.smartcore.bos.ListHistoryRecordsRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.smartcore.bos.ListHistoryRecordsResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.smartcore.bos.ListHistoryRecordsResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.smartcore.bos.HistoryAdminApiClient.prototype.listHistoryRecords =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/smartcore.bos.HistoryAdminApi/ListHistoryRecords',
      request,
      metadata || {},
      methodDescriptor_HistoryAdminApi_ListHistoryRecords,
      callback);
};


/**
 * @param {!proto.smartcore.bos.ListHistoryRecordsRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.smartcore.bos.ListHistoryRecordsResponse>}
 *     Promise that resolves to the response
 */
proto.smartcore.bos.HistoryAdminApiPromiseClient.prototype.listHistoryRecords =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/smartcore.bos.HistoryAdminApi/ListHistoryRecords',
      request,
      metadata || {},
      methodDescriptor_HistoryAdminApi_ListHistoryRecords);
};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.smartcore.bos.AirTemperatureHistoryClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.smartcore.bos.AirTemperatureHistoryPromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.smartcore.bos.ListAirTemperatureHistoryRequest,
 *   !proto.smartcore.bos.ListAirTemperatureHistoryResponse>}
 */
const methodDescriptor_AirTemperatureHistory_ListAirTemperatureHistory = new grpc.web.MethodDescriptor(
  '/smartcore.bos.AirTemperatureHistory/ListAirTemperatureHistory',
  grpc.web.MethodType.UNARY,
  proto.smartcore.bos.ListAirTemperatureHistoryRequest,
  proto.smartcore.bos.ListAirTemperatureHistoryResponse,
  /**
   * @param {!proto.smartcore.bos.ListAirTemperatureHistoryRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.smartcore.bos.ListAirTemperatureHistoryResponse.deserializeBinary
);


/**
 * @param {!proto.smartcore.bos.ListAirTemperatureHistoryRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.smartcore.bos.ListAirTemperatureHistoryResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.smartcore.bos.ListAirTemperatureHistoryResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.smartcore.bos.AirTemperatureHistoryClient.prototype.listAirTemperatureHistory =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/smartcore.bos.AirTemperatureHistory/ListAirTemperatureHistory',
      request,
      metadata || {},
      methodDescriptor_AirTemperatureHistory_ListAirTemperatureHistory,
      callback);
};


/**
 * @param {!proto.smartcore.bos.ListAirTemperatureHistoryRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.smartcore.bos.ListAirTemperatureHistoryResponse>}
 *     Promise that resolves to the response
 */
proto.smartcore.bos.AirTemperatureHistoryPromiseClient.prototype.listAirTemperatureHistory =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/smartcore.bos.AirTemperatureHistory/ListAirTemperatureHistory',
      request,
      metadata || {},
      methodDescriptor_AirTemperatureHistory_ListAirTemperatureHistory);
};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.smartcore.bos.MeterHistoryClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.smartcore.bos.MeterHistoryPromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.smartcore.bos.ListMeterReadingHistoryRequest,
 *   !proto.smartcore.bos.ListMeterReadingHistoryResponse>}
 */
const methodDescriptor_MeterHistory_ListMeterReadingHistory = new grpc.web.MethodDescriptor(
  '/smartcore.bos.MeterHistory/ListMeterReadingHistory',
  grpc.web.MethodType.UNARY,
  proto.smartcore.bos.ListMeterReadingHistoryRequest,
  proto.smartcore.bos.ListMeterReadingHistoryResponse,
  /**
   * @param {!proto.smartcore.bos.ListMeterReadingHistoryRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.smartcore.bos.ListMeterReadingHistoryResponse.deserializeBinary
);


/**
 * @param {!proto.smartcore.bos.ListMeterReadingHistoryRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.smartcore.bos.ListMeterReadingHistoryResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.smartcore.bos.ListMeterReadingHistoryResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.smartcore.bos.MeterHistoryClient.prototype.listMeterReadingHistory =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/smartcore.bos.MeterHistory/ListMeterReadingHistory',
      request,
      metadata || {},
      methodDescriptor_MeterHistory_ListMeterReadingHistory,
      callback);
};


/**
 * @param {!proto.smartcore.bos.ListMeterReadingHistoryRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.smartcore.bos.ListMeterReadingHistoryResponse>}
 *     Promise that resolves to the response
 */
proto.smartcore.bos.MeterHistoryPromiseClient.prototype.listMeterReadingHistory =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/smartcore.bos.MeterHistory/ListMeterReadingHistory',
      request,
      metadata || {},
      methodDescriptor_MeterHistory_ListMeterReadingHistory);
};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.smartcore.bos.ElectricHistoryClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.smartcore.bos.ElectricHistoryPromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.smartcore.bos.ListElectricDemandHistoryRequest,
 *   !proto.smartcore.bos.ListElectricDemandHistoryResponse>}
 */
const methodDescriptor_ElectricHistory_ListElectricDemandHistory = new grpc.web.MethodDescriptor(
  '/smartcore.bos.ElectricHistory/ListElectricDemandHistory',
  grpc.web.MethodType.UNARY,
  proto.smartcore.bos.ListElectricDemandHistoryRequest,
  proto.smartcore.bos.ListElectricDemandHistoryResponse,
  /**
   * @param {!proto.smartcore.bos.ListElectricDemandHistoryRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.smartcore.bos.ListElectricDemandHistoryResponse.deserializeBinary
);


/**
 * @param {!proto.smartcore.bos.ListElectricDemandHistoryRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.smartcore.bos.ListElectricDemandHistoryResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.smartcore.bos.ListElectricDemandHistoryResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.smartcore.bos.ElectricHistoryClient.prototype.listElectricDemandHistory =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/smartcore.bos.ElectricHistory/ListElectricDemandHistory',
      request,
      metadata || {},
      methodDescriptor_ElectricHistory_ListElectricDemandHistory,
      callback);
};


/**
 * @param {!proto.smartcore.bos.ListElectricDemandHistoryRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.smartcore.bos.ListElectricDemandHistoryResponse>}
 *     Promise that resolves to the response
 */
proto.smartcore.bos.ElectricHistoryPromiseClient.prototype.listElectricDemandHistory =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/smartcore.bos.ElectricHistory/ListElectricDemandHistory',
      request,
      metadata || {},
      methodDescriptor_ElectricHistory_ListElectricDemandHistory);
};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.smartcore.bos.OccupancySensorHistoryClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.smartcore.bos.OccupancySensorHistoryPromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.smartcore.bos.ListOccupancyHistoryRequest,
 *   !proto.smartcore.bos.ListOccupancyHistoryResponse>}
 */
const methodDescriptor_OccupancySensorHistory_ListOccupancyHistory = new grpc.web.MethodDescriptor(
  '/smartcore.bos.OccupancySensorHistory/ListOccupancyHistory',
  grpc.web.MethodType.UNARY,
  proto.smartcore.bos.ListOccupancyHistoryRequest,
  proto.smartcore.bos.ListOccupancyHistoryResponse,
  /**
   * @param {!proto.smartcore.bos.ListOccupancyHistoryRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.smartcore.bos.ListOccupancyHistoryResponse.deserializeBinary
);


/**
 * @param {!proto.smartcore.bos.ListOccupancyHistoryRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.smartcore.bos.ListOccupancyHistoryResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.smartcore.bos.ListOccupancyHistoryResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.smartcore.bos.OccupancySensorHistoryClient.prototype.listOccupancyHistory =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/smartcore.bos.OccupancySensorHistory/ListOccupancyHistory',
      request,
      metadata || {},
      methodDescriptor_OccupancySensorHistory_ListOccupancyHistory,
      callback);
};


/**
 * @param {!proto.smartcore.bos.ListOccupancyHistoryRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.smartcore.bos.ListOccupancyHistoryResponse>}
 *     Promise that resolves to the response
 */
proto.smartcore.bos.OccupancySensorHistoryPromiseClient.prototype.listOccupancyHistory =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/smartcore.bos.OccupancySensorHistory/ListOccupancyHistory',
      request,
      metadata || {},
      methodDescriptor_OccupancySensorHistory_ListOccupancyHistory);
};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.smartcore.bos.AirQualitySensorHistoryClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.smartcore.bos.AirQualitySensorHistoryPromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.smartcore.bos.ListAirQualityHistoryRequest,
 *   !proto.smartcore.bos.ListAirQualityHistoryResponse>}
 */
const methodDescriptor_AirQualitySensorHistory_ListAirQualityHistory = new grpc.web.MethodDescriptor(
  '/smartcore.bos.AirQualitySensorHistory/ListAirQualityHistory',
  grpc.web.MethodType.UNARY,
  proto.smartcore.bos.ListAirQualityHistoryRequest,
  proto.smartcore.bos.ListAirQualityHistoryResponse,
  /**
   * @param {!proto.smartcore.bos.ListAirQualityHistoryRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.smartcore.bos.ListAirQualityHistoryResponse.deserializeBinary
);


/**
 * @param {!proto.smartcore.bos.ListAirQualityHistoryRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.smartcore.bos.ListAirQualityHistoryResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.smartcore.bos.ListAirQualityHistoryResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.smartcore.bos.AirQualitySensorHistoryClient.prototype.listAirQualityHistory =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/smartcore.bos.AirQualitySensorHistory/ListAirQualityHistory',
      request,
      metadata || {},
      methodDescriptor_AirQualitySensorHistory_ListAirQualityHistory,
      callback);
};


/**
 * @param {!proto.smartcore.bos.ListAirQualityHistoryRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.smartcore.bos.ListAirQualityHistoryResponse>}
 *     Promise that resolves to the response
 */
proto.smartcore.bos.AirQualitySensorHistoryPromiseClient.prototype.listAirQualityHistory =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/smartcore.bos.AirQualitySensorHistory/ListAirQualityHistory',
      request,
      metadata || {},
      methodDescriptor_AirQualitySensorHistory_ListAirQualityHistory);
};


module.exports = proto.smartcore.bos;

