// source: health.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js');
goog.object.extend(proto, google_protobuf_duration_pb);
var google_protobuf_field_mask_pb = require('google-protobuf/google/protobuf/field_mask_pb.js');
goog.object.extend(proto, google_protobuf_field_mask_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var actor_pb = require('./actor_pb.js');
goog.object.extend(proto, actor_pb);
var types_change_pb = require('@smart-core-os/sc-api-grpc-web/types/change_pb.js');
goog.object.extend(proto, types_change_pb);
var types_time_period_pb = require('@smart-core-os/sc-api-grpc-web/types/time/period_pb.js');
goog.object.extend(proto, types_time_period_pb);
goog.exportSymbol('proto.smartcore.bos.GetHealthCheckRequest', null, global);
goog.exportSymbol('proto.smartcore.bos.HealthCheck', null, global);
goog.exportSymbol('proto.smartcore.bos.HealthCheck.Ack', null, global);
goog.exportSymbol('proto.smartcore.bos.HealthCheck.Bounds', null, global);
goog.exportSymbol('proto.smartcore.bos.HealthCheck.Bounds.ExpectedCase', null, global);
goog.exportSymbol('proto.smartcore.bos.HealthCheck.CheckCase', null, global);
goog.exportSymbol('proto.smartcore.bos.HealthCheck.ComplianceImpact', null, global);
goog.exportSymbol('proto.smartcore.bos.HealthCheck.ComplianceImpact.Contribution', null, global);
goog.exportSymbol('proto.smartcore.bos.HealthCheck.ComplianceImpact.Standard', null, global);
goog.exportSymbol('proto.smartcore.bos.HealthCheck.EquipmentImpact', null, global);
goog.exportSymbol('proto.smartcore.bos.HealthCheck.Error', null, global);
goog.exportSymbol('proto.smartcore.bos.HealthCheck.Error.Code', null, global);
goog.exportSymbol('proto.smartcore.bos.HealthCheck.Faults', null, global);
goog.exportSymbol('proto.smartcore.bos.HealthCheck.HealthChange', null, global);
goog.exportSymbol('proto.smartcore.bos.HealthCheck.Normality', null, global);
goog.exportSymbol('proto.smartcore.bos.HealthCheck.OccupantImpact', null, global);
goog.exportSymbol('proto.smartcore.bos.HealthCheck.Reliability', null, global);
goog.exportSymbol('proto.smartcore.bos.HealthCheck.Reliability.Affects', null, global);
goog.exportSymbol('proto.smartcore.bos.HealthCheck.Reliability.Cause', null, global);
goog.exportSymbol('proto.smartcore.bos.HealthCheck.Reliability.State', null, global);
goog.exportSymbol('proto.smartcore.bos.HealthCheck.Value', null, global);
goog.exportSymbol('proto.smartcore.bos.HealthCheck.Value.ValueCase', null, global);
goog.exportSymbol('proto.smartcore.bos.HealthCheck.ValueRange', null, global);
goog.exportSymbol('proto.smartcore.bos.HealthCheck.Values', null, global);
goog.exportSymbol('proto.smartcore.bos.HealthCheckRecord', null, global);
goog.exportSymbol('proto.smartcore.bos.HealthCheckRecord.RecordType', null, global);
goog.exportSymbol('proto.smartcore.bos.ListHealthCheckHistoryRequest', null, global);
goog.exportSymbol('proto.smartcore.bos.ListHealthCheckHistoryResponse', null, global);
goog.exportSymbol('proto.smartcore.bos.ListHealthChecksRequest', null, global);
goog.exportSymbol('proto.smartcore.bos.ListHealthChecksResponse', null, global);
goog.exportSymbol('proto.smartcore.bos.PullHealthCheckRequest', null, global);
goog.exportSymbol('proto.smartcore.bos.PullHealthCheckResponse', null, global);
goog.exportSymbol('proto.smartcore.bos.PullHealthCheckResponse.Change', null, global);
goog.exportSymbol('proto.smartcore.bos.PullHealthChecksRequest', null, global);
goog.exportSymbol('proto.smartcore.bos.PullHealthChecksResponse', null, global);
goog.exportSymbol('proto.smartcore.bos.PullHealthChecksResponse.Change', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.bos.HealthCheck = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.smartcore.bos.HealthCheck.repeatedFields_, proto.smartcore.bos.HealthCheck.oneofGroups_);
};
goog.inherits(proto.smartcore.bos.HealthCheck, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.bos.HealthCheck.displayName = 'proto.smartcore.bos.HealthCheck';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.bos.HealthCheck.ComplianceImpact = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.smartcore.bos.HealthCheck.ComplianceImpact, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.bos.HealthCheck.ComplianceImpact.displayName = 'proto.smartcore.bos.HealthCheck.ComplianceImpact';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.bos.HealthCheck.ComplianceImpact.Standard = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.smartcore.bos.HealthCheck.ComplianceImpact.Standard, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.bos.HealthCheck.ComplianceImpact.Standard.displayName = 'proto.smartcore.bos.HealthCheck.ComplianceImpact.Standard';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.bos.HealthCheck.Error = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.smartcore.bos.HealthCheck.Error, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.bos.HealthCheck.Error.displayName = 'proto.smartcore.bos.HealthCheck.Error';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.bos.HealthCheck.Error.Code = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.smartcore.bos.HealthCheck.Error.Code, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.bos.HealthCheck.Error.Code.displayName = 'proto.smartcore.bos.HealthCheck.Error.Code';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.bos.HealthCheck.Reliability = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.smartcore.bos.HealthCheck.Reliability, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.bos.HealthCheck.Reliability.displayName = 'proto.smartcore.bos.HealthCheck.Reliability';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.bos.HealthCheck.Reliability.Cause = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.smartcore.bos.HealthCheck.Reliability.Cause, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.bos.HealthCheck.Reliability.Cause.displayName = 'proto.smartcore.bos.HealthCheck.Reliability.Cause';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.bos.HealthCheck.Reliability.Affects = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.smartcore.bos.HealthCheck.Reliability.Affects, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.bos.HealthCheck.Reliability.Affects.displayName = 'proto.smartcore.bos.HealthCheck.Reliability.Affects';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.bos.HealthCheck.Value = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.smartcore.bos.HealthCheck.Value.oneofGroups_);
};
goog.inherits(proto.smartcore.bos.HealthCheck.Value, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.bos.HealthCheck.Value.displayName = 'proto.smartcore.bos.HealthCheck.Value';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.bos.HealthCheck.ValueRange = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.smartcore.bos.HealthCheck.ValueRange, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.bos.HealthCheck.ValueRange.displayName = 'proto.smartcore.bos.HealthCheck.ValueRange';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.bos.HealthCheck.Values = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.smartcore.bos.HealthCheck.Values.repeatedFields_, null);
};
goog.inherits(proto.smartcore.bos.HealthCheck.Values, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.bos.HealthCheck.Values.displayName = 'proto.smartcore.bos.HealthCheck.Values';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.bos.HealthCheck.Bounds = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.smartcore.bos.HealthCheck.Bounds.oneofGroups_);
};
goog.inherits(proto.smartcore.bos.HealthCheck.Bounds, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.bos.HealthCheck.Bounds.displayName = 'proto.smartcore.bos.HealthCheck.Bounds';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.bos.HealthCheck.Faults = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.smartcore.bos.HealthCheck.Faults.repeatedFields_, null);
};
goog.inherits(proto.smartcore.bos.HealthCheck.Faults, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.bos.HealthCheck.Faults.displayName = 'proto.smartcore.bos.HealthCheck.Faults';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.bos.HealthCheck.Ack = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.smartcore.bos.HealthCheck.Ack, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.bos.HealthCheck.Ack.displayName = 'proto.smartcore.bos.HealthCheck.Ack';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.bos.HealthCheckRecord = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.smartcore.bos.HealthCheckRecord, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.bos.HealthCheckRecord.displayName = 'proto.smartcore.bos.HealthCheckRecord';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.bos.ListHealthChecksRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.smartcore.bos.ListHealthChecksRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.bos.ListHealthChecksRequest.displayName = 'proto.smartcore.bos.ListHealthChecksRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.bos.ListHealthChecksResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.smartcore.bos.ListHealthChecksResponse.repeatedFields_, null);
};
goog.inherits(proto.smartcore.bos.ListHealthChecksResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.bos.ListHealthChecksResponse.displayName = 'proto.smartcore.bos.ListHealthChecksResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.bos.PullHealthChecksRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.smartcore.bos.PullHealthChecksRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.bos.PullHealthChecksRequest.displayName = 'proto.smartcore.bos.PullHealthChecksRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.bos.PullHealthChecksResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.smartcore.bos.PullHealthChecksResponse.repeatedFields_, null);
};
goog.inherits(proto.smartcore.bos.PullHealthChecksResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.bos.PullHealthChecksResponse.displayName = 'proto.smartcore.bos.PullHealthChecksResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.bos.PullHealthChecksResponse.Change = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.smartcore.bos.PullHealthChecksResponse.Change, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.bos.PullHealthChecksResponse.Change.displayName = 'proto.smartcore.bos.PullHealthChecksResponse.Change';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.bos.GetHealthCheckRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.smartcore.bos.GetHealthCheckRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.bos.GetHealthCheckRequest.displayName = 'proto.smartcore.bos.GetHealthCheckRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.bos.PullHealthCheckRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.smartcore.bos.PullHealthCheckRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.bos.PullHealthCheckRequest.displayName = 'proto.smartcore.bos.PullHealthCheckRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.bos.PullHealthCheckResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.smartcore.bos.PullHealthCheckResponse.repeatedFields_, null);
};
goog.inherits(proto.smartcore.bos.PullHealthCheckResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.bos.PullHealthCheckResponse.displayName = 'proto.smartcore.bos.PullHealthCheckResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.bos.PullHealthCheckResponse.Change = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.smartcore.bos.PullHealthCheckResponse.Change, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.bos.PullHealthCheckResponse.Change.displayName = 'proto.smartcore.bos.PullHealthCheckResponse.Change';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.bos.ListHealthCheckHistoryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.smartcore.bos.ListHealthCheckHistoryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.bos.ListHealthCheckHistoryRequest.displayName = 'proto.smartcore.bos.ListHealthCheckHistoryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.bos.ListHealthCheckHistoryResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.smartcore.bos.ListHealthCheckHistoryResponse.repeatedFields_, null);
};
goog.inherits(proto.smartcore.bos.ListHealthCheckHistoryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.bos.ListHealthCheckHistoryResponse.displayName = 'proto.smartcore.bos.ListHealthCheckHistoryResponse';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.smartcore.bos.HealthCheck.repeatedFields_ = [7];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.smartcore.bos.HealthCheck.oneofGroups_ = [[15,16]];

/**
 * @enum {number}
 */
proto.smartcore.bos.HealthCheck.CheckCase = {
  CHECK_NOT_SET: 0,
  BOUNDS: 15,
  FAULTS: 16
};

/**
 * @return {proto.smartcore.bos.HealthCheck.CheckCase}
 */
proto.smartcore.bos.HealthCheck.prototype.getCheckCase = function() {
  return /** @type {proto.smartcore.bos.HealthCheck.CheckCase} */(jspb.Message.computeOneofCase(this, proto.smartcore.bos.HealthCheck.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.bos.HealthCheck.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.bos.HealthCheck.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.bos.HealthCheck} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.HealthCheck.toObject = function(includeInstance, msg) {
  var f, obj = {
id: jspb.Message.getFieldWithDefault(msg, 1, ""),
displayName: jspb.Message.getFieldWithDefault(msg, 2, ""),
description: jspb.Message.getFieldWithDefault(msg, 3, ""),
occupantImpact: jspb.Message.getFieldWithDefault(msg, 5, 0),
equipmentImpact: jspb.Message.getFieldWithDefault(msg, 6, 0),
complianceImpactsList: jspb.Message.toObjectList(msg.getComplianceImpactsList(),
    proto.smartcore.bos.HealthCheck.ComplianceImpact.toObject, includeInstance),
reliability: (f = msg.getReliability()) && proto.smartcore.bos.HealthCheck.Reliability.toObject(includeInstance, f),
normality: jspb.Message.getFieldWithDefault(msg, 11, 0),
normalTime: (f = msg.getNormalTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
abnormalTime: (f = msg.getAbnormalTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
bounds: (f = msg.getBounds()) && proto.smartcore.bos.HealthCheck.Bounds.toObject(includeInstance, f),
faults: (f = msg.getFaults()) && proto.smartcore.bos.HealthCheck.Faults.toObject(includeInstance, f),
ackExpected: jspb.Message.getFieldWithDefault(msg, 20, 0),
ackRequired: jspb.Message.getFieldWithDefault(msg, 21, 0),
toHealthyAck: (f = msg.getToHealthyAck()) && proto.smartcore.bos.HealthCheck.Ack.toObject(includeInstance, f),
toUnreliableAck: (f = msg.getToUnreliableAck()) && proto.smartcore.bos.HealthCheck.Ack.toObject(includeInstance, f),
toAbnormalAck: (f = msg.getToAbnormalAck()) && proto.smartcore.bos.HealthCheck.Ack.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.bos.HealthCheck}
 */
proto.smartcore.bos.HealthCheck.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.bos.HealthCheck;
  return proto.smartcore.bos.HealthCheck.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.bos.HealthCheck} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.bos.HealthCheck}
 */
proto.smartcore.bos.HealthCheck.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 5:
      var value = /** @type {!proto.smartcore.bos.HealthCheck.OccupantImpact} */ (reader.readEnum());
      msg.setOccupantImpact(value);
      break;
    case 6:
      var value = /** @type {!proto.smartcore.bos.HealthCheck.EquipmentImpact} */ (reader.readEnum());
      msg.setEquipmentImpact(value);
      break;
    case 7:
      var value = new proto.smartcore.bos.HealthCheck.ComplianceImpact;
      reader.readMessage(value,proto.smartcore.bos.HealthCheck.ComplianceImpact.deserializeBinaryFromReader);
      msg.addComplianceImpacts(value);
      break;
    case 10:
      var value = new proto.smartcore.bos.HealthCheck.Reliability;
      reader.readMessage(value,proto.smartcore.bos.HealthCheck.Reliability.deserializeBinaryFromReader);
      msg.setReliability(value);
      break;
    case 11:
      var value = /** @type {!proto.smartcore.bos.HealthCheck.Normality} */ (reader.readEnum());
      msg.setNormality(value);
      break;
    case 12:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setNormalTime(value);
      break;
    case 13:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setAbnormalTime(value);
      break;
    case 15:
      var value = new proto.smartcore.bos.HealthCheck.Bounds;
      reader.readMessage(value,proto.smartcore.bos.HealthCheck.Bounds.deserializeBinaryFromReader);
      msg.setBounds(value);
      break;
    case 16:
      var value = new proto.smartcore.bos.HealthCheck.Faults;
      reader.readMessage(value,proto.smartcore.bos.HealthCheck.Faults.deserializeBinaryFromReader);
      msg.setFaults(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAckExpected(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAckRequired(value);
      break;
    case 22:
      var value = new proto.smartcore.bos.HealthCheck.Ack;
      reader.readMessage(value,proto.smartcore.bos.HealthCheck.Ack.deserializeBinaryFromReader);
      msg.setToHealthyAck(value);
      break;
    case 23:
      var value = new proto.smartcore.bos.HealthCheck.Ack;
      reader.readMessage(value,proto.smartcore.bos.HealthCheck.Ack.deserializeBinaryFromReader);
      msg.setToUnreliableAck(value);
      break;
    case 24:
      var value = new proto.smartcore.bos.HealthCheck.Ack;
      reader.readMessage(value,proto.smartcore.bos.HealthCheck.Ack.deserializeBinaryFromReader);
      msg.setToAbnormalAck(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.bos.HealthCheck.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.bos.HealthCheck.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.bos.HealthCheck} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.HealthCheck.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDisplayName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getOccupantImpact();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getEquipmentImpact();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getComplianceImpactsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.smartcore.bos.HealthCheck.ComplianceImpact.serializeBinaryToWriter
    );
  }
  f = message.getReliability();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.smartcore.bos.HealthCheck.Reliability.serializeBinaryToWriter
    );
  }
  f = message.getNormality();
  if (f !== 0.0) {
    writer.writeEnum(
      11,
      f
    );
  }
  f = message.getNormalTime();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getAbnormalTime();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getBounds();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.smartcore.bos.HealthCheck.Bounds.serializeBinaryToWriter
    );
  }
  f = message.getFaults();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto.smartcore.bos.HealthCheck.Faults.serializeBinaryToWriter
    );
  }
  f = message.getAckExpected();
  if (f !== 0) {
    writer.writeInt32(
      20,
      f
    );
  }
  f = message.getAckRequired();
  if (f !== 0) {
    writer.writeInt32(
      21,
      f
    );
  }
  f = message.getToHealthyAck();
  if (f != null) {
    writer.writeMessage(
      22,
      f,
      proto.smartcore.bos.HealthCheck.Ack.serializeBinaryToWriter
    );
  }
  f = message.getToUnreliableAck();
  if (f != null) {
    writer.writeMessage(
      23,
      f,
      proto.smartcore.bos.HealthCheck.Ack.serializeBinaryToWriter
    );
  }
  f = message.getToAbnormalAck();
  if (f != null) {
    writer.writeMessage(
      24,
      f,
      proto.smartcore.bos.HealthCheck.Ack.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.smartcore.bos.HealthCheck.OccupantImpact = {
  OCCUPANT_IMPACT_UNSPECIFIED: 0,
  NO_OCCUPANT_IMPACT: 1,
  COMFORT: 2,
  HEALTH: 3,
  LIFE: 4
};

/**
 * @enum {number}
 */
proto.smartcore.bos.HealthCheck.EquipmentImpact = {
  EQUIPMENT_IMPACT_UNSPECIFIED: 0,
  NO_EQUIPMENT_IMPACT: 1,
  WARRANTY: 2,
  LIFESPAN: 3,
  FUNCTION: 4
};

/**
 * @enum {number}
 */
proto.smartcore.bos.HealthCheck.Normality = {
  NORMALITY_UNSPECIFIED: 0,
  NORMAL: 1,
  ABNORMAL: 2,
  LOW: 3,
  HIGH: 4
};

/**
 * @enum {number}
 */
proto.smartcore.bos.HealthCheck.HealthChange = {
  HEALTH_CHANGE_UNSPECIFIED: 0,
  TO_HEALTHY: 1,
  TO_UNRELIABLE: 2,
  TO_ABNORMAL: 4
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.bos.HealthCheck.ComplianceImpact.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.bos.HealthCheck.ComplianceImpact.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.bos.HealthCheck.ComplianceImpact} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.HealthCheck.ComplianceImpact.toObject = function(includeInstance, msg) {
  var f, obj = {
standard: (f = msg.getStandard()) && proto.smartcore.bos.HealthCheck.ComplianceImpact.Standard.toObject(includeInstance, f),
contribution: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.bos.HealthCheck.ComplianceImpact}
 */
proto.smartcore.bos.HealthCheck.ComplianceImpact.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.bos.HealthCheck.ComplianceImpact;
  return proto.smartcore.bos.HealthCheck.ComplianceImpact.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.bos.HealthCheck.ComplianceImpact} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.bos.HealthCheck.ComplianceImpact}
 */
proto.smartcore.bos.HealthCheck.ComplianceImpact.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.smartcore.bos.HealthCheck.ComplianceImpact.Standard;
      reader.readMessage(value,proto.smartcore.bos.HealthCheck.ComplianceImpact.Standard.deserializeBinaryFromReader);
      msg.setStandard(value);
      break;
    case 2:
      var value = /** @type {!proto.smartcore.bos.HealthCheck.ComplianceImpact.Contribution} */ (reader.readEnum());
      msg.setContribution(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.bos.HealthCheck.ComplianceImpact.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.bos.HealthCheck.ComplianceImpact.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.bos.HealthCheck.ComplianceImpact} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.HealthCheck.ComplianceImpact.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStandard();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.smartcore.bos.HealthCheck.ComplianceImpact.Standard.serializeBinaryToWriter
    );
  }
  f = message.getContribution();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.smartcore.bos.HealthCheck.ComplianceImpact.Contribution = {
  CONTRIBUTION_UNSPECIFIED: 0,
  NOTE: 1,
  RATING: 2,
  WARNING: 3,
  FAIL: 4
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.bos.HealthCheck.ComplianceImpact.Standard.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.bos.HealthCheck.ComplianceImpact.Standard.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.bos.HealthCheck.ComplianceImpact.Standard} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.HealthCheck.ComplianceImpact.Standard.toObject = function(includeInstance, msg) {
  var f, obj = {
displayName: jspb.Message.getFieldWithDefault(msg, 1, ""),
title: jspb.Message.getFieldWithDefault(msg, 2, ""),
description: jspb.Message.getFieldWithDefault(msg, 3, ""),
organization: jspb.Message.getFieldWithDefault(msg, 4, ""),
reference: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.bos.HealthCheck.ComplianceImpact.Standard}
 */
proto.smartcore.bos.HealthCheck.ComplianceImpact.Standard.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.bos.HealthCheck.ComplianceImpact.Standard;
  return proto.smartcore.bos.HealthCheck.ComplianceImpact.Standard.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.bos.HealthCheck.ComplianceImpact.Standard} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.bos.HealthCheck.ComplianceImpact.Standard}
 */
proto.smartcore.bos.HealthCheck.ComplianceImpact.Standard.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganization(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setReference(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.bos.HealthCheck.ComplianceImpact.Standard.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.bos.HealthCheck.ComplianceImpact.Standard.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.bos.HealthCheck.ComplianceImpact.Standard} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.HealthCheck.ComplianceImpact.Standard.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDisplayName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getOrganization();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getReference();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string display_name = 1;
 * @return {string}
 */
proto.smartcore.bos.HealthCheck.ComplianceImpact.Standard.prototype.getDisplayName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.smartcore.bos.HealthCheck.ComplianceImpact.Standard} returns this
 */
proto.smartcore.bos.HealthCheck.ComplianceImpact.Standard.prototype.setDisplayName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.smartcore.bos.HealthCheck.ComplianceImpact.Standard.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.smartcore.bos.HealthCheck.ComplianceImpact.Standard} returns this
 */
proto.smartcore.bos.HealthCheck.ComplianceImpact.Standard.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.smartcore.bos.HealthCheck.ComplianceImpact.Standard.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.smartcore.bos.HealthCheck.ComplianceImpact.Standard} returns this
 */
proto.smartcore.bos.HealthCheck.ComplianceImpact.Standard.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string organization = 4;
 * @return {string}
 */
proto.smartcore.bos.HealthCheck.ComplianceImpact.Standard.prototype.getOrganization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.smartcore.bos.HealthCheck.ComplianceImpact.Standard} returns this
 */
proto.smartcore.bos.HealthCheck.ComplianceImpact.Standard.prototype.setOrganization = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string reference = 5;
 * @return {string}
 */
proto.smartcore.bos.HealthCheck.ComplianceImpact.Standard.prototype.getReference = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.smartcore.bos.HealthCheck.ComplianceImpact.Standard} returns this
 */
proto.smartcore.bos.HealthCheck.ComplianceImpact.Standard.prototype.setReference = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional Standard standard = 1;
 * @return {?proto.smartcore.bos.HealthCheck.ComplianceImpact.Standard}
 */
proto.smartcore.bos.HealthCheck.ComplianceImpact.prototype.getStandard = function() {
  return /** @type{?proto.smartcore.bos.HealthCheck.ComplianceImpact.Standard} */ (
    jspb.Message.getWrapperField(this, proto.smartcore.bos.HealthCheck.ComplianceImpact.Standard, 1));
};


/**
 * @param {?proto.smartcore.bos.HealthCheck.ComplianceImpact.Standard|undefined} value
 * @return {!proto.smartcore.bos.HealthCheck.ComplianceImpact} returns this
*/
proto.smartcore.bos.HealthCheck.ComplianceImpact.prototype.setStandard = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.bos.HealthCheck.ComplianceImpact} returns this
 */
proto.smartcore.bos.HealthCheck.ComplianceImpact.prototype.clearStandard = function() {
  return this.setStandard(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.HealthCheck.ComplianceImpact.prototype.hasStandard = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Contribution contribution = 2;
 * @return {!proto.smartcore.bos.HealthCheck.ComplianceImpact.Contribution}
 */
proto.smartcore.bos.HealthCheck.ComplianceImpact.prototype.getContribution = function() {
  return /** @type {!proto.smartcore.bos.HealthCheck.ComplianceImpact.Contribution} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.smartcore.bos.HealthCheck.ComplianceImpact.Contribution} value
 * @return {!proto.smartcore.bos.HealthCheck.ComplianceImpact} returns this
 */
proto.smartcore.bos.HealthCheck.ComplianceImpact.prototype.setContribution = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.bos.HealthCheck.Error.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.bos.HealthCheck.Error.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.bos.HealthCheck.Error} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.HealthCheck.Error.toObject = function(includeInstance, msg) {
  var f, obj = {
summaryText: jspb.Message.getFieldWithDefault(msg, 1, ""),
detailsText: jspb.Message.getFieldWithDefault(msg, 2, ""),
code: (f = msg.getCode()) && proto.smartcore.bos.HealthCheck.Error.Code.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.bos.HealthCheck.Error}
 */
proto.smartcore.bos.HealthCheck.Error.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.bos.HealthCheck.Error;
  return proto.smartcore.bos.HealthCheck.Error.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.bos.HealthCheck.Error} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.bos.HealthCheck.Error}
 */
proto.smartcore.bos.HealthCheck.Error.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSummaryText(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDetailsText(value);
      break;
    case 3:
      var value = new proto.smartcore.bos.HealthCheck.Error.Code;
      reader.readMessage(value,proto.smartcore.bos.HealthCheck.Error.Code.deserializeBinaryFromReader);
      msg.setCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.bos.HealthCheck.Error.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.bos.HealthCheck.Error.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.bos.HealthCheck.Error} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.HealthCheck.Error.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSummaryText();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDetailsText();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCode();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.smartcore.bos.HealthCheck.Error.Code.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.bos.HealthCheck.Error.Code.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.bos.HealthCheck.Error.Code.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.bos.HealthCheck.Error.Code} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.HealthCheck.Error.Code.toObject = function(includeInstance, msg) {
  var f, obj = {
code: jspb.Message.getFieldWithDefault(msg, 1, ""),
system: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.bos.HealthCheck.Error.Code}
 */
proto.smartcore.bos.HealthCheck.Error.Code.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.bos.HealthCheck.Error.Code;
  return proto.smartcore.bos.HealthCheck.Error.Code.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.bos.HealthCheck.Error.Code} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.bos.HealthCheck.Error.Code}
 */
proto.smartcore.bos.HealthCheck.Error.Code.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSystem(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.bos.HealthCheck.Error.Code.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.bos.HealthCheck.Error.Code.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.bos.HealthCheck.Error.Code} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.HealthCheck.Error.Code.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSystem();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string code = 1;
 * @return {string}
 */
proto.smartcore.bos.HealthCheck.Error.Code.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.smartcore.bos.HealthCheck.Error.Code} returns this
 */
proto.smartcore.bos.HealthCheck.Error.Code.prototype.setCode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string system = 2;
 * @return {string}
 */
proto.smartcore.bos.HealthCheck.Error.Code.prototype.getSystem = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.smartcore.bos.HealthCheck.Error.Code} returns this
 */
proto.smartcore.bos.HealthCheck.Error.Code.prototype.setSystem = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string summary_text = 1;
 * @return {string}
 */
proto.smartcore.bos.HealthCheck.Error.prototype.getSummaryText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.smartcore.bos.HealthCheck.Error} returns this
 */
proto.smartcore.bos.HealthCheck.Error.prototype.setSummaryText = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string details_text = 2;
 * @return {string}
 */
proto.smartcore.bos.HealthCheck.Error.prototype.getDetailsText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.smartcore.bos.HealthCheck.Error} returns this
 */
proto.smartcore.bos.HealthCheck.Error.prototype.setDetailsText = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Code code = 3;
 * @return {?proto.smartcore.bos.HealthCheck.Error.Code}
 */
proto.smartcore.bos.HealthCheck.Error.prototype.getCode = function() {
  return /** @type{?proto.smartcore.bos.HealthCheck.Error.Code} */ (
    jspb.Message.getWrapperField(this, proto.smartcore.bos.HealthCheck.Error.Code, 3));
};


/**
 * @param {?proto.smartcore.bos.HealthCheck.Error.Code|undefined} value
 * @return {!proto.smartcore.bos.HealthCheck.Error} returns this
*/
proto.smartcore.bos.HealthCheck.Error.prototype.setCode = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.bos.HealthCheck.Error} returns this
 */
proto.smartcore.bos.HealthCheck.Error.prototype.clearCode = function() {
  return this.setCode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.HealthCheck.Error.prototype.hasCode = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.bos.HealthCheck.Reliability.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.bos.HealthCheck.Reliability.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.bos.HealthCheck.Reliability} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.HealthCheck.Reliability.toObject = function(includeInstance, msg) {
  var f, obj = {
state: jspb.Message.getFieldWithDefault(msg, 1, 0),
reliableTime: (f = msg.getReliableTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
unreliableTime: (f = msg.getUnreliableTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
lastError: (f = msg.getLastError()) && proto.smartcore.bos.HealthCheck.Error.toObject(includeInstance, f),
cause: (f = msg.getCause()) && proto.smartcore.bos.HealthCheck.Reliability.Cause.toObject(includeInstance, f),
affects: (f = msg.getAffects()) && proto.smartcore.bos.HealthCheck.Reliability.Affects.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.bos.HealthCheck.Reliability}
 */
proto.smartcore.bos.HealthCheck.Reliability.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.bos.HealthCheck.Reliability;
  return proto.smartcore.bos.HealthCheck.Reliability.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.bos.HealthCheck.Reliability} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.bos.HealthCheck.Reliability}
 */
proto.smartcore.bos.HealthCheck.Reliability.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.smartcore.bos.HealthCheck.Reliability.State} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setReliableTime(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUnreliableTime(value);
      break;
    case 4:
      var value = new proto.smartcore.bos.HealthCheck.Error;
      reader.readMessage(value,proto.smartcore.bos.HealthCheck.Error.deserializeBinaryFromReader);
      msg.setLastError(value);
      break;
    case 5:
      var value = new proto.smartcore.bos.HealthCheck.Reliability.Cause;
      reader.readMessage(value,proto.smartcore.bos.HealthCheck.Reliability.Cause.deserializeBinaryFromReader);
      msg.setCause(value);
      break;
    case 6:
      var value = new proto.smartcore.bos.HealthCheck.Reliability.Affects;
      reader.readMessage(value,proto.smartcore.bos.HealthCheck.Reliability.Affects.deserializeBinaryFromReader);
      msg.setAffects(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.bos.HealthCheck.Reliability.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.bos.HealthCheck.Reliability.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.bos.HealthCheck.Reliability} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.HealthCheck.Reliability.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getReliableTime();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUnreliableTime();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getLastError();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.smartcore.bos.HealthCheck.Error.serializeBinaryToWriter
    );
  }
  f = message.getCause();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.smartcore.bos.HealthCheck.Reliability.Cause.serializeBinaryToWriter
    );
  }
  f = message.getAffects();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.smartcore.bos.HealthCheck.Reliability.Affects.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.smartcore.bos.HealthCheck.Reliability.State = {
  STATE_UNSPECIFIED: 0,
  RELIABLE: 1,
  UNRELIABLE: 2,
  CONN_TRANSIENT_FAILURE: 3,
  SEND_FAILURE: 4,
  NO_RESPONSE: 5,
  BAD_RESPONSE: 6,
  NOT_FOUND: 7,
  PERMISSION_DENIED: 8
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.bos.HealthCheck.Reliability.Cause.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.bos.HealthCheck.Reliability.Cause.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.bos.HealthCheck.Reliability.Cause} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.HealthCheck.Reliability.Cause.toObject = function(includeInstance, msg) {
  var f, obj = {
name: jspb.Message.getFieldWithDefault(msg, 1, ""),
error: (f = msg.getError()) && proto.smartcore.bos.HealthCheck.Error.toObject(includeInstance, f),
displayName: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.bos.HealthCheck.Reliability.Cause}
 */
proto.smartcore.bos.HealthCheck.Reliability.Cause.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.bos.HealthCheck.Reliability.Cause;
  return proto.smartcore.bos.HealthCheck.Reliability.Cause.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.bos.HealthCheck.Reliability.Cause} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.bos.HealthCheck.Reliability.Cause}
 */
proto.smartcore.bos.HealthCheck.Reliability.Cause.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new proto.smartcore.bos.HealthCheck.Error;
      reader.readMessage(value,proto.smartcore.bos.HealthCheck.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.bos.HealthCheck.Reliability.Cause.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.bos.HealthCheck.Reliability.Cause.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.bos.HealthCheck.Reliability.Cause} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.HealthCheck.Reliability.Cause.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.smartcore.bos.HealthCheck.Error.serializeBinaryToWriter
    );
  }
  f = message.getDisplayName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.smartcore.bos.HealthCheck.Reliability.Cause.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.smartcore.bos.HealthCheck.Reliability.Cause} returns this
 */
proto.smartcore.bos.HealthCheck.Reliability.Cause.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Error error = 2;
 * @return {?proto.smartcore.bos.HealthCheck.Error}
 */
proto.smartcore.bos.HealthCheck.Reliability.Cause.prototype.getError = function() {
  return /** @type{?proto.smartcore.bos.HealthCheck.Error} */ (
    jspb.Message.getWrapperField(this, proto.smartcore.bos.HealthCheck.Error, 2));
};


/**
 * @param {?proto.smartcore.bos.HealthCheck.Error|undefined} value
 * @return {!proto.smartcore.bos.HealthCheck.Reliability.Cause} returns this
*/
proto.smartcore.bos.HealthCheck.Reliability.Cause.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.bos.HealthCheck.Reliability.Cause} returns this
 */
proto.smartcore.bos.HealthCheck.Reliability.Cause.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.HealthCheck.Reliability.Cause.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string display_name = 3;
 * @return {string}
 */
proto.smartcore.bos.HealthCheck.Reliability.Cause.prototype.getDisplayName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.smartcore.bos.HealthCheck.Reliability.Cause} returns this
 */
proto.smartcore.bos.HealthCheck.Reliability.Cause.prototype.setDisplayName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.bos.HealthCheck.Reliability.Affects.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.bos.HealthCheck.Reliability.Affects.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.bos.HealthCheck.Reliability.Affects} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.HealthCheck.Reliability.Affects.toObject = function(includeInstance, msg) {
  var f, obj = {
count: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.bos.HealthCheck.Reliability.Affects}
 */
proto.smartcore.bos.HealthCheck.Reliability.Affects.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.bos.HealthCheck.Reliability.Affects;
  return proto.smartcore.bos.HealthCheck.Reliability.Affects.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.bos.HealthCheck.Reliability.Affects} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.bos.HealthCheck.Reliability.Affects}
 */
proto.smartcore.bos.HealthCheck.Reliability.Affects.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.bos.HealthCheck.Reliability.Affects.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.bos.HealthCheck.Reliability.Affects.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.bos.HealthCheck.Reliability.Affects} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.HealthCheck.Reliability.Affects.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 count = 1;
 * @return {number}
 */
proto.smartcore.bos.HealthCheck.Reliability.Affects.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.smartcore.bos.HealthCheck.Reliability.Affects} returns this
 */
proto.smartcore.bos.HealthCheck.Reliability.Affects.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional State state = 1;
 * @return {!proto.smartcore.bos.HealthCheck.Reliability.State}
 */
proto.smartcore.bos.HealthCheck.Reliability.prototype.getState = function() {
  return /** @type {!proto.smartcore.bos.HealthCheck.Reliability.State} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.smartcore.bos.HealthCheck.Reliability.State} value
 * @return {!proto.smartcore.bos.HealthCheck.Reliability} returns this
 */
proto.smartcore.bos.HealthCheck.Reliability.prototype.setState = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp reliable_time = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.smartcore.bos.HealthCheck.Reliability.prototype.getReliableTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.smartcore.bos.HealthCheck.Reliability} returns this
*/
proto.smartcore.bos.HealthCheck.Reliability.prototype.setReliableTime = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.bos.HealthCheck.Reliability} returns this
 */
proto.smartcore.bos.HealthCheck.Reliability.prototype.clearReliableTime = function() {
  return this.setReliableTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.HealthCheck.Reliability.prototype.hasReliableTime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Timestamp unreliable_time = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.smartcore.bos.HealthCheck.Reliability.prototype.getUnreliableTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.smartcore.bos.HealthCheck.Reliability} returns this
*/
proto.smartcore.bos.HealthCheck.Reliability.prototype.setUnreliableTime = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.bos.HealthCheck.Reliability} returns this
 */
proto.smartcore.bos.HealthCheck.Reliability.prototype.clearUnreliableTime = function() {
  return this.setUnreliableTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.HealthCheck.Reliability.prototype.hasUnreliableTime = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Error last_error = 4;
 * @return {?proto.smartcore.bos.HealthCheck.Error}
 */
proto.smartcore.bos.HealthCheck.Reliability.prototype.getLastError = function() {
  return /** @type{?proto.smartcore.bos.HealthCheck.Error} */ (
    jspb.Message.getWrapperField(this, proto.smartcore.bos.HealthCheck.Error, 4));
};


/**
 * @param {?proto.smartcore.bos.HealthCheck.Error|undefined} value
 * @return {!proto.smartcore.bos.HealthCheck.Reliability} returns this
*/
proto.smartcore.bos.HealthCheck.Reliability.prototype.setLastError = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.bos.HealthCheck.Reliability} returns this
 */
proto.smartcore.bos.HealthCheck.Reliability.prototype.clearLastError = function() {
  return this.setLastError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.HealthCheck.Reliability.prototype.hasLastError = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Cause cause = 5;
 * @return {?proto.smartcore.bos.HealthCheck.Reliability.Cause}
 */
proto.smartcore.bos.HealthCheck.Reliability.prototype.getCause = function() {
  return /** @type{?proto.smartcore.bos.HealthCheck.Reliability.Cause} */ (
    jspb.Message.getWrapperField(this, proto.smartcore.bos.HealthCheck.Reliability.Cause, 5));
};


/**
 * @param {?proto.smartcore.bos.HealthCheck.Reliability.Cause|undefined} value
 * @return {!proto.smartcore.bos.HealthCheck.Reliability} returns this
*/
proto.smartcore.bos.HealthCheck.Reliability.prototype.setCause = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.bos.HealthCheck.Reliability} returns this
 */
proto.smartcore.bos.HealthCheck.Reliability.prototype.clearCause = function() {
  return this.setCause(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.HealthCheck.Reliability.prototype.hasCause = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Affects affects = 6;
 * @return {?proto.smartcore.bos.HealthCheck.Reliability.Affects}
 */
proto.smartcore.bos.HealthCheck.Reliability.prototype.getAffects = function() {
  return /** @type{?proto.smartcore.bos.HealthCheck.Reliability.Affects} */ (
    jspb.Message.getWrapperField(this, proto.smartcore.bos.HealthCheck.Reliability.Affects, 6));
};


/**
 * @param {?proto.smartcore.bos.HealthCheck.Reliability.Affects|undefined} value
 * @return {!proto.smartcore.bos.HealthCheck.Reliability} returns this
*/
proto.smartcore.bos.HealthCheck.Reliability.prototype.setAffects = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.bos.HealthCheck.Reliability} returns this
 */
proto.smartcore.bos.HealthCheck.Reliability.prototype.clearAffects = function() {
  return this.setAffects(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.HealthCheck.Reliability.prototype.hasAffects = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.smartcore.bos.HealthCheck.Value.oneofGroups_ = [[1,2,3,4,5,6,7]];

/**
 * @enum {number}
 */
proto.smartcore.bos.HealthCheck.Value.ValueCase = {
  VALUE_NOT_SET: 0,
  BOOL_VALUE: 1,
  STRING_VALUE: 2,
  INT_VALUE: 3,
  UINT_VALUE: 4,
  FLOAT_VALUE: 5,
  TIMESTAMP_VALUE: 6,
  DURATION_VALUE: 7
};

/**
 * @return {proto.smartcore.bos.HealthCheck.Value.ValueCase}
 */
proto.smartcore.bos.HealthCheck.Value.prototype.getValueCase = function() {
  return /** @type {proto.smartcore.bos.HealthCheck.Value.ValueCase} */(jspb.Message.computeOneofCase(this, proto.smartcore.bos.HealthCheck.Value.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.bos.HealthCheck.Value.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.bos.HealthCheck.Value.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.bos.HealthCheck.Value} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.HealthCheck.Value.toObject = function(includeInstance, msg) {
  var f, obj = {
boolValue: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f,
stringValue: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
intValue: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
uintValue: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
floatValue: (f = jspb.Message.getOptionalFloatingPointField(msg, 5)) == null ? undefined : f,
timestampValue: (f = msg.getTimestampValue()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
durationValue: (f = msg.getDurationValue()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.bos.HealthCheck.Value}
 */
proto.smartcore.bos.HealthCheck.Value.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.bos.HealthCheck.Value;
  return proto.smartcore.bos.HealthCheck.Value.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.bos.HealthCheck.Value} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.bos.HealthCheck.Value}
 */
proto.smartcore.bos.HealthCheck.Value.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBoolValue(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStringValue(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setIntValue(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUintValue(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFloatValue(value);
      break;
    case 6:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestampValue(value);
      break;
    case 7:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setDurationValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.bos.HealthCheck.Value.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.bos.HealthCheck.Value.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.bos.HealthCheck.Value} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.HealthCheck.Value.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getTimestampValue();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getDurationValue();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool bool_value = 1;
 * @return {boolean}
 */
proto.smartcore.bos.HealthCheck.Value.prototype.getBoolValue = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.smartcore.bos.HealthCheck.Value} returns this
 */
proto.smartcore.bos.HealthCheck.Value.prototype.setBoolValue = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.smartcore.bos.HealthCheck.Value.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.smartcore.bos.HealthCheck.Value} returns this
 */
proto.smartcore.bos.HealthCheck.Value.prototype.clearBoolValue = function() {
  return jspb.Message.setOneofField(this, 1, proto.smartcore.bos.HealthCheck.Value.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.HealthCheck.Value.prototype.hasBoolValue = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string string_value = 2;
 * @return {string}
 */
proto.smartcore.bos.HealthCheck.Value.prototype.getStringValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.smartcore.bos.HealthCheck.Value} returns this
 */
proto.smartcore.bos.HealthCheck.Value.prototype.setStringValue = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.smartcore.bos.HealthCheck.Value.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.smartcore.bos.HealthCheck.Value} returns this
 */
proto.smartcore.bos.HealthCheck.Value.prototype.clearStringValue = function() {
  return jspb.Message.setOneofField(this, 2, proto.smartcore.bos.HealthCheck.Value.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.HealthCheck.Value.prototype.hasStringValue = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int64 int_value = 3;
 * @return {number}
 */
proto.smartcore.bos.HealthCheck.Value.prototype.getIntValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.smartcore.bos.HealthCheck.Value} returns this
 */
proto.smartcore.bos.HealthCheck.Value.prototype.setIntValue = function(value) {
  return jspb.Message.setOneofField(this, 3, proto.smartcore.bos.HealthCheck.Value.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.smartcore.bos.HealthCheck.Value} returns this
 */
proto.smartcore.bos.HealthCheck.Value.prototype.clearIntValue = function() {
  return jspb.Message.setOneofField(this, 3, proto.smartcore.bos.HealthCheck.Value.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.HealthCheck.Value.prototype.hasIntValue = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint64 uint_value = 4;
 * @return {number}
 */
proto.smartcore.bos.HealthCheck.Value.prototype.getUintValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.smartcore.bos.HealthCheck.Value} returns this
 */
proto.smartcore.bos.HealthCheck.Value.prototype.setUintValue = function(value) {
  return jspb.Message.setOneofField(this, 4, proto.smartcore.bos.HealthCheck.Value.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.smartcore.bos.HealthCheck.Value} returns this
 */
proto.smartcore.bos.HealthCheck.Value.prototype.clearUintValue = function() {
  return jspb.Message.setOneofField(this, 4, proto.smartcore.bos.HealthCheck.Value.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.HealthCheck.Value.prototype.hasUintValue = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional double float_value = 5;
 * @return {number}
 */
proto.smartcore.bos.HealthCheck.Value.prototype.getFloatValue = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.smartcore.bos.HealthCheck.Value} returns this
 */
proto.smartcore.bos.HealthCheck.Value.prototype.setFloatValue = function(value) {
  return jspb.Message.setOneofField(this, 5, proto.smartcore.bos.HealthCheck.Value.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.smartcore.bos.HealthCheck.Value} returns this
 */
proto.smartcore.bos.HealthCheck.Value.prototype.clearFloatValue = function() {
  return jspb.Message.setOneofField(this, 5, proto.smartcore.bos.HealthCheck.Value.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.HealthCheck.Value.prototype.hasFloatValue = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional google.protobuf.Timestamp timestamp_value = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.smartcore.bos.HealthCheck.Value.prototype.getTimestampValue = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.smartcore.bos.HealthCheck.Value} returns this
*/
proto.smartcore.bos.HealthCheck.Value.prototype.setTimestampValue = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.smartcore.bos.HealthCheck.Value.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.bos.HealthCheck.Value} returns this
 */
proto.smartcore.bos.HealthCheck.Value.prototype.clearTimestampValue = function() {
  return this.setTimestampValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.HealthCheck.Value.prototype.hasTimestampValue = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional google.protobuf.Duration duration_value = 7;
 * @return {?proto.google.protobuf.Duration}
 */
proto.smartcore.bos.HealthCheck.Value.prototype.getDurationValue = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 7));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.smartcore.bos.HealthCheck.Value} returns this
*/
proto.smartcore.bos.HealthCheck.Value.prototype.setDurationValue = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.smartcore.bos.HealthCheck.Value.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.bos.HealthCheck.Value} returns this
 */
proto.smartcore.bos.HealthCheck.Value.prototype.clearDurationValue = function() {
  return this.setDurationValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.HealthCheck.Value.prototype.hasDurationValue = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.bos.HealthCheck.ValueRange.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.bos.HealthCheck.ValueRange.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.bos.HealthCheck.ValueRange} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.HealthCheck.ValueRange.toObject = function(includeInstance, msg) {
  var f, obj = {
low: (f = msg.getLow()) && proto.smartcore.bos.HealthCheck.Value.toObject(includeInstance, f),
high: (f = msg.getHigh()) && proto.smartcore.bos.HealthCheck.Value.toObject(includeInstance, f),
deadband: (f = msg.getDeadband()) && proto.smartcore.bos.HealthCheck.Value.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.bos.HealthCheck.ValueRange}
 */
proto.smartcore.bos.HealthCheck.ValueRange.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.bos.HealthCheck.ValueRange;
  return proto.smartcore.bos.HealthCheck.ValueRange.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.bos.HealthCheck.ValueRange} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.bos.HealthCheck.ValueRange}
 */
proto.smartcore.bos.HealthCheck.ValueRange.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.smartcore.bos.HealthCheck.Value;
      reader.readMessage(value,proto.smartcore.bos.HealthCheck.Value.deserializeBinaryFromReader);
      msg.setLow(value);
      break;
    case 2:
      var value = new proto.smartcore.bos.HealthCheck.Value;
      reader.readMessage(value,proto.smartcore.bos.HealthCheck.Value.deserializeBinaryFromReader);
      msg.setHigh(value);
      break;
    case 3:
      var value = new proto.smartcore.bos.HealthCheck.Value;
      reader.readMessage(value,proto.smartcore.bos.HealthCheck.Value.deserializeBinaryFromReader);
      msg.setDeadband(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.bos.HealthCheck.ValueRange.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.bos.HealthCheck.ValueRange.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.bos.HealthCheck.ValueRange} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.HealthCheck.ValueRange.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLow();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.smartcore.bos.HealthCheck.Value.serializeBinaryToWriter
    );
  }
  f = message.getHigh();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.smartcore.bos.HealthCheck.Value.serializeBinaryToWriter
    );
  }
  f = message.getDeadband();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.smartcore.bos.HealthCheck.Value.serializeBinaryToWriter
    );
  }
};


/**
 * optional Value low = 1;
 * @return {?proto.smartcore.bos.HealthCheck.Value}
 */
proto.smartcore.bos.HealthCheck.ValueRange.prototype.getLow = function() {
  return /** @type{?proto.smartcore.bos.HealthCheck.Value} */ (
    jspb.Message.getWrapperField(this, proto.smartcore.bos.HealthCheck.Value, 1));
};


/**
 * @param {?proto.smartcore.bos.HealthCheck.Value|undefined} value
 * @return {!proto.smartcore.bos.HealthCheck.ValueRange} returns this
*/
proto.smartcore.bos.HealthCheck.ValueRange.prototype.setLow = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.bos.HealthCheck.ValueRange} returns this
 */
proto.smartcore.bos.HealthCheck.ValueRange.prototype.clearLow = function() {
  return this.setLow(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.HealthCheck.ValueRange.prototype.hasLow = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Value high = 2;
 * @return {?proto.smartcore.bos.HealthCheck.Value}
 */
proto.smartcore.bos.HealthCheck.ValueRange.prototype.getHigh = function() {
  return /** @type{?proto.smartcore.bos.HealthCheck.Value} */ (
    jspb.Message.getWrapperField(this, proto.smartcore.bos.HealthCheck.Value, 2));
};


/**
 * @param {?proto.smartcore.bos.HealthCheck.Value|undefined} value
 * @return {!proto.smartcore.bos.HealthCheck.ValueRange} returns this
*/
proto.smartcore.bos.HealthCheck.ValueRange.prototype.setHigh = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.bos.HealthCheck.ValueRange} returns this
 */
proto.smartcore.bos.HealthCheck.ValueRange.prototype.clearHigh = function() {
  return this.setHigh(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.HealthCheck.ValueRange.prototype.hasHigh = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Value deadband = 3;
 * @return {?proto.smartcore.bos.HealthCheck.Value}
 */
proto.smartcore.bos.HealthCheck.ValueRange.prototype.getDeadband = function() {
  return /** @type{?proto.smartcore.bos.HealthCheck.Value} */ (
    jspb.Message.getWrapperField(this, proto.smartcore.bos.HealthCheck.Value, 3));
};


/**
 * @param {?proto.smartcore.bos.HealthCheck.Value|undefined} value
 * @return {!proto.smartcore.bos.HealthCheck.ValueRange} returns this
*/
proto.smartcore.bos.HealthCheck.ValueRange.prototype.setDeadband = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.bos.HealthCheck.ValueRange} returns this
 */
proto.smartcore.bos.HealthCheck.ValueRange.prototype.clearDeadband = function() {
  return this.setDeadband(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.HealthCheck.ValueRange.prototype.hasDeadband = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.smartcore.bos.HealthCheck.Values.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.bos.HealthCheck.Values.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.bos.HealthCheck.Values.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.bos.HealthCheck.Values} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.HealthCheck.Values.toObject = function(includeInstance, msg) {
  var f, obj = {
valuesList: jspb.Message.toObjectList(msg.getValuesList(),
    proto.smartcore.bos.HealthCheck.Value.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.bos.HealthCheck.Values}
 */
proto.smartcore.bos.HealthCheck.Values.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.bos.HealthCheck.Values;
  return proto.smartcore.bos.HealthCheck.Values.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.bos.HealthCheck.Values} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.bos.HealthCheck.Values}
 */
proto.smartcore.bos.HealthCheck.Values.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.smartcore.bos.HealthCheck.Value;
      reader.readMessage(value,proto.smartcore.bos.HealthCheck.Value.deserializeBinaryFromReader);
      msg.addValues(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.bos.HealthCheck.Values.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.bos.HealthCheck.Values.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.bos.HealthCheck.Values} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.HealthCheck.Values.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValuesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.smartcore.bos.HealthCheck.Value.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Value values = 1;
 * @return {!Array<!proto.smartcore.bos.HealthCheck.Value>}
 */
proto.smartcore.bos.HealthCheck.Values.prototype.getValuesList = function() {
  return /** @type{!Array<!proto.smartcore.bos.HealthCheck.Value>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.smartcore.bos.HealthCheck.Value, 1));
};


/**
 * @param {!Array<!proto.smartcore.bos.HealthCheck.Value>} value
 * @return {!proto.smartcore.bos.HealthCheck.Values} returns this
*/
proto.smartcore.bos.HealthCheck.Values.prototype.setValuesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.smartcore.bos.HealthCheck.Value=} opt_value
 * @param {number=} opt_index
 * @return {!proto.smartcore.bos.HealthCheck.Value}
 */
proto.smartcore.bos.HealthCheck.Values.prototype.addValues = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.smartcore.bos.HealthCheck.Value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.smartcore.bos.HealthCheck.Values} returns this
 */
proto.smartcore.bos.HealthCheck.Values.prototype.clearValuesList = function() {
  return this.setValuesList([]);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.smartcore.bos.HealthCheck.Bounds.oneofGroups_ = [[2,3,4,6,7]];

/**
 * @enum {number}
 */
proto.smartcore.bos.HealthCheck.Bounds.ExpectedCase = {
  EXPECTED_NOT_SET: 0,
  NORMAL_VALUE: 2,
  ABNORMAL_VALUE: 3,
  NORMAL_RANGE: 4,
  NORMAL_VALUES: 6,
  ABNORMAL_VALUES: 7
};

/**
 * @return {proto.smartcore.bos.HealthCheck.Bounds.ExpectedCase}
 */
proto.smartcore.bos.HealthCheck.Bounds.prototype.getExpectedCase = function() {
  return /** @type {proto.smartcore.bos.HealthCheck.Bounds.ExpectedCase} */(jspb.Message.computeOneofCase(this, proto.smartcore.bos.HealthCheck.Bounds.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.bos.HealthCheck.Bounds.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.bos.HealthCheck.Bounds.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.bos.HealthCheck.Bounds} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.HealthCheck.Bounds.toObject = function(includeInstance, msg) {
  var f, obj = {
currentValue: (f = msg.getCurrentValue()) && proto.smartcore.bos.HealthCheck.Value.toObject(includeInstance, f),
normalValue: (f = msg.getNormalValue()) && proto.smartcore.bos.HealthCheck.Value.toObject(includeInstance, f),
abnormalValue: (f = msg.getAbnormalValue()) && proto.smartcore.bos.HealthCheck.Value.toObject(includeInstance, f),
normalRange: (f = msg.getNormalRange()) && proto.smartcore.bos.HealthCheck.ValueRange.toObject(includeInstance, f),
normalValues: (f = msg.getNormalValues()) && proto.smartcore.bos.HealthCheck.Values.toObject(includeInstance, f),
abnormalValues: (f = msg.getAbnormalValues()) && proto.smartcore.bos.HealthCheck.Values.toObject(includeInstance, f),
displayUnit: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.bos.HealthCheck.Bounds}
 */
proto.smartcore.bos.HealthCheck.Bounds.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.bos.HealthCheck.Bounds;
  return proto.smartcore.bos.HealthCheck.Bounds.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.bos.HealthCheck.Bounds} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.bos.HealthCheck.Bounds}
 */
proto.smartcore.bos.HealthCheck.Bounds.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.smartcore.bos.HealthCheck.Value;
      reader.readMessage(value,proto.smartcore.bos.HealthCheck.Value.deserializeBinaryFromReader);
      msg.setCurrentValue(value);
      break;
    case 2:
      var value = new proto.smartcore.bos.HealthCheck.Value;
      reader.readMessage(value,proto.smartcore.bos.HealthCheck.Value.deserializeBinaryFromReader);
      msg.setNormalValue(value);
      break;
    case 3:
      var value = new proto.smartcore.bos.HealthCheck.Value;
      reader.readMessage(value,proto.smartcore.bos.HealthCheck.Value.deserializeBinaryFromReader);
      msg.setAbnormalValue(value);
      break;
    case 4:
      var value = new proto.smartcore.bos.HealthCheck.ValueRange;
      reader.readMessage(value,proto.smartcore.bos.HealthCheck.ValueRange.deserializeBinaryFromReader);
      msg.setNormalRange(value);
      break;
    case 6:
      var value = new proto.smartcore.bos.HealthCheck.Values;
      reader.readMessage(value,proto.smartcore.bos.HealthCheck.Values.deserializeBinaryFromReader);
      msg.setNormalValues(value);
      break;
    case 7:
      var value = new proto.smartcore.bos.HealthCheck.Values;
      reader.readMessage(value,proto.smartcore.bos.HealthCheck.Values.deserializeBinaryFromReader);
      msg.setAbnormalValues(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayUnit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.bos.HealthCheck.Bounds.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.bos.HealthCheck.Bounds.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.bos.HealthCheck.Bounds} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.HealthCheck.Bounds.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCurrentValue();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.smartcore.bos.HealthCheck.Value.serializeBinaryToWriter
    );
  }
  f = message.getNormalValue();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.smartcore.bos.HealthCheck.Value.serializeBinaryToWriter
    );
  }
  f = message.getAbnormalValue();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.smartcore.bos.HealthCheck.Value.serializeBinaryToWriter
    );
  }
  f = message.getNormalRange();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.smartcore.bos.HealthCheck.ValueRange.serializeBinaryToWriter
    );
  }
  f = message.getNormalValues();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.smartcore.bos.HealthCheck.Values.serializeBinaryToWriter
    );
  }
  f = message.getAbnormalValues();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.smartcore.bos.HealthCheck.Values.serializeBinaryToWriter
    );
  }
  f = message.getDisplayUnit();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional Value current_value = 1;
 * @return {?proto.smartcore.bos.HealthCheck.Value}
 */
proto.smartcore.bos.HealthCheck.Bounds.prototype.getCurrentValue = function() {
  return /** @type{?proto.smartcore.bos.HealthCheck.Value} */ (
    jspb.Message.getWrapperField(this, proto.smartcore.bos.HealthCheck.Value, 1));
};


/**
 * @param {?proto.smartcore.bos.HealthCheck.Value|undefined} value
 * @return {!proto.smartcore.bos.HealthCheck.Bounds} returns this
*/
proto.smartcore.bos.HealthCheck.Bounds.prototype.setCurrentValue = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.bos.HealthCheck.Bounds} returns this
 */
proto.smartcore.bos.HealthCheck.Bounds.prototype.clearCurrentValue = function() {
  return this.setCurrentValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.HealthCheck.Bounds.prototype.hasCurrentValue = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Value normal_value = 2;
 * @return {?proto.smartcore.bos.HealthCheck.Value}
 */
proto.smartcore.bos.HealthCheck.Bounds.prototype.getNormalValue = function() {
  return /** @type{?proto.smartcore.bos.HealthCheck.Value} */ (
    jspb.Message.getWrapperField(this, proto.smartcore.bos.HealthCheck.Value, 2));
};


/**
 * @param {?proto.smartcore.bos.HealthCheck.Value|undefined} value
 * @return {!proto.smartcore.bos.HealthCheck.Bounds} returns this
*/
proto.smartcore.bos.HealthCheck.Bounds.prototype.setNormalValue = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.smartcore.bos.HealthCheck.Bounds.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.bos.HealthCheck.Bounds} returns this
 */
proto.smartcore.bos.HealthCheck.Bounds.prototype.clearNormalValue = function() {
  return this.setNormalValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.HealthCheck.Bounds.prototype.hasNormalValue = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Value abnormal_value = 3;
 * @return {?proto.smartcore.bos.HealthCheck.Value}
 */
proto.smartcore.bos.HealthCheck.Bounds.prototype.getAbnormalValue = function() {
  return /** @type{?proto.smartcore.bos.HealthCheck.Value} */ (
    jspb.Message.getWrapperField(this, proto.smartcore.bos.HealthCheck.Value, 3));
};


/**
 * @param {?proto.smartcore.bos.HealthCheck.Value|undefined} value
 * @return {!proto.smartcore.bos.HealthCheck.Bounds} returns this
*/
proto.smartcore.bos.HealthCheck.Bounds.prototype.setAbnormalValue = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.smartcore.bos.HealthCheck.Bounds.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.bos.HealthCheck.Bounds} returns this
 */
proto.smartcore.bos.HealthCheck.Bounds.prototype.clearAbnormalValue = function() {
  return this.setAbnormalValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.HealthCheck.Bounds.prototype.hasAbnormalValue = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ValueRange normal_range = 4;
 * @return {?proto.smartcore.bos.HealthCheck.ValueRange}
 */
proto.smartcore.bos.HealthCheck.Bounds.prototype.getNormalRange = function() {
  return /** @type{?proto.smartcore.bos.HealthCheck.ValueRange} */ (
    jspb.Message.getWrapperField(this, proto.smartcore.bos.HealthCheck.ValueRange, 4));
};


/**
 * @param {?proto.smartcore.bos.HealthCheck.ValueRange|undefined} value
 * @return {!proto.smartcore.bos.HealthCheck.Bounds} returns this
*/
proto.smartcore.bos.HealthCheck.Bounds.prototype.setNormalRange = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.smartcore.bos.HealthCheck.Bounds.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.bos.HealthCheck.Bounds} returns this
 */
proto.smartcore.bos.HealthCheck.Bounds.prototype.clearNormalRange = function() {
  return this.setNormalRange(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.HealthCheck.Bounds.prototype.hasNormalRange = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Values normal_values = 6;
 * @return {?proto.smartcore.bos.HealthCheck.Values}
 */
proto.smartcore.bos.HealthCheck.Bounds.prototype.getNormalValues = function() {
  return /** @type{?proto.smartcore.bos.HealthCheck.Values} */ (
    jspb.Message.getWrapperField(this, proto.smartcore.bos.HealthCheck.Values, 6));
};


/**
 * @param {?proto.smartcore.bos.HealthCheck.Values|undefined} value
 * @return {!proto.smartcore.bos.HealthCheck.Bounds} returns this
*/
proto.smartcore.bos.HealthCheck.Bounds.prototype.setNormalValues = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.smartcore.bos.HealthCheck.Bounds.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.bos.HealthCheck.Bounds} returns this
 */
proto.smartcore.bos.HealthCheck.Bounds.prototype.clearNormalValues = function() {
  return this.setNormalValues(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.HealthCheck.Bounds.prototype.hasNormalValues = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Values abnormal_values = 7;
 * @return {?proto.smartcore.bos.HealthCheck.Values}
 */
proto.smartcore.bos.HealthCheck.Bounds.prototype.getAbnormalValues = function() {
  return /** @type{?proto.smartcore.bos.HealthCheck.Values} */ (
    jspb.Message.getWrapperField(this, proto.smartcore.bos.HealthCheck.Values, 7));
};


/**
 * @param {?proto.smartcore.bos.HealthCheck.Values|undefined} value
 * @return {!proto.smartcore.bos.HealthCheck.Bounds} returns this
*/
proto.smartcore.bos.HealthCheck.Bounds.prototype.setAbnormalValues = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.smartcore.bos.HealthCheck.Bounds.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.bos.HealthCheck.Bounds} returns this
 */
proto.smartcore.bos.HealthCheck.Bounds.prototype.clearAbnormalValues = function() {
  return this.setAbnormalValues(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.HealthCheck.Bounds.prototype.hasAbnormalValues = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string display_unit = 8;
 * @return {string}
 */
proto.smartcore.bos.HealthCheck.Bounds.prototype.getDisplayUnit = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.smartcore.bos.HealthCheck.Bounds} returns this
 */
proto.smartcore.bos.HealthCheck.Bounds.prototype.setDisplayUnit = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.smartcore.bos.HealthCheck.Faults.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.bos.HealthCheck.Faults.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.bos.HealthCheck.Faults.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.bos.HealthCheck.Faults} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.HealthCheck.Faults.toObject = function(includeInstance, msg) {
  var f, obj = {
currentFaultsList: jspb.Message.toObjectList(msg.getCurrentFaultsList(),
    proto.smartcore.bos.HealthCheck.Error.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.bos.HealthCheck.Faults}
 */
proto.smartcore.bos.HealthCheck.Faults.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.bos.HealthCheck.Faults;
  return proto.smartcore.bos.HealthCheck.Faults.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.bos.HealthCheck.Faults} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.bos.HealthCheck.Faults}
 */
proto.smartcore.bos.HealthCheck.Faults.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.smartcore.bos.HealthCheck.Error;
      reader.readMessage(value,proto.smartcore.bos.HealthCheck.Error.deserializeBinaryFromReader);
      msg.addCurrentFaults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.bos.HealthCheck.Faults.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.bos.HealthCheck.Faults.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.bos.HealthCheck.Faults} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.HealthCheck.Faults.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCurrentFaultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.smartcore.bos.HealthCheck.Error.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Error current_faults = 1;
 * @return {!Array<!proto.smartcore.bos.HealthCheck.Error>}
 */
proto.smartcore.bos.HealthCheck.Faults.prototype.getCurrentFaultsList = function() {
  return /** @type{!Array<!proto.smartcore.bos.HealthCheck.Error>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.smartcore.bos.HealthCheck.Error, 1));
};


/**
 * @param {!Array<!proto.smartcore.bos.HealthCheck.Error>} value
 * @return {!proto.smartcore.bos.HealthCheck.Faults} returns this
*/
proto.smartcore.bos.HealthCheck.Faults.prototype.setCurrentFaultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.smartcore.bos.HealthCheck.Error=} opt_value
 * @param {number=} opt_index
 * @return {!proto.smartcore.bos.HealthCheck.Error}
 */
proto.smartcore.bos.HealthCheck.Faults.prototype.addCurrentFaults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.smartcore.bos.HealthCheck.Error, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.smartcore.bos.HealthCheck.Faults} returns this
 */
proto.smartcore.bos.HealthCheck.Faults.prototype.clearCurrentFaultsList = function() {
  return this.setCurrentFaultsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.bos.HealthCheck.Ack.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.bos.HealthCheck.Ack.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.bos.HealthCheck.Ack} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.HealthCheck.Ack.toObject = function(includeInstance, msg) {
  var f, obj = {
ackTime: (f = msg.getAckTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
actor: (f = msg.getActor()) && actor_pb.Actor.toObject(includeInstance, f),
source: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.bos.HealthCheck.Ack}
 */
proto.smartcore.bos.HealthCheck.Ack.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.bos.HealthCheck.Ack;
  return proto.smartcore.bos.HealthCheck.Ack.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.bos.HealthCheck.Ack} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.bos.HealthCheck.Ack}
 */
proto.smartcore.bos.HealthCheck.Ack.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setAckTime(value);
      break;
    case 2:
      var value = new actor_pb.Actor;
      reader.readMessage(value,actor_pb.Actor.deserializeBinaryFromReader);
      msg.setActor(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.bos.HealthCheck.Ack.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.bos.HealthCheck.Ack.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.bos.HealthCheck.Ack} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.HealthCheck.Ack.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAckTime();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getActor();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      actor_pb.Actor.serializeBinaryToWriter
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional google.protobuf.Timestamp ack_time = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.smartcore.bos.HealthCheck.Ack.prototype.getAckTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.smartcore.bos.HealthCheck.Ack} returns this
*/
proto.smartcore.bos.HealthCheck.Ack.prototype.setAckTime = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.bos.HealthCheck.Ack} returns this
 */
proto.smartcore.bos.HealthCheck.Ack.prototype.clearAckTime = function() {
  return this.setAckTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.HealthCheck.Ack.prototype.hasAckTime = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Actor actor = 2;
 * @return {?proto.smartcore.bos.Actor}
 */
proto.smartcore.bos.HealthCheck.Ack.prototype.getActor = function() {
  return /** @type{?proto.smartcore.bos.Actor} */ (
    jspb.Message.getWrapperField(this, actor_pb.Actor, 2));
};


/**
 * @param {?proto.smartcore.bos.Actor|undefined} value
 * @return {!proto.smartcore.bos.HealthCheck.Ack} returns this
*/
proto.smartcore.bos.HealthCheck.Ack.prototype.setActor = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.bos.HealthCheck.Ack} returns this
 */
proto.smartcore.bos.HealthCheck.Ack.prototype.clearActor = function() {
  return this.setActor(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.HealthCheck.Ack.prototype.hasActor = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string source = 3;
 * @return {string}
 */
proto.smartcore.bos.HealthCheck.Ack.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.smartcore.bos.HealthCheck.Ack} returns this
 */
proto.smartcore.bos.HealthCheck.Ack.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.smartcore.bos.HealthCheck.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.smartcore.bos.HealthCheck} returns this
 */
proto.smartcore.bos.HealthCheck.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string display_name = 2;
 * @return {string}
 */
proto.smartcore.bos.HealthCheck.prototype.getDisplayName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.smartcore.bos.HealthCheck} returns this
 */
proto.smartcore.bos.HealthCheck.prototype.setDisplayName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.smartcore.bos.HealthCheck.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.smartcore.bos.HealthCheck} returns this
 */
proto.smartcore.bos.HealthCheck.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional OccupantImpact occupant_impact = 5;
 * @return {!proto.smartcore.bos.HealthCheck.OccupantImpact}
 */
proto.smartcore.bos.HealthCheck.prototype.getOccupantImpact = function() {
  return /** @type {!proto.smartcore.bos.HealthCheck.OccupantImpact} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.smartcore.bos.HealthCheck.OccupantImpact} value
 * @return {!proto.smartcore.bos.HealthCheck} returns this
 */
proto.smartcore.bos.HealthCheck.prototype.setOccupantImpact = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional EquipmentImpact equipment_impact = 6;
 * @return {!proto.smartcore.bos.HealthCheck.EquipmentImpact}
 */
proto.smartcore.bos.HealthCheck.prototype.getEquipmentImpact = function() {
  return /** @type {!proto.smartcore.bos.HealthCheck.EquipmentImpact} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.smartcore.bos.HealthCheck.EquipmentImpact} value
 * @return {!proto.smartcore.bos.HealthCheck} returns this
 */
proto.smartcore.bos.HealthCheck.prototype.setEquipmentImpact = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * repeated ComplianceImpact compliance_impacts = 7;
 * @return {!Array<!proto.smartcore.bos.HealthCheck.ComplianceImpact>}
 */
proto.smartcore.bos.HealthCheck.prototype.getComplianceImpactsList = function() {
  return /** @type{!Array<!proto.smartcore.bos.HealthCheck.ComplianceImpact>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.smartcore.bos.HealthCheck.ComplianceImpact, 7));
};


/**
 * @param {!Array<!proto.smartcore.bos.HealthCheck.ComplianceImpact>} value
 * @return {!proto.smartcore.bos.HealthCheck} returns this
*/
proto.smartcore.bos.HealthCheck.prototype.setComplianceImpactsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.smartcore.bos.HealthCheck.ComplianceImpact=} opt_value
 * @param {number=} opt_index
 * @return {!proto.smartcore.bos.HealthCheck.ComplianceImpact}
 */
proto.smartcore.bos.HealthCheck.prototype.addComplianceImpacts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.smartcore.bos.HealthCheck.ComplianceImpact, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.smartcore.bos.HealthCheck} returns this
 */
proto.smartcore.bos.HealthCheck.prototype.clearComplianceImpactsList = function() {
  return this.setComplianceImpactsList([]);
};


/**
 * optional Reliability reliability = 10;
 * @return {?proto.smartcore.bos.HealthCheck.Reliability}
 */
proto.smartcore.bos.HealthCheck.prototype.getReliability = function() {
  return /** @type{?proto.smartcore.bos.HealthCheck.Reliability} */ (
    jspb.Message.getWrapperField(this, proto.smartcore.bos.HealthCheck.Reliability, 10));
};


/**
 * @param {?proto.smartcore.bos.HealthCheck.Reliability|undefined} value
 * @return {!proto.smartcore.bos.HealthCheck} returns this
*/
proto.smartcore.bos.HealthCheck.prototype.setReliability = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.bos.HealthCheck} returns this
 */
proto.smartcore.bos.HealthCheck.prototype.clearReliability = function() {
  return this.setReliability(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.HealthCheck.prototype.hasReliability = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional Normality normality = 11;
 * @return {!proto.smartcore.bos.HealthCheck.Normality}
 */
proto.smartcore.bos.HealthCheck.prototype.getNormality = function() {
  return /** @type {!proto.smartcore.bos.HealthCheck.Normality} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {!proto.smartcore.bos.HealthCheck.Normality} value
 * @return {!proto.smartcore.bos.HealthCheck} returns this
 */
proto.smartcore.bos.HealthCheck.prototype.setNormality = function(value) {
  return jspb.Message.setProto3EnumField(this, 11, value);
};


/**
 * optional google.protobuf.Timestamp normal_time = 12;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.smartcore.bos.HealthCheck.prototype.getNormalTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 12));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.smartcore.bos.HealthCheck} returns this
*/
proto.smartcore.bos.HealthCheck.prototype.setNormalTime = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.bos.HealthCheck} returns this
 */
proto.smartcore.bos.HealthCheck.prototype.clearNormalTime = function() {
  return this.setNormalTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.HealthCheck.prototype.hasNormalTime = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional google.protobuf.Timestamp abnormal_time = 13;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.smartcore.bos.HealthCheck.prototype.getAbnormalTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 13));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.smartcore.bos.HealthCheck} returns this
*/
proto.smartcore.bos.HealthCheck.prototype.setAbnormalTime = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.bos.HealthCheck} returns this
 */
proto.smartcore.bos.HealthCheck.prototype.clearAbnormalTime = function() {
  return this.setAbnormalTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.HealthCheck.prototype.hasAbnormalTime = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional Bounds bounds = 15;
 * @return {?proto.smartcore.bos.HealthCheck.Bounds}
 */
proto.smartcore.bos.HealthCheck.prototype.getBounds = function() {
  return /** @type{?proto.smartcore.bos.HealthCheck.Bounds} */ (
    jspb.Message.getWrapperField(this, proto.smartcore.bos.HealthCheck.Bounds, 15));
};


/**
 * @param {?proto.smartcore.bos.HealthCheck.Bounds|undefined} value
 * @return {!proto.smartcore.bos.HealthCheck} returns this
*/
proto.smartcore.bos.HealthCheck.prototype.setBounds = function(value) {
  return jspb.Message.setOneofWrapperField(this, 15, proto.smartcore.bos.HealthCheck.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.bos.HealthCheck} returns this
 */
proto.smartcore.bos.HealthCheck.prototype.clearBounds = function() {
  return this.setBounds(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.HealthCheck.prototype.hasBounds = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional Faults faults = 16;
 * @return {?proto.smartcore.bos.HealthCheck.Faults}
 */
proto.smartcore.bos.HealthCheck.prototype.getFaults = function() {
  return /** @type{?proto.smartcore.bos.HealthCheck.Faults} */ (
    jspb.Message.getWrapperField(this, proto.smartcore.bos.HealthCheck.Faults, 16));
};


/**
 * @param {?proto.smartcore.bos.HealthCheck.Faults|undefined} value
 * @return {!proto.smartcore.bos.HealthCheck} returns this
*/
proto.smartcore.bos.HealthCheck.prototype.setFaults = function(value) {
  return jspb.Message.setOneofWrapperField(this, 16, proto.smartcore.bos.HealthCheck.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.bos.HealthCheck} returns this
 */
proto.smartcore.bos.HealthCheck.prototype.clearFaults = function() {
  return this.setFaults(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.HealthCheck.prototype.hasFaults = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional int32 ack_expected = 20;
 * @return {number}
 */
proto.smartcore.bos.HealthCheck.prototype.getAckExpected = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/**
 * @param {number} value
 * @return {!proto.smartcore.bos.HealthCheck} returns this
 */
proto.smartcore.bos.HealthCheck.prototype.setAckExpected = function(value) {
  return jspb.Message.setProto3IntField(this, 20, value);
};


/**
 * optional int32 ack_required = 21;
 * @return {number}
 */
proto.smartcore.bos.HealthCheck.prototype.getAckRequired = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/**
 * @param {number} value
 * @return {!proto.smartcore.bos.HealthCheck} returns this
 */
proto.smartcore.bos.HealthCheck.prototype.setAckRequired = function(value) {
  return jspb.Message.setProto3IntField(this, 21, value);
};


/**
 * optional Ack to_healthy_ack = 22;
 * @return {?proto.smartcore.bos.HealthCheck.Ack}
 */
proto.smartcore.bos.HealthCheck.prototype.getToHealthyAck = function() {
  return /** @type{?proto.smartcore.bos.HealthCheck.Ack} */ (
    jspb.Message.getWrapperField(this, proto.smartcore.bos.HealthCheck.Ack, 22));
};


/**
 * @param {?proto.smartcore.bos.HealthCheck.Ack|undefined} value
 * @return {!proto.smartcore.bos.HealthCheck} returns this
*/
proto.smartcore.bos.HealthCheck.prototype.setToHealthyAck = function(value) {
  return jspb.Message.setWrapperField(this, 22, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.bos.HealthCheck} returns this
 */
proto.smartcore.bos.HealthCheck.prototype.clearToHealthyAck = function() {
  return this.setToHealthyAck(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.HealthCheck.prototype.hasToHealthyAck = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional Ack to_unreliable_ack = 23;
 * @return {?proto.smartcore.bos.HealthCheck.Ack}
 */
proto.smartcore.bos.HealthCheck.prototype.getToUnreliableAck = function() {
  return /** @type{?proto.smartcore.bos.HealthCheck.Ack} */ (
    jspb.Message.getWrapperField(this, proto.smartcore.bos.HealthCheck.Ack, 23));
};


/**
 * @param {?proto.smartcore.bos.HealthCheck.Ack|undefined} value
 * @return {!proto.smartcore.bos.HealthCheck} returns this
*/
proto.smartcore.bos.HealthCheck.prototype.setToUnreliableAck = function(value) {
  return jspb.Message.setWrapperField(this, 23, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.bos.HealthCheck} returns this
 */
proto.smartcore.bos.HealthCheck.prototype.clearToUnreliableAck = function() {
  return this.setToUnreliableAck(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.HealthCheck.prototype.hasToUnreliableAck = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional Ack to_abnormal_ack = 24;
 * @return {?proto.smartcore.bos.HealthCheck.Ack}
 */
proto.smartcore.bos.HealthCheck.prototype.getToAbnormalAck = function() {
  return /** @type{?proto.smartcore.bos.HealthCheck.Ack} */ (
    jspb.Message.getWrapperField(this, proto.smartcore.bos.HealthCheck.Ack, 24));
};


/**
 * @param {?proto.smartcore.bos.HealthCheck.Ack|undefined} value
 * @return {!proto.smartcore.bos.HealthCheck} returns this
*/
proto.smartcore.bos.HealthCheck.prototype.setToAbnormalAck = function(value) {
  return jspb.Message.setWrapperField(this, 24, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.bos.HealthCheck} returns this
 */
proto.smartcore.bos.HealthCheck.prototype.clearToAbnormalAck = function() {
  return this.setToAbnormalAck(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.HealthCheck.prototype.hasToAbnormalAck = function() {
  return jspb.Message.getField(this, 24) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.bos.HealthCheckRecord.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.bos.HealthCheckRecord.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.bos.HealthCheckRecord} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.HealthCheckRecord.toObject = function(includeInstance, msg) {
  var f, obj = {
healthCheck: (f = msg.getHealthCheck()) && proto.smartcore.bos.HealthCheck.toObject(includeInstance, f),
recordTime: (f = msg.getRecordTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
recordType: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.bos.HealthCheckRecord}
 */
proto.smartcore.bos.HealthCheckRecord.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.bos.HealthCheckRecord;
  return proto.smartcore.bos.HealthCheckRecord.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.bos.HealthCheckRecord} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.bos.HealthCheckRecord}
 */
proto.smartcore.bos.HealthCheckRecord.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.smartcore.bos.HealthCheck;
      reader.readMessage(value,proto.smartcore.bos.HealthCheck.deserializeBinaryFromReader);
      msg.setHealthCheck(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setRecordTime(value);
      break;
    case 3:
      var value = /** @type {!proto.smartcore.bos.HealthCheckRecord.RecordType} */ (reader.readEnum());
      msg.setRecordType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.bos.HealthCheckRecord.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.bos.HealthCheckRecord.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.bos.HealthCheckRecord} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.HealthCheckRecord.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHealthCheck();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.smartcore.bos.HealthCheck.serializeBinaryToWriter
    );
  }
  f = message.getRecordTime();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getRecordType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.smartcore.bos.HealthCheckRecord.RecordType = {
  RECORD_TYPE_UNSPECIFIED: 0,
  ADDED: 1,
  UPDATED: 2,
  REMOVED: 3
};

/**
 * optional HealthCheck health_check = 1;
 * @return {?proto.smartcore.bos.HealthCheck}
 */
proto.smartcore.bos.HealthCheckRecord.prototype.getHealthCheck = function() {
  return /** @type{?proto.smartcore.bos.HealthCheck} */ (
    jspb.Message.getWrapperField(this, proto.smartcore.bos.HealthCheck, 1));
};


/**
 * @param {?proto.smartcore.bos.HealthCheck|undefined} value
 * @return {!proto.smartcore.bos.HealthCheckRecord} returns this
*/
proto.smartcore.bos.HealthCheckRecord.prototype.setHealthCheck = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.bos.HealthCheckRecord} returns this
 */
proto.smartcore.bos.HealthCheckRecord.prototype.clearHealthCheck = function() {
  return this.setHealthCheck(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.HealthCheckRecord.prototype.hasHealthCheck = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Timestamp record_time = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.smartcore.bos.HealthCheckRecord.prototype.getRecordTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.smartcore.bos.HealthCheckRecord} returns this
*/
proto.smartcore.bos.HealthCheckRecord.prototype.setRecordTime = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.bos.HealthCheckRecord} returns this
 */
proto.smartcore.bos.HealthCheckRecord.prototype.clearRecordTime = function() {
  return this.setRecordTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.HealthCheckRecord.prototype.hasRecordTime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional RecordType record_type = 3;
 * @return {!proto.smartcore.bos.HealthCheckRecord.RecordType}
 */
proto.smartcore.bos.HealthCheckRecord.prototype.getRecordType = function() {
  return /** @type {!proto.smartcore.bos.HealthCheckRecord.RecordType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.smartcore.bos.HealthCheckRecord.RecordType} value
 * @return {!proto.smartcore.bos.HealthCheckRecord} returns this
 */
proto.smartcore.bos.HealthCheckRecord.prototype.setRecordType = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.bos.ListHealthChecksRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.bos.ListHealthChecksRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.bos.ListHealthChecksRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.ListHealthChecksRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
name: jspb.Message.getFieldWithDefault(msg, 1, ""),
readMask: (f = msg.getReadMask()) && google_protobuf_field_mask_pb.FieldMask.toObject(includeInstance, f),
pageSize: jspb.Message.getFieldWithDefault(msg, 3, 0),
pageToken: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.bos.ListHealthChecksRequest}
 */
proto.smartcore.bos.ListHealthChecksRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.bos.ListHealthChecksRequest;
  return proto.smartcore.bos.ListHealthChecksRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.bos.ListHealthChecksRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.bos.ListHealthChecksRequest}
 */
proto.smartcore.bos.ListHealthChecksRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new google_protobuf_field_mask_pb.FieldMask;
      reader.readMessage(value,google_protobuf_field_mask_pb.FieldMask.deserializeBinaryFromReader);
      msg.setReadMask(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageSize(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPageToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.bos.ListHealthChecksRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.bos.ListHealthChecksRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.bos.ListHealthChecksRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.ListHealthChecksRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getReadMask();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_field_mask_pb.FieldMask.serializeBinaryToWriter
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getPageToken();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.smartcore.bos.ListHealthChecksRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.smartcore.bos.ListHealthChecksRequest} returns this
 */
proto.smartcore.bos.ListHealthChecksRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.FieldMask read_mask = 2;
 * @return {?proto.google.protobuf.FieldMask}
 */
proto.smartcore.bos.ListHealthChecksRequest.prototype.getReadMask = function() {
  return /** @type{?proto.google.protobuf.FieldMask} */ (
    jspb.Message.getWrapperField(this, google_protobuf_field_mask_pb.FieldMask, 2));
};


/**
 * @param {?proto.google.protobuf.FieldMask|undefined} value
 * @return {!proto.smartcore.bos.ListHealthChecksRequest} returns this
*/
proto.smartcore.bos.ListHealthChecksRequest.prototype.setReadMask = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.bos.ListHealthChecksRequest} returns this
 */
proto.smartcore.bos.ListHealthChecksRequest.prototype.clearReadMask = function() {
  return this.setReadMask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.ListHealthChecksRequest.prototype.hasReadMask = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 page_size = 3;
 * @return {number}
 */
proto.smartcore.bos.ListHealthChecksRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.smartcore.bos.ListHealthChecksRequest} returns this
 */
proto.smartcore.bos.ListHealthChecksRequest.prototype.setPageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string page_token = 4;
 * @return {string}
 */
proto.smartcore.bos.ListHealthChecksRequest.prototype.getPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.smartcore.bos.ListHealthChecksRequest} returns this
 */
proto.smartcore.bos.ListHealthChecksRequest.prototype.setPageToken = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.smartcore.bos.ListHealthChecksResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.bos.ListHealthChecksResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.bos.ListHealthChecksResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.bos.ListHealthChecksResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.ListHealthChecksResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
healthChecksList: jspb.Message.toObjectList(msg.getHealthChecksList(),
    proto.smartcore.bos.HealthCheck.toObject, includeInstance),
nextPageToken: jspb.Message.getFieldWithDefault(msg, 2, ""),
totalSize: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.bos.ListHealthChecksResponse}
 */
proto.smartcore.bos.ListHealthChecksResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.bos.ListHealthChecksResponse;
  return proto.smartcore.bos.ListHealthChecksResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.bos.ListHealthChecksResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.bos.ListHealthChecksResponse}
 */
proto.smartcore.bos.ListHealthChecksResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.smartcore.bos.HealthCheck;
      reader.readMessage(value,proto.smartcore.bos.HealthCheck.deserializeBinaryFromReader);
      msg.addHealthChecks(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextPageToken(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.bos.ListHealthChecksResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.bos.ListHealthChecksResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.bos.ListHealthChecksResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.ListHealthChecksResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHealthChecksList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.smartcore.bos.HealthCheck.serializeBinaryToWriter
    );
  }
  f = message.getNextPageToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTotalSize();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * repeated HealthCheck health_checks = 1;
 * @return {!Array<!proto.smartcore.bos.HealthCheck>}
 */
proto.smartcore.bos.ListHealthChecksResponse.prototype.getHealthChecksList = function() {
  return /** @type{!Array<!proto.smartcore.bos.HealthCheck>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.smartcore.bos.HealthCheck, 1));
};


/**
 * @param {!Array<!proto.smartcore.bos.HealthCheck>} value
 * @return {!proto.smartcore.bos.ListHealthChecksResponse} returns this
*/
proto.smartcore.bos.ListHealthChecksResponse.prototype.setHealthChecksList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.smartcore.bos.HealthCheck=} opt_value
 * @param {number=} opt_index
 * @return {!proto.smartcore.bos.HealthCheck}
 */
proto.smartcore.bos.ListHealthChecksResponse.prototype.addHealthChecks = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.smartcore.bos.HealthCheck, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.smartcore.bos.ListHealthChecksResponse} returns this
 */
proto.smartcore.bos.ListHealthChecksResponse.prototype.clearHealthChecksList = function() {
  return this.setHealthChecksList([]);
};


/**
 * optional string next_page_token = 2;
 * @return {string}
 */
proto.smartcore.bos.ListHealthChecksResponse.prototype.getNextPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.smartcore.bos.ListHealthChecksResponse} returns this
 */
proto.smartcore.bos.ListHealthChecksResponse.prototype.setNextPageToken = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 total_size = 3;
 * @return {number}
 */
proto.smartcore.bos.ListHealthChecksResponse.prototype.getTotalSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.smartcore.bos.ListHealthChecksResponse} returns this
 */
proto.smartcore.bos.ListHealthChecksResponse.prototype.setTotalSize = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.bos.PullHealthChecksRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.bos.PullHealthChecksRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.bos.PullHealthChecksRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.PullHealthChecksRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
name: jspb.Message.getFieldWithDefault(msg, 1, ""),
readMask: (f = msg.getReadMask()) && google_protobuf_field_mask_pb.FieldMask.toObject(includeInstance, f),
updatesOnly: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.bos.PullHealthChecksRequest}
 */
proto.smartcore.bos.PullHealthChecksRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.bos.PullHealthChecksRequest;
  return proto.smartcore.bos.PullHealthChecksRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.bos.PullHealthChecksRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.bos.PullHealthChecksRequest}
 */
proto.smartcore.bos.PullHealthChecksRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new google_protobuf_field_mask_pb.FieldMask;
      reader.readMessage(value,google_protobuf_field_mask_pb.FieldMask.deserializeBinaryFromReader);
      msg.setReadMask(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUpdatesOnly(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.bos.PullHealthChecksRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.bos.PullHealthChecksRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.bos.PullHealthChecksRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.PullHealthChecksRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getReadMask();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_field_mask_pb.FieldMask.serializeBinaryToWriter
    );
  }
  f = message.getUpdatesOnly();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.smartcore.bos.PullHealthChecksRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.smartcore.bos.PullHealthChecksRequest} returns this
 */
proto.smartcore.bos.PullHealthChecksRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.FieldMask read_mask = 2;
 * @return {?proto.google.protobuf.FieldMask}
 */
proto.smartcore.bos.PullHealthChecksRequest.prototype.getReadMask = function() {
  return /** @type{?proto.google.protobuf.FieldMask} */ (
    jspb.Message.getWrapperField(this, google_protobuf_field_mask_pb.FieldMask, 2));
};


/**
 * @param {?proto.google.protobuf.FieldMask|undefined} value
 * @return {!proto.smartcore.bos.PullHealthChecksRequest} returns this
*/
proto.smartcore.bos.PullHealthChecksRequest.prototype.setReadMask = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.bos.PullHealthChecksRequest} returns this
 */
proto.smartcore.bos.PullHealthChecksRequest.prototype.clearReadMask = function() {
  return this.setReadMask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.PullHealthChecksRequest.prototype.hasReadMask = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool updates_only = 3;
 * @return {boolean}
 */
proto.smartcore.bos.PullHealthChecksRequest.prototype.getUpdatesOnly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.smartcore.bos.PullHealthChecksRequest} returns this
 */
proto.smartcore.bos.PullHealthChecksRequest.prototype.setUpdatesOnly = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.smartcore.bos.PullHealthChecksResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.bos.PullHealthChecksResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.bos.PullHealthChecksResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.bos.PullHealthChecksResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.PullHealthChecksResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
changesList: jspb.Message.toObjectList(msg.getChangesList(),
    proto.smartcore.bos.PullHealthChecksResponse.Change.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.bos.PullHealthChecksResponse}
 */
proto.smartcore.bos.PullHealthChecksResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.bos.PullHealthChecksResponse;
  return proto.smartcore.bos.PullHealthChecksResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.bos.PullHealthChecksResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.bos.PullHealthChecksResponse}
 */
proto.smartcore.bos.PullHealthChecksResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.smartcore.bos.PullHealthChecksResponse.Change;
      reader.readMessage(value,proto.smartcore.bos.PullHealthChecksResponse.Change.deserializeBinaryFromReader);
      msg.addChanges(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.bos.PullHealthChecksResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.bos.PullHealthChecksResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.bos.PullHealthChecksResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.PullHealthChecksResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChangesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.smartcore.bos.PullHealthChecksResponse.Change.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.bos.PullHealthChecksResponse.Change.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.bos.PullHealthChecksResponse.Change.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.bos.PullHealthChecksResponse.Change} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.PullHealthChecksResponse.Change.toObject = function(includeInstance, msg) {
  var f, obj = {
name: jspb.Message.getFieldWithDefault(msg, 1, ""),
type: jspb.Message.getFieldWithDefault(msg, 2, 0),
newValue: (f = msg.getNewValue()) && proto.smartcore.bos.HealthCheck.toObject(includeInstance, f),
oldValue: (f = msg.getOldValue()) && proto.smartcore.bos.HealthCheck.toObject(includeInstance, f),
changeTime: (f = msg.getChangeTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.bos.PullHealthChecksResponse.Change}
 */
proto.smartcore.bos.PullHealthChecksResponse.Change.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.bos.PullHealthChecksResponse.Change;
  return proto.smartcore.bos.PullHealthChecksResponse.Change.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.bos.PullHealthChecksResponse.Change} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.bos.PullHealthChecksResponse.Change}
 */
proto.smartcore.bos.PullHealthChecksResponse.Change.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {!proto.smartcore.types.ChangeType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 3:
      var value = new proto.smartcore.bos.HealthCheck;
      reader.readMessage(value,proto.smartcore.bos.HealthCheck.deserializeBinaryFromReader);
      msg.setNewValue(value);
      break;
    case 4:
      var value = new proto.smartcore.bos.HealthCheck;
      reader.readMessage(value,proto.smartcore.bos.HealthCheck.deserializeBinaryFromReader);
      msg.setOldValue(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setChangeTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.bos.PullHealthChecksResponse.Change.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.bos.PullHealthChecksResponse.Change.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.bos.PullHealthChecksResponse.Change} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.PullHealthChecksResponse.Change.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getNewValue();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.smartcore.bos.HealthCheck.serializeBinaryToWriter
    );
  }
  f = message.getOldValue();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.smartcore.bos.HealthCheck.serializeBinaryToWriter
    );
  }
  f = message.getChangeTime();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.smartcore.bos.PullHealthChecksResponse.Change.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.smartcore.bos.PullHealthChecksResponse.Change} returns this
 */
proto.smartcore.bos.PullHealthChecksResponse.Change.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional smartcore.types.ChangeType type = 2;
 * @return {!proto.smartcore.types.ChangeType}
 */
proto.smartcore.bos.PullHealthChecksResponse.Change.prototype.getType = function() {
  return /** @type {!proto.smartcore.types.ChangeType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.smartcore.types.ChangeType} value
 * @return {!proto.smartcore.bos.PullHealthChecksResponse.Change} returns this
 */
proto.smartcore.bos.PullHealthChecksResponse.Change.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional HealthCheck new_value = 3;
 * @return {?proto.smartcore.bos.HealthCheck}
 */
proto.smartcore.bos.PullHealthChecksResponse.Change.prototype.getNewValue = function() {
  return /** @type{?proto.smartcore.bos.HealthCheck} */ (
    jspb.Message.getWrapperField(this, proto.smartcore.bos.HealthCheck, 3));
};


/**
 * @param {?proto.smartcore.bos.HealthCheck|undefined} value
 * @return {!proto.smartcore.bos.PullHealthChecksResponse.Change} returns this
*/
proto.smartcore.bos.PullHealthChecksResponse.Change.prototype.setNewValue = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.bos.PullHealthChecksResponse.Change} returns this
 */
proto.smartcore.bos.PullHealthChecksResponse.Change.prototype.clearNewValue = function() {
  return this.setNewValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.PullHealthChecksResponse.Change.prototype.hasNewValue = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional HealthCheck old_value = 4;
 * @return {?proto.smartcore.bos.HealthCheck}
 */
proto.smartcore.bos.PullHealthChecksResponse.Change.prototype.getOldValue = function() {
  return /** @type{?proto.smartcore.bos.HealthCheck} */ (
    jspb.Message.getWrapperField(this, proto.smartcore.bos.HealthCheck, 4));
};


/**
 * @param {?proto.smartcore.bos.HealthCheck|undefined} value
 * @return {!proto.smartcore.bos.PullHealthChecksResponse.Change} returns this
*/
proto.smartcore.bos.PullHealthChecksResponse.Change.prototype.setOldValue = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.bos.PullHealthChecksResponse.Change} returns this
 */
proto.smartcore.bos.PullHealthChecksResponse.Change.prototype.clearOldValue = function() {
  return this.setOldValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.PullHealthChecksResponse.Change.prototype.hasOldValue = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional google.protobuf.Timestamp change_time = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.smartcore.bos.PullHealthChecksResponse.Change.prototype.getChangeTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.smartcore.bos.PullHealthChecksResponse.Change} returns this
*/
proto.smartcore.bos.PullHealthChecksResponse.Change.prototype.setChangeTime = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.bos.PullHealthChecksResponse.Change} returns this
 */
proto.smartcore.bos.PullHealthChecksResponse.Change.prototype.clearChangeTime = function() {
  return this.setChangeTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.PullHealthChecksResponse.Change.prototype.hasChangeTime = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated Change changes = 1;
 * @return {!Array<!proto.smartcore.bos.PullHealthChecksResponse.Change>}
 */
proto.smartcore.bos.PullHealthChecksResponse.prototype.getChangesList = function() {
  return /** @type{!Array<!proto.smartcore.bos.PullHealthChecksResponse.Change>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.smartcore.bos.PullHealthChecksResponse.Change, 1));
};


/**
 * @param {!Array<!proto.smartcore.bos.PullHealthChecksResponse.Change>} value
 * @return {!proto.smartcore.bos.PullHealthChecksResponse} returns this
*/
proto.smartcore.bos.PullHealthChecksResponse.prototype.setChangesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.smartcore.bos.PullHealthChecksResponse.Change=} opt_value
 * @param {number=} opt_index
 * @return {!proto.smartcore.bos.PullHealthChecksResponse.Change}
 */
proto.smartcore.bos.PullHealthChecksResponse.prototype.addChanges = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.smartcore.bos.PullHealthChecksResponse.Change, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.smartcore.bos.PullHealthChecksResponse} returns this
 */
proto.smartcore.bos.PullHealthChecksResponse.prototype.clearChangesList = function() {
  return this.setChangesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.bos.GetHealthCheckRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.bos.GetHealthCheckRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.bos.GetHealthCheckRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.GetHealthCheckRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
name: jspb.Message.getFieldWithDefault(msg, 1, ""),
id: jspb.Message.getFieldWithDefault(msg, 2, ""),
readMask: (f = msg.getReadMask()) && google_protobuf_field_mask_pb.FieldMask.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.bos.GetHealthCheckRequest}
 */
proto.smartcore.bos.GetHealthCheckRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.bos.GetHealthCheckRequest;
  return proto.smartcore.bos.GetHealthCheckRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.bos.GetHealthCheckRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.bos.GetHealthCheckRequest}
 */
proto.smartcore.bos.GetHealthCheckRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 3:
      var value = new google_protobuf_field_mask_pb.FieldMask;
      reader.readMessage(value,google_protobuf_field_mask_pb.FieldMask.deserializeBinaryFromReader);
      msg.setReadMask(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.bos.GetHealthCheckRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.bos.GetHealthCheckRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.bos.GetHealthCheckRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.GetHealthCheckRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getReadMask();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_field_mask_pb.FieldMask.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.smartcore.bos.GetHealthCheckRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.smartcore.bos.GetHealthCheckRequest} returns this
 */
proto.smartcore.bos.GetHealthCheckRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string id = 2;
 * @return {string}
 */
proto.smartcore.bos.GetHealthCheckRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.smartcore.bos.GetHealthCheckRequest} returns this
 */
proto.smartcore.bos.GetHealthCheckRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional google.protobuf.FieldMask read_mask = 3;
 * @return {?proto.google.protobuf.FieldMask}
 */
proto.smartcore.bos.GetHealthCheckRequest.prototype.getReadMask = function() {
  return /** @type{?proto.google.protobuf.FieldMask} */ (
    jspb.Message.getWrapperField(this, google_protobuf_field_mask_pb.FieldMask, 3));
};


/**
 * @param {?proto.google.protobuf.FieldMask|undefined} value
 * @return {!proto.smartcore.bos.GetHealthCheckRequest} returns this
*/
proto.smartcore.bos.GetHealthCheckRequest.prototype.setReadMask = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.bos.GetHealthCheckRequest} returns this
 */
proto.smartcore.bos.GetHealthCheckRequest.prototype.clearReadMask = function() {
  return this.setReadMask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.GetHealthCheckRequest.prototype.hasReadMask = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.bos.PullHealthCheckRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.bos.PullHealthCheckRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.bos.PullHealthCheckRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.PullHealthCheckRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
name: jspb.Message.getFieldWithDefault(msg, 1, ""),
id: jspb.Message.getFieldWithDefault(msg, 2, ""),
readMask: (f = msg.getReadMask()) && google_protobuf_field_mask_pb.FieldMask.toObject(includeInstance, f),
updatesOnly: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.bos.PullHealthCheckRequest}
 */
proto.smartcore.bos.PullHealthCheckRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.bos.PullHealthCheckRequest;
  return proto.smartcore.bos.PullHealthCheckRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.bos.PullHealthCheckRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.bos.PullHealthCheckRequest}
 */
proto.smartcore.bos.PullHealthCheckRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 3:
      var value = new google_protobuf_field_mask_pb.FieldMask;
      reader.readMessage(value,google_protobuf_field_mask_pb.FieldMask.deserializeBinaryFromReader);
      msg.setReadMask(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUpdatesOnly(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.bos.PullHealthCheckRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.bos.PullHealthCheckRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.bos.PullHealthCheckRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.PullHealthCheckRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getReadMask();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_field_mask_pb.FieldMask.serializeBinaryToWriter
    );
  }
  f = message.getUpdatesOnly();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.smartcore.bos.PullHealthCheckRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.smartcore.bos.PullHealthCheckRequest} returns this
 */
proto.smartcore.bos.PullHealthCheckRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string id = 2;
 * @return {string}
 */
proto.smartcore.bos.PullHealthCheckRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.smartcore.bos.PullHealthCheckRequest} returns this
 */
proto.smartcore.bos.PullHealthCheckRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional google.protobuf.FieldMask read_mask = 3;
 * @return {?proto.google.protobuf.FieldMask}
 */
proto.smartcore.bos.PullHealthCheckRequest.prototype.getReadMask = function() {
  return /** @type{?proto.google.protobuf.FieldMask} */ (
    jspb.Message.getWrapperField(this, google_protobuf_field_mask_pb.FieldMask, 3));
};


/**
 * @param {?proto.google.protobuf.FieldMask|undefined} value
 * @return {!proto.smartcore.bos.PullHealthCheckRequest} returns this
*/
proto.smartcore.bos.PullHealthCheckRequest.prototype.setReadMask = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.bos.PullHealthCheckRequest} returns this
 */
proto.smartcore.bos.PullHealthCheckRequest.prototype.clearReadMask = function() {
  return this.setReadMask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.PullHealthCheckRequest.prototype.hasReadMask = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool updates_only = 4;
 * @return {boolean}
 */
proto.smartcore.bos.PullHealthCheckRequest.prototype.getUpdatesOnly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.smartcore.bos.PullHealthCheckRequest} returns this
 */
proto.smartcore.bos.PullHealthCheckRequest.prototype.setUpdatesOnly = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.smartcore.bos.PullHealthCheckResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.bos.PullHealthCheckResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.bos.PullHealthCheckResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.bos.PullHealthCheckResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.PullHealthCheckResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
changesList: jspb.Message.toObjectList(msg.getChangesList(),
    proto.smartcore.bos.PullHealthCheckResponse.Change.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.bos.PullHealthCheckResponse}
 */
proto.smartcore.bos.PullHealthCheckResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.bos.PullHealthCheckResponse;
  return proto.smartcore.bos.PullHealthCheckResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.bos.PullHealthCheckResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.bos.PullHealthCheckResponse}
 */
proto.smartcore.bos.PullHealthCheckResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.smartcore.bos.PullHealthCheckResponse.Change;
      reader.readMessage(value,proto.smartcore.bos.PullHealthCheckResponse.Change.deserializeBinaryFromReader);
      msg.addChanges(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.bos.PullHealthCheckResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.bos.PullHealthCheckResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.bos.PullHealthCheckResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.PullHealthCheckResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChangesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.smartcore.bos.PullHealthCheckResponse.Change.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.bos.PullHealthCheckResponse.Change.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.bos.PullHealthCheckResponse.Change.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.bos.PullHealthCheckResponse.Change} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.PullHealthCheckResponse.Change.toObject = function(includeInstance, msg) {
  var f, obj = {
name: jspb.Message.getFieldWithDefault(msg, 1, ""),
healthCheck: (f = msg.getHealthCheck()) && proto.smartcore.bos.HealthCheck.toObject(includeInstance, f),
changeTime: (f = msg.getChangeTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.bos.PullHealthCheckResponse.Change}
 */
proto.smartcore.bos.PullHealthCheckResponse.Change.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.bos.PullHealthCheckResponse.Change;
  return proto.smartcore.bos.PullHealthCheckResponse.Change.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.bos.PullHealthCheckResponse.Change} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.bos.PullHealthCheckResponse.Change}
 */
proto.smartcore.bos.PullHealthCheckResponse.Change.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = new proto.smartcore.bos.HealthCheck;
      reader.readMessage(value,proto.smartcore.bos.HealthCheck.deserializeBinaryFromReader);
      msg.setHealthCheck(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setChangeTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.bos.PullHealthCheckResponse.Change.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.bos.PullHealthCheckResponse.Change.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.bos.PullHealthCheckResponse.Change} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.PullHealthCheckResponse.Change.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getHealthCheck();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.smartcore.bos.HealthCheck.serializeBinaryToWriter
    );
  }
  f = message.getChangeTime();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.smartcore.bos.PullHealthCheckResponse.Change.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.smartcore.bos.PullHealthCheckResponse.Change} returns this
 */
proto.smartcore.bos.PullHealthCheckResponse.Change.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional HealthCheck health_check = 3;
 * @return {?proto.smartcore.bos.HealthCheck}
 */
proto.smartcore.bos.PullHealthCheckResponse.Change.prototype.getHealthCheck = function() {
  return /** @type{?proto.smartcore.bos.HealthCheck} */ (
    jspb.Message.getWrapperField(this, proto.smartcore.bos.HealthCheck, 3));
};


/**
 * @param {?proto.smartcore.bos.HealthCheck|undefined} value
 * @return {!proto.smartcore.bos.PullHealthCheckResponse.Change} returns this
*/
proto.smartcore.bos.PullHealthCheckResponse.Change.prototype.setHealthCheck = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.bos.PullHealthCheckResponse.Change} returns this
 */
proto.smartcore.bos.PullHealthCheckResponse.Change.prototype.clearHealthCheck = function() {
  return this.setHealthCheck(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.PullHealthCheckResponse.Change.prototype.hasHealthCheck = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional google.protobuf.Timestamp change_time = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.smartcore.bos.PullHealthCheckResponse.Change.prototype.getChangeTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.smartcore.bos.PullHealthCheckResponse.Change} returns this
*/
proto.smartcore.bos.PullHealthCheckResponse.Change.prototype.setChangeTime = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.bos.PullHealthCheckResponse.Change} returns this
 */
proto.smartcore.bos.PullHealthCheckResponse.Change.prototype.clearChangeTime = function() {
  return this.setChangeTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.PullHealthCheckResponse.Change.prototype.hasChangeTime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated Change changes = 1;
 * @return {!Array<!proto.smartcore.bos.PullHealthCheckResponse.Change>}
 */
proto.smartcore.bos.PullHealthCheckResponse.prototype.getChangesList = function() {
  return /** @type{!Array<!proto.smartcore.bos.PullHealthCheckResponse.Change>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.smartcore.bos.PullHealthCheckResponse.Change, 1));
};


/**
 * @param {!Array<!proto.smartcore.bos.PullHealthCheckResponse.Change>} value
 * @return {!proto.smartcore.bos.PullHealthCheckResponse} returns this
*/
proto.smartcore.bos.PullHealthCheckResponse.prototype.setChangesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.smartcore.bos.PullHealthCheckResponse.Change=} opt_value
 * @param {number=} opt_index
 * @return {!proto.smartcore.bos.PullHealthCheckResponse.Change}
 */
proto.smartcore.bos.PullHealthCheckResponse.prototype.addChanges = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.smartcore.bos.PullHealthCheckResponse.Change, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.smartcore.bos.PullHealthCheckResponse} returns this
 */
proto.smartcore.bos.PullHealthCheckResponse.prototype.clearChangesList = function() {
  return this.setChangesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.bos.ListHealthCheckHistoryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.bos.ListHealthCheckHistoryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.bos.ListHealthCheckHistoryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.ListHealthCheckHistoryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
name: jspb.Message.getFieldWithDefault(msg, 1, ""),
id: jspb.Message.getFieldWithDefault(msg, 7, ""),
period: (f = msg.getPeriod()) && types_time_period_pb.Period.toObject(includeInstance, f),
readMask: (f = msg.getReadMask()) && google_protobuf_field_mask_pb.FieldMask.toObject(includeInstance, f),
pageSize: jspb.Message.getFieldWithDefault(msg, 4, 0),
pageToken: jspb.Message.getFieldWithDefault(msg, 5, ""),
orderBy: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.bos.ListHealthCheckHistoryRequest}
 */
proto.smartcore.bos.ListHealthCheckHistoryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.bos.ListHealthCheckHistoryRequest;
  return proto.smartcore.bos.ListHealthCheckHistoryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.bos.ListHealthCheckHistoryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.bos.ListHealthCheckHistoryRequest}
 */
proto.smartcore.bos.ListHealthCheckHistoryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new types_time_period_pb.Period;
      reader.readMessage(value,types_time_period_pb.Period.deserializeBinaryFromReader);
      msg.setPeriod(value);
      break;
    case 3:
      var value = new google_protobuf_field_mask_pb.FieldMask;
      reader.readMessage(value,google_protobuf_field_mask_pb.FieldMask.deserializeBinaryFromReader);
      msg.setReadMask(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageSize(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPageToken(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderBy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.bos.ListHealthCheckHistoryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.bos.ListHealthCheckHistoryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.bos.ListHealthCheckHistoryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.ListHealthCheckHistoryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getPeriod();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      types_time_period_pb.Period.serializeBinaryToWriter
    );
  }
  f = message.getReadMask();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_field_mask_pb.FieldMask.serializeBinaryToWriter
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getPageToken();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getOrderBy();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.smartcore.bos.ListHealthCheckHistoryRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.smartcore.bos.ListHealthCheckHistoryRequest} returns this
 */
proto.smartcore.bos.ListHealthCheckHistoryRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string id = 7;
 * @return {string}
 */
proto.smartcore.bos.ListHealthCheckHistoryRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.smartcore.bos.ListHealthCheckHistoryRequest} returns this
 */
proto.smartcore.bos.ListHealthCheckHistoryRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional smartcore.types.time.Period period = 2;
 * @return {?proto.smartcore.types.time.Period}
 */
proto.smartcore.bos.ListHealthCheckHistoryRequest.prototype.getPeriod = function() {
  return /** @type{?proto.smartcore.types.time.Period} */ (
    jspb.Message.getWrapperField(this, types_time_period_pb.Period, 2));
};


/**
 * @param {?proto.smartcore.types.time.Period|undefined} value
 * @return {!proto.smartcore.bos.ListHealthCheckHistoryRequest} returns this
*/
proto.smartcore.bos.ListHealthCheckHistoryRequest.prototype.setPeriod = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.bos.ListHealthCheckHistoryRequest} returns this
 */
proto.smartcore.bos.ListHealthCheckHistoryRequest.prototype.clearPeriod = function() {
  return this.setPeriod(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.ListHealthCheckHistoryRequest.prototype.hasPeriod = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.FieldMask read_mask = 3;
 * @return {?proto.google.protobuf.FieldMask}
 */
proto.smartcore.bos.ListHealthCheckHistoryRequest.prototype.getReadMask = function() {
  return /** @type{?proto.google.protobuf.FieldMask} */ (
    jspb.Message.getWrapperField(this, google_protobuf_field_mask_pb.FieldMask, 3));
};


/**
 * @param {?proto.google.protobuf.FieldMask|undefined} value
 * @return {!proto.smartcore.bos.ListHealthCheckHistoryRequest} returns this
*/
proto.smartcore.bos.ListHealthCheckHistoryRequest.prototype.setReadMask = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.bos.ListHealthCheckHistoryRequest} returns this
 */
proto.smartcore.bos.ListHealthCheckHistoryRequest.prototype.clearReadMask = function() {
  return this.setReadMask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.ListHealthCheckHistoryRequest.prototype.hasReadMask = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int32 page_size = 4;
 * @return {number}
 */
proto.smartcore.bos.ListHealthCheckHistoryRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.smartcore.bos.ListHealthCheckHistoryRequest} returns this
 */
proto.smartcore.bos.ListHealthCheckHistoryRequest.prototype.setPageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string page_token = 5;
 * @return {string}
 */
proto.smartcore.bos.ListHealthCheckHistoryRequest.prototype.getPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.smartcore.bos.ListHealthCheckHistoryRequest} returns this
 */
proto.smartcore.bos.ListHealthCheckHistoryRequest.prototype.setPageToken = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string order_by = 6;
 * @return {string}
 */
proto.smartcore.bos.ListHealthCheckHistoryRequest.prototype.getOrderBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.smartcore.bos.ListHealthCheckHistoryRequest} returns this
 */
proto.smartcore.bos.ListHealthCheckHistoryRequest.prototype.setOrderBy = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.smartcore.bos.ListHealthCheckHistoryResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.bos.ListHealthCheckHistoryResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.bos.ListHealthCheckHistoryResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.bos.ListHealthCheckHistoryResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.ListHealthCheckHistoryResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
healthCheckRecordsList: jspb.Message.toObjectList(msg.getHealthCheckRecordsList(),
    proto.smartcore.bos.HealthCheckRecord.toObject, includeInstance),
nextPageToken: jspb.Message.getFieldWithDefault(msg, 2, ""),
totalSize: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.bos.ListHealthCheckHistoryResponse}
 */
proto.smartcore.bos.ListHealthCheckHistoryResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.bos.ListHealthCheckHistoryResponse;
  return proto.smartcore.bos.ListHealthCheckHistoryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.bos.ListHealthCheckHistoryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.bos.ListHealthCheckHistoryResponse}
 */
proto.smartcore.bos.ListHealthCheckHistoryResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.smartcore.bos.HealthCheckRecord;
      reader.readMessage(value,proto.smartcore.bos.HealthCheckRecord.deserializeBinaryFromReader);
      msg.addHealthCheckRecords(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextPageToken(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.bos.ListHealthCheckHistoryResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.bos.ListHealthCheckHistoryResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.bos.ListHealthCheckHistoryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.ListHealthCheckHistoryResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHealthCheckRecordsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.smartcore.bos.HealthCheckRecord.serializeBinaryToWriter
    );
  }
  f = message.getNextPageToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTotalSize();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * repeated HealthCheckRecord health_check_records = 1;
 * @return {!Array<!proto.smartcore.bos.HealthCheckRecord>}
 */
proto.smartcore.bos.ListHealthCheckHistoryResponse.prototype.getHealthCheckRecordsList = function() {
  return /** @type{!Array<!proto.smartcore.bos.HealthCheckRecord>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.smartcore.bos.HealthCheckRecord, 1));
};


/**
 * @param {!Array<!proto.smartcore.bos.HealthCheckRecord>} value
 * @return {!proto.smartcore.bos.ListHealthCheckHistoryResponse} returns this
*/
proto.smartcore.bos.ListHealthCheckHistoryResponse.prototype.setHealthCheckRecordsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.smartcore.bos.HealthCheckRecord=} opt_value
 * @param {number=} opt_index
 * @return {!proto.smartcore.bos.HealthCheckRecord}
 */
proto.smartcore.bos.ListHealthCheckHistoryResponse.prototype.addHealthCheckRecords = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.smartcore.bos.HealthCheckRecord, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.smartcore.bos.ListHealthCheckHistoryResponse} returns this
 */
proto.smartcore.bos.ListHealthCheckHistoryResponse.prototype.clearHealthCheckRecordsList = function() {
  return this.setHealthCheckRecordsList([]);
};


/**
 * optional string next_page_token = 2;
 * @return {string}
 */
proto.smartcore.bos.ListHealthCheckHistoryResponse.prototype.getNextPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.smartcore.bos.ListHealthCheckHistoryResponse} returns this
 */
proto.smartcore.bos.ListHealthCheckHistoryResponse.prototype.setNextPageToken = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 total_size = 3;
 * @return {number}
 */
proto.smartcore.bos.ListHealthCheckHistoryResponse.prototype.getTotalSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.smartcore.bos.ListHealthCheckHistoryResponse} returns this
 */
proto.smartcore.bos.ListHealthCheckHistoryResponse.prototype.setTotalSize = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


goog.object.extend(exports, proto.smartcore.bos);
