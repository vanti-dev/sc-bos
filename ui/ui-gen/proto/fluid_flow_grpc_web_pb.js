/**
 * @fileoverview gRPC-Web generated client stub for smartcore.bos
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v5.29.3
// source: fluid_flow.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');


var google_protobuf_field_mask_pb = require('google-protobuf/google/protobuf/field_mask_pb.js')

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js')

var types_info_pb = require('@smart-core-os/sc-api-grpc-web/types/info_pb.js')
const proto = {};
proto.smartcore = {};
proto.smartcore.bos = require('./fluid_flow_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.smartcore.bos.FluidFlowApiClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.smartcore.bos.FluidFlowApiPromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.smartcore.bos.GetFluidFlowRequest,
 *   !proto.smartcore.bos.FluidFlow>}
 */
const methodDescriptor_FluidFlowApi_GetFluidFlow = new grpc.web.MethodDescriptor(
  '/smartcore.bos.FluidFlowApi/GetFluidFlow',
  grpc.web.MethodType.UNARY,
  proto.smartcore.bos.GetFluidFlowRequest,
  proto.smartcore.bos.FluidFlow,
  /**
   * @param {!proto.smartcore.bos.GetFluidFlowRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.smartcore.bos.FluidFlow.deserializeBinary
);


/**
 * @param {!proto.smartcore.bos.GetFluidFlowRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.smartcore.bos.FluidFlow)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.smartcore.bos.FluidFlow>|undefined}
 *     The XHR Node Readable Stream
 */
proto.smartcore.bos.FluidFlowApiClient.prototype.getFluidFlow =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/smartcore.bos.FluidFlowApi/GetFluidFlow',
      request,
      metadata || {},
      methodDescriptor_FluidFlowApi_GetFluidFlow,
      callback);
};


/**
 * @param {!proto.smartcore.bos.GetFluidFlowRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.smartcore.bos.FluidFlow>}
 *     Promise that resolves to the response
 */
proto.smartcore.bos.FluidFlowApiPromiseClient.prototype.getFluidFlow =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/smartcore.bos.FluidFlowApi/GetFluidFlow',
      request,
      metadata || {},
      methodDescriptor_FluidFlowApi_GetFluidFlow);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.smartcore.bos.PullFluidFlowRequest,
 *   !proto.smartcore.bos.PullFluidFlowResponse>}
 */
const methodDescriptor_FluidFlowApi_PullFluidFlow = new grpc.web.MethodDescriptor(
  '/smartcore.bos.FluidFlowApi/PullFluidFlow',
  grpc.web.MethodType.SERVER_STREAMING,
  proto.smartcore.bos.PullFluidFlowRequest,
  proto.smartcore.bos.PullFluidFlowResponse,
  /**
   * @param {!proto.smartcore.bos.PullFluidFlowRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.smartcore.bos.PullFluidFlowResponse.deserializeBinary
);


/**
 * @param {!proto.smartcore.bos.PullFluidFlowRequest} request The request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!grpc.web.ClientReadableStream<!proto.smartcore.bos.PullFluidFlowResponse>}
 *     The XHR Node Readable Stream
 */
proto.smartcore.bos.FluidFlowApiClient.prototype.pullFluidFlow =
    function(request, metadata) {
  return this.client_.serverStreaming(this.hostname_ +
      '/smartcore.bos.FluidFlowApi/PullFluidFlow',
      request,
      metadata || {},
      methodDescriptor_FluidFlowApi_PullFluidFlow);
};


/**
 * @param {!proto.smartcore.bos.PullFluidFlowRequest} request The request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!grpc.web.ClientReadableStream<!proto.smartcore.bos.PullFluidFlowResponse>}
 *     The XHR Node Readable Stream
 */
proto.smartcore.bos.FluidFlowApiPromiseClient.prototype.pullFluidFlow =
    function(request, metadata) {
  return this.client_.serverStreaming(this.hostname_ +
      '/smartcore.bos.FluidFlowApi/PullFluidFlow',
      request,
      metadata || {},
      methodDescriptor_FluidFlowApi_PullFluidFlow);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.smartcore.bos.UpdateFluidFlowRequest,
 *   !proto.smartcore.bos.FluidFlow>}
 */
const methodDescriptor_FluidFlowApi_UpdateFluidFlow = new grpc.web.MethodDescriptor(
  '/smartcore.bos.FluidFlowApi/UpdateFluidFlow',
  grpc.web.MethodType.UNARY,
  proto.smartcore.bos.UpdateFluidFlowRequest,
  proto.smartcore.bos.FluidFlow,
  /**
   * @param {!proto.smartcore.bos.UpdateFluidFlowRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.smartcore.bos.FluidFlow.deserializeBinary
);


/**
 * @param {!proto.smartcore.bos.UpdateFluidFlowRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.smartcore.bos.FluidFlow)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.smartcore.bos.FluidFlow>|undefined}
 *     The XHR Node Readable Stream
 */
proto.smartcore.bos.FluidFlowApiClient.prototype.updateFluidFlow =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/smartcore.bos.FluidFlowApi/UpdateFluidFlow',
      request,
      metadata || {},
      methodDescriptor_FluidFlowApi_UpdateFluidFlow,
      callback);
};


/**
 * @param {!proto.smartcore.bos.UpdateFluidFlowRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.smartcore.bos.FluidFlow>}
 *     Promise that resolves to the response
 */
proto.smartcore.bos.FluidFlowApiPromiseClient.prototype.updateFluidFlow =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/smartcore.bos.FluidFlowApi/UpdateFluidFlow',
      request,
      metadata || {},
      methodDescriptor_FluidFlowApi_UpdateFluidFlow);
};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.smartcore.bos.FluidFlowInfoClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.smartcore.bos.FluidFlowInfoPromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.smartcore.bos.DescribeFluidFlowRequest,
 *   !proto.smartcore.bos.FluidFlowSupport>}
 */
const methodDescriptor_FluidFlowInfo_DescribeFluidFlow = new grpc.web.MethodDescriptor(
  '/smartcore.bos.FluidFlowInfo/DescribeFluidFlow',
  grpc.web.MethodType.UNARY,
  proto.smartcore.bos.DescribeFluidFlowRequest,
  proto.smartcore.bos.FluidFlowSupport,
  /**
   * @param {!proto.smartcore.bos.DescribeFluidFlowRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.smartcore.bos.FluidFlowSupport.deserializeBinary
);


/**
 * @param {!proto.smartcore.bos.DescribeFluidFlowRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.smartcore.bos.FluidFlowSupport)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.smartcore.bos.FluidFlowSupport>|undefined}
 *     The XHR Node Readable Stream
 */
proto.smartcore.bos.FluidFlowInfoClient.prototype.describeFluidFlow =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/smartcore.bos.FluidFlowInfo/DescribeFluidFlow',
      request,
      metadata || {},
      methodDescriptor_FluidFlowInfo_DescribeFluidFlow,
      callback);
};


/**
 * @param {!proto.smartcore.bos.DescribeFluidFlowRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.smartcore.bos.FluidFlowSupport>}
 *     Promise that resolves to the response
 */
proto.smartcore.bos.FluidFlowInfoPromiseClient.prototype.describeFluidFlow =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/smartcore.bos.FluidFlowInfo/DescribeFluidFlow',
      request,
      metadata || {},
      methodDescriptor_FluidFlowInfo_DescribeFluidFlow);
};


module.exports = proto.smartcore.bos;

