/**
 * @fileoverview gRPC-Web generated client stub for smartcore.bos
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v5.29.3
// source: pressure.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');


var google_protobuf_field_mask_pb = require('google-protobuf/google/protobuf/field_mask_pb.js')

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js')

var types_info_pb = require('@smart-core-os/sc-api-grpc-web/types/info_pb.js')
const proto = {};
proto.smartcore = {};
proto.smartcore.bos = require('./pressure_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.smartcore.bos.PressureApiClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.smartcore.bos.PressureApiPromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.smartcore.bos.GetPressureRequest,
 *   !proto.smartcore.bos.Pressure>}
 */
const methodDescriptor_PressureApi_GetPressure = new grpc.web.MethodDescriptor(
  '/smartcore.bos.PressureApi/GetPressure',
  grpc.web.MethodType.UNARY,
  proto.smartcore.bos.GetPressureRequest,
  proto.smartcore.bos.Pressure,
  /**
   * @param {!proto.smartcore.bos.GetPressureRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.smartcore.bos.Pressure.deserializeBinary
);


/**
 * @param {!proto.smartcore.bos.GetPressureRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.smartcore.bos.Pressure)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.smartcore.bos.Pressure>|undefined}
 *     The XHR Node Readable Stream
 */
proto.smartcore.bos.PressureApiClient.prototype.getPressure =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/smartcore.bos.PressureApi/GetPressure',
      request,
      metadata || {},
      methodDescriptor_PressureApi_GetPressure,
      callback);
};


/**
 * @param {!proto.smartcore.bos.GetPressureRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.smartcore.bos.Pressure>}
 *     Promise that resolves to the response
 */
proto.smartcore.bos.PressureApiPromiseClient.prototype.getPressure =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/smartcore.bos.PressureApi/GetPressure',
      request,
      metadata || {},
      methodDescriptor_PressureApi_GetPressure);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.smartcore.bos.PullPressureRequest,
 *   !proto.smartcore.bos.PullPressureResponse>}
 */
const methodDescriptor_PressureApi_PullPressure = new grpc.web.MethodDescriptor(
  '/smartcore.bos.PressureApi/PullPressure',
  grpc.web.MethodType.SERVER_STREAMING,
  proto.smartcore.bos.PullPressureRequest,
  proto.smartcore.bos.PullPressureResponse,
  /**
   * @param {!proto.smartcore.bos.PullPressureRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.smartcore.bos.PullPressureResponse.deserializeBinary
);


/**
 * @param {!proto.smartcore.bos.PullPressureRequest} request The request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!grpc.web.ClientReadableStream<!proto.smartcore.bos.PullPressureResponse>}
 *     The XHR Node Readable Stream
 */
proto.smartcore.bos.PressureApiClient.prototype.pullPressure =
    function(request, metadata) {
  return this.client_.serverStreaming(this.hostname_ +
      '/smartcore.bos.PressureApi/PullPressure',
      request,
      metadata || {},
      methodDescriptor_PressureApi_PullPressure);
};


/**
 * @param {!proto.smartcore.bos.PullPressureRequest} request The request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!grpc.web.ClientReadableStream<!proto.smartcore.bos.PullPressureResponse>}
 *     The XHR Node Readable Stream
 */
proto.smartcore.bos.PressureApiPromiseClient.prototype.pullPressure =
    function(request, metadata) {
  return this.client_.serverStreaming(this.hostname_ +
      '/smartcore.bos.PressureApi/PullPressure',
      request,
      metadata || {},
      methodDescriptor_PressureApi_PullPressure);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.smartcore.bos.UpdatePressureRequest,
 *   !proto.smartcore.bos.Pressure>}
 */
const methodDescriptor_PressureApi_UpdatePressure = new grpc.web.MethodDescriptor(
  '/smartcore.bos.PressureApi/UpdatePressure',
  grpc.web.MethodType.UNARY,
  proto.smartcore.bos.UpdatePressureRequest,
  proto.smartcore.bos.Pressure,
  /**
   * @param {!proto.smartcore.bos.UpdatePressureRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.smartcore.bos.Pressure.deserializeBinary
);


/**
 * @param {!proto.smartcore.bos.UpdatePressureRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.smartcore.bos.Pressure)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.smartcore.bos.Pressure>|undefined}
 *     The XHR Node Readable Stream
 */
proto.smartcore.bos.PressureApiClient.prototype.updatePressure =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/smartcore.bos.PressureApi/UpdatePressure',
      request,
      metadata || {},
      methodDescriptor_PressureApi_UpdatePressure,
      callback);
};


/**
 * @param {!proto.smartcore.bos.UpdatePressureRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.smartcore.bos.Pressure>}
 *     Promise that resolves to the response
 */
proto.smartcore.bos.PressureApiPromiseClient.prototype.updatePressure =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/smartcore.bos.PressureApi/UpdatePressure',
      request,
      metadata || {},
      methodDescriptor_PressureApi_UpdatePressure);
};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.smartcore.bos.PressureInfoClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.smartcore.bos.PressureInfoPromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.smartcore.bos.DescribePressureRequest,
 *   !proto.smartcore.bos.PressureSupport>}
 */
const methodDescriptor_PressureInfo_DescribePressure = new grpc.web.MethodDescriptor(
  '/smartcore.bos.PressureInfo/DescribePressure',
  grpc.web.MethodType.UNARY,
  proto.smartcore.bos.DescribePressureRequest,
  proto.smartcore.bos.PressureSupport,
  /**
   * @param {!proto.smartcore.bos.DescribePressureRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.smartcore.bos.PressureSupport.deserializeBinary
);


/**
 * @param {!proto.smartcore.bos.DescribePressureRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.smartcore.bos.PressureSupport)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.smartcore.bos.PressureSupport>|undefined}
 *     The XHR Node Readable Stream
 */
proto.smartcore.bos.PressureInfoClient.prototype.describePressure =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/smartcore.bos.PressureInfo/DescribePressure',
      request,
      metadata || {},
      methodDescriptor_PressureInfo_DescribePressure,
      callback);
};


/**
 * @param {!proto.smartcore.bos.DescribePressureRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.smartcore.bos.PressureSupport>}
 *     Promise that resolves to the response
 */
proto.smartcore.bos.PressureInfoPromiseClient.prototype.describePressure =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/smartcore.bos.PressureInfo/DescribePressure',
      request,
      metadata || {},
      methodDescriptor_PressureInfo_DescribePressure);
};


module.exports = proto.smartcore.bos;

