/**
 * @fileoverview gRPC-Web generated client stub for smartcore.bos
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v5.29.1
// source: service_ticket.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');


var types_info_pb = require('@smart-core-os/sc-api-grpc-web/types/info_pb.js')
const proto = {};
proto.smartcore = {};
proto.smartcore.bos = require('./service_ticket_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.smartcore.bos.ServiceTicketApiClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.smartcore.bos.ServiceTicketApiPromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.smartcore.bos.CreateTicketRequest,
 *   !proto.smartcore.bos.Ticket>}
 */
const methodDescriptor_ServiceTicketApi_CreateTicket = new grpc.web.MethodDescriptor(
  '/smartcore.bos.ServiceTicketApi/CreateTicket',
  grpc.web.MethodType.UNARY,
  proto.smartcore.bos.CreateTicketRequest,
  proto.smartcore.bos.Ticket,
  /**
   * @param {!proto.smartcore.bos.CreateTicketRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.smartcore.bos.Ticket.deserializeBinary
);


/**
 * @param {!proto.smartcore.bos.CreateTicketRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.smartcore.bos.Ticket)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.smartcore.bos.Ticket>|undefined}
 *     The XHR Node Readable Stream
 */
proto.smartcore.bos.ServiceTicketApiClient.prototype.createTicket =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/smartcore.bos.ServiceTicketApi/CreateTicket',
      request,
      metadata || {},
      methodDescriptor_ServiceTicketApi_CreateTicket,
      callback);
};


/**
 * @param {!proto.smartcore.bos.CreateTicketRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.smartcore.bos.Ticket>}
 *     Promise that resolves to the response
 */
proto.smartcore.bos.ServiceTicketApiPromiseClient.prototype.createTicket =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/smartcore.bos.ServiceTicketApi/CreateTicket',
      request,
      metadata || {},
      methodDescriptor_ServiceTicketApi_CreateTicket);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.smartcore.bos.UpdateTicketRequest,
 *   !proto.smartcore.bos.Ticket>}
 */
const methodDescriptor_ServiceTicketApi_UpdateTicket = new grpc.web.MethodDescriptor(
  '/smartcore.bos.ServiceTicketApi/UpdateTicket',
  grpc.web.MethodType.UNARY,
  proto.smartcore.bos.UpdateTicketRequest,
  proto.smartcore.bos.Ticket,
  /**
   * @param {!proto.smartcore.bos.UpdateTicketRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.smartcore.bos.Ticket.deserializeBinary
);


/**
 * @param {!proto.smartcore.bos.UpdateTicketRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.smartcore.bos.Ticket)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.smartcore.bos.Ticket>|undefined}
 *     The XHR Node Readable Stream
 */
proto.smartcore.bos.ServiceTicketApiClient.prototype.updateTicket =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/smartcore.bos.ServiceTicketApi/UpdateTicket',
      request,
      metadata || {},
      methodDescriptor_ServiceTicketApi_UpdateTicket,
      callback);
};


/**
 * @param {!proto.smartcore.bos.UpdateTicketRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.smartcore.bos.Ticket>}
 *     Promise that resolves to the response
 */
proto.smartcore.bos.ServiceTicketApiPromiseClient.prototype.updateTicket =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/smartcore.bos.ServiceTicketApi/UpdateTicket',
      request,
      metadata || {},
      methodDescriptor_ServiceTicketApi_UpdateTicket);
};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.smartcore.bos.ServiceTicketInfoClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.smartcore.bos.ServiceTicketInfoPromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.smartcore.bos.DescribeTicketRequest,
 *   !proto.smartcore.bos.TicketSupport>}
 */
const methodDescriptor_ServiceTicketInfo_DescribeTicket = new grpc.web.MethodDescriptor(
  '/smartcore.bos.ServiceTicketInfo/DescribeTicket',
  grpc.web.MethodType.UNARY,
  proto.smartcore.bos.DescribeTicketRequest,
  proto.smartcore.bos.TicketSupport,
  /**
   * @param {!proto.smartcore.bos.DescribeTicketRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.smartcore.bos.TicketSupport.deserializeBinary
);


/**
 * @param {!proto.smartcore.bos.DescribeTicketRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.smartcore.bos.TicketSupport)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.smartcore.bos.TicketSupport>|undefined}
 *     The XHR Node Readable Stream
 */
proto.smartcore.bos.ServiceTicketInfoClient.prototype.describeTicket =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/smartcore.bos.ServiceTicketInfo/DescribeTicket',
      request,
      metadata || {},
      methodDescriptor_ServiceTicketInfo_DescribeTicket,
      callback);
};


/**
 * @param {!proto.smartcore.bos.DescribeTicketRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.smartcore.bos.TicketSupport>}
 *     Promise that resolves to the response
 */
proto.smartcore.bos.ServiceTicketInfoPromiseClient.prototype.describeTicket =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/smartcore.bos.ServiceTicketInfo/DescribeTicket',
      request,
      metadata || {},
      methodDescriptor_ServiceTicketInfo_DescribeTicket);
};


module.exports = proto.smartcore.bos;

