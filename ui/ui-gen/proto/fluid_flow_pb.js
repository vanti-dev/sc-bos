// source: fluid_flow.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var google_protobuf_field_mask_pb = require('google-protobuf/google/protobuf/field_mask_pb.js');
goog.object.extend(proto, google_protobuf_field_mask_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var types_info_pb = require('@smart-core-os/sc-api-grpc-web/types/info_pb.js');
goog.object.extend(proto, types_info_pb);
goog.exportSymbol('proto.smartcore.bos.DescribeFluidFlowRequest', null, global);
goog.exportSymbol('proto.smartcore.bos.FluidFlow', null, global);
goog.exportSymbol('proto.smartcore.bos.FluidFlow.Direction', null, global);
goog.exportSymbol('proto.smartcore.bos.FluidFlowSupport', null, global);
goog.exportSymbol('proto.smartcore.bos.GetFluidFlowRequest', null, global);
goog.exportSymbol('proto.smartcore.bos.PullFluidFlowRequest', null, global);
goog.exportSymbol('proto.smartcore.bos.PullFluidFlowResponse', null, global);
goog.exportSymbol('proto.smartcore.bos.PullFluidFlowResponse.Change', null, global);
goog.exportSymbol('proto.smartcore.bos.UpdateFluidFlowRequest', null, global);
goog.exportSymbol('proto.smartcore.bos.UpdateFluidFlowResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.bos.FluidFlow = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.smartcore.bos.FluidFlow, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.bos.FluidFlow.displayName = 'proto.smartcore.bos.FluidFlow';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.bos.GetFluidFlowRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.smartcore.bos.GetFluidFlowRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.bos.GetFluidFlowRequest.displayName = 'proto.smartcore.bos.GetFluidFlowRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.bos.PullFluidFlowRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.smartcore.bos.PullFluidFlowRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.bos.PullFluidFlowRequest.displayName = 'proto.smartcore.bos.PullFluidFlowRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.bos.PullFluidFlowResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.smartcore.bos.PullFluidFlowResponse.repeatedFields_, null);
};
goog.inherits(proto.smartcore.bos.PullFluidFlowResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.bos.PullFluidFlowResponse.displayName = 'proto.smartcore.bos.PullFluidFlowResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.bos.PullFluidFlowResponse.Change = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.smartcore.bos.PullFluidFlowResponse.Change, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.bos.PullFluidFlowResponse.Change.displayName = 'proto.smartcore.bos.PullFluidFlowResponse.Change';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.bos.UpdateFluidFlowRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.smartcore.bos.UpdateFluidFlowRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.bos.UpdateFluidFlowRequest.displayName = 'proto.smartcore.bos.UpdateFluidFlowRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.bos.UpdateFluidFlowResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.smartcore.bos.UpdateFluidFlowResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.bos.UpdateFluidFlowResponse.displayName = 'proto.smartcore.bos.UpdateFluidFlowResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.bos.DescribeFluidFlowRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.smartcore.bos.DescribeFluidFlowRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.bos.DescribeFluidFlowRequest.displayName = 'proto.smartcore.bos.DescribeFluidFlowRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.bos.FluidFlowSupport = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.smartcore.bos.FluidFlowSupport, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.bos.FluidFlowSupport.displayName = 'proto.smartcore.bos.FluidFlowSupport';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.bos.FluidFlow.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.bos.FluidFlow.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.bos.FluidFlow} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.FluidFlow.toObject = function(includeInstance, msg) {
  var f, obj = {
targetFlowRate: (f = jspb.Message.getOptionalFloatingPointField(msg, 1)) == null ? undefined : f,
targetDriveFrequency: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
flowRate: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f,
driveFrequency: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f,
direction: jspb.Message.getFieldWithDefault(msg, 11, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.bos.FluidFlow}
 */
proto.smartcore.bos.FluidFlow.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.bos.FluidFlow;
  return proto.smartcore.bos.FluidFlow.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.bos.FluidFlow} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.bos.FluidFlow}
 */
proto.smartcore.bos.FluidFlow.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setTargetFlowRate(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setTargetDriveFrequency(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setFlowRate(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setDriveFrequency(value);
      break;
    case 11:
      var value = /** @type {!proto.smartcore.bos.FluidFlow.Direction} */ (reader.readEnum());
      msg.setDirection(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.bos.FluidFlow.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.bos.FluidFlow.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.bos.FluidFlow} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.FluidFlow.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeFloat(
      4,
      f
    );
  }
  f = message.getDirection();
  if (f !== 0.0) {
    writer.writeEnum(
      11,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.smartcore.bos.FluidFlow.Direction = {
  DIRECTION_UNSPECIFIED: 0,
  FLOW: 1,
  RETURN: 2,
  BLOCKING: 3
};

/**
 * optional float target_flow_rate = 1;
 * @return {number}
 */
proto.smartcore.bos.FluidFlow.prototype.getTargetFlowRate = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.smartcore.bos.FluidFlow} returns this
 */
proto.smartcore.bos.FluidFlow.prototype.setTargetFlowRate = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.smartcore.bos.FluidFlow} returns this
 */
proto.smartcore.bos.FluidFlow.prototype.clearTargetFlowRate = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.FluidFlow.prototype.hasTargetFlowRate = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional float target_drive_frequency = 2;
 * @return {number}
 */
proto.smartcore.bos.FluidFlow.prototype.getTargetDriveFrequency = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.smartcore.bos.FluidFlow} returns this
 */
proto.smartcore.bos.FluidFlow.prototype.setTargetDriveFrequency = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.smartcore.bos.FluidFlow} returns this
 */
proto.smartcore.bos.FluidFlow.prototype.clearTargetDriveFrequency = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.FluidFlow.prototype.hasTargetDriveFrequency = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional float flow_rate = 3;
 * @return {number}
 */
proto.smartcore.bos.FluidFlow.prototype.getFlowRate = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.smartcore.bos.FluidFlow} returns this
 */
proto.smartcore.bos.FluidFlow.prototype.setFlowRate = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.smartcore.bos.FluidFlow} returns this
 */
proto.smartcore.bos.FluidFlow.prototype.clearFlowRate = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.FluidFlow.prototype.hasFlowRate = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional float drive_frequency = 4;
 * @return {number}
 */
proto.smartcore.bos.FluidFlow.prototype.getDriveFrequency = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.smartcore.bos.FluidFlow} returns this
 */
proto.smartcore.bos.FluidFlow.prototype.setDriveFrequency = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.smartcore.bos.FluidFlow} returns this
 */
proto.smartcore.bos.FluidFlow.prototype.clearDriveFrequency = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.FluidFlow.prototype.hasDriveFrequency = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Direction direction = 11;
 * @return {!proto.smartcore.bos.FluidFlow.Direction}
 */
proto.smartcore.bos.FluidFlow.prototype.getDirection = function() {
  return /** @type {!proto.smartcore.bos.FluidFlow.Direction} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {!proto.smartcore.bos.FluidFlow.Direction} value
 * @return {!proto.smartcore.bos.FluidFlow} returns this
 */
proto.smartcore.bos.FluidFlow.prototype.setDirection = function(value) {
  return jspb.Message.setProto3EnumField(this, 11, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.bos.GetFluidFlowRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.bos.GetFluidFlowRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.bos.GetFluidFlowRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.GetFluidFlowRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
name: jspb.Message.getFieldWithDefault(msg, 1, ""),
readMask: (f = msg.getReadMask()) && google_protobuf_field_mask_pb.FieldMask.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.bos.GetFluidFlowRequest}
 */
proto.smartcore.bos.GetFluidFlowRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.bos.GetFluidFlowRequest;
  return proto.smartcore.bos.GetFluidFlowRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.bos.GetFluidFlowRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.bos.GetFluidFlowRequest}
 */
proto.smartcore.bos.GetFluidFlowRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new google_protobuf_field_mask_pb.FieldMask;
      reader.readMessage(value,google_protobuf_field_mask_pb.FieldMask.deserializeBinaryFromReader);
      msg.setReadMask(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.bos.GetFluidFlowRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.bos.GetFluidFlowRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.bos.GetFluidFlowRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.GetFluidFlowRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getReadMask();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_field_mask_pb.FieldMask.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.smartcore.bos.GetFluidFlowRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.smartcore.bos.GetFluidFlowRequest} returns this
 */
proto.smartcore.bos.GetFluidFlowRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.FieldMask read_mask = 2;
 * @return {?proto.google.protobuf.FieldMask}
 */
proto.smartcore.bos.GetFluidFlowRequest.prototype.getReadMask = function() {
  return /** @type{?proto.google.protobuf.FieldMask} */ (
    jspb.Message.getWrapperField(this, google_protobuf_field_mask_pb.FieldMask, 2));
};


/**
 * @param {?proto.google.protobuf.FieldMask|undefined} value
 * @return {!proto.smartcore.bos.GetFluidFlowRequest} returns this
*/
proto.smartcore.bos.GetFluidFlowRequest.prototype.setReadMask = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.bos.GetFluidFlowRequest} returns this
 */
proto.smartcore.bos.GetFluidFlowRequest.prototype.clearReadMask = function() {
  return this.setReadMask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.GetFluidFlowRequest.prototype.hasReadMask = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.bos.PullFluidFlowRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.bos.PullFluidFlowRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.bos.PullFluidFlowRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.PullFluidFlowRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
name: jspb.Message.getFieldWithDefault(msg, 1, ""),
readMask: (f = msg.getReadMask()) && google_protobuf_field_mask_pb.FieldMask.toObject(includeInstance, f),
updatesOnly: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.bos.PullFluidFlowRequest}
 */
proto.smartcore.bos.PullFluidFlowRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.bos.PullFluidFlowRequest;
  return proto.smartcore.bos.PullFluidFlowRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.bos.PullFluidFlowRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.bos.PullFluidFlowRequest}
 */
proto.smartcore.bos.PullFluidFlowRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new google_protobuf_field_mask_pb.FieldMask;
      reader.readMessage(value,google_protobuf_field_mask_pb.FieldMask.deserializeBinaryFromReader);
      msg.setReadMask(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUpdatesOnly(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.bos.PullFluidFlowRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.bos.PullFluidFlowRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.bos.PullFluidFlowRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.PullFluidFlowRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getReadMask();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_field_mask_pb.FieldMask.serializeBinaryToWriter
    );
  }
  f = message.getUpdatesOnly();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.smartcore.bos.PullFluidFlowRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.smartcore.bos.PullFluidFlowRequest} returns this
 */
proto.smartcore.bos.PullFluidFlowRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.FieldMask read_mask = 2;
 * @return {?proto.google.protobuf.FieldMask}
 */
proto.smartcore.bos.PullFluidFlowRequest.prototype.getReadMask = function() {
  return /** @type{?proto.google.protobuf.FieldMask} */ (
    jspb.Message.getWrapperField(this, google_protobuf_field_mask_pb.FieldMask, 2));
};


/**
 * @param {?proto.google.protobuf.FieldMask|undefined} value
 * @return {!proto.smartcore.bos.PullFluidFlowRequest} returns this
*/
proto.smartcore.bos.PullFluidFlowRequest.prototype.setReadMask = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.bos.PullFluidFlowRequest} returns this
 */
proto.smartcore.bos.PullFluidFlowRequest.prototype.clearReadMask = function() {
  return this.setReadMask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.PullFluidFlowRequest.prototype.hasReadMask = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool updates_only = 3;
 * @return {boolean}
 */
proto.smartcore.bos.PullFluidFlowRequest.prototype.getUpdatesOnly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.smartcore.bos.PullFluidFlowRequest} returns this
 */
proto.smartcore.bos.PullFluidFlowRequest.prototype.setUpdatesOnly = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.smartcore.bos.PullFluidFlowResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.bos.PullFluidFlowResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.bos.PullFluidFlowResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.bos.PullFluidFlowResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.PullFluidFlowResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
changesList: jspb.Message.toObjectList(msg.getChangesList(),
    proto.smartcore.bos.PullFluidFlowResponse.Change.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.bos.PullFluidFlowResponse}
 */
proto.smartcore.bos.PullFluidFlowResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.bos.PullFluidFlowResponse;
  return proto.smartcore.bos.PullFluidFlowResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.bos.PullFluidFlowResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.bos.PullFluidFlowResponse}
 */
proto.smartcore.bos.PullFluidFlowResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.smartcore.bos.PullFluidFlowResponse.Change;
      reader.readMessage(value,proto.smartcore.bos.PullFluidFlowResponse.Change.deserializeBinaryFromReader);
      msg.addChanges(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.bos.PullFluidFlowResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.bos.PullFluidFlowResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.bos.PullFluidFlowResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.PullFluidFlowResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChangesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.smartcore.bos.PullFluidFlowResponse.Change.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.bos.PullFluidFlowResponse.Change.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.bos.PullFluidFlowResponse.Change.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.bos.PullFluidFlowResponse.Change} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.PullFluidFlowResponse.Change.toObject = function(includeInstance, msg) {
  var f, obj = {
name: jspb.Message.getFieldWithDefault(msg, 1, ""),
changeTime: (f = msg.getChangeTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
flow: (f = msg.getFlow()) && proto.smartcore.bos.FluidFlow.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.bos.PullFluidFlowResponse.Change}
 */
proto.smartcore.bos.PullFluidFlowResponse.Change.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.bos.PullFluidFlowResponse.Change;
  return proto.smartcore.bos.PullFluidFlowResponse.Change.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.bos.PullFluidFlowResponse.Change} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.bos.PullFluidFlowResponse.Change}
 */
proto.smartcore.bos.PullFluidFlowResponse.Change.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setChangeTime(value);
      break;
    case 3:
      var value = new proto.smartcore.bos.FluidFlow;
      reader.readMessage(value,proto.smartcore.bos.FluidFlow.deserializeBinaryFromReader);
      msg.setFlow(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.bos.PullFluidFlowResponse.Change.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.bos.PullFluidFlowResponse.Change.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.bos.PullFluidFlowResponse.Change} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.PullFluidFlowResponse.Change.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getChangeTime();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getFlow();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.smartcore.bos.FluidFlow.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.smartcore.bos.PullFluidFlowResponse.Change.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.smartcore.bos.PullFluidFlowResponse.Change} returns this
 */
proto.smartcore.bos.PullFluidFlowResponse.Change.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp change_time = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.smartcore.bos.PullFluidFlowResponse.Change.prototype.getChangeTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.smartcore.bos.PullFluidFlowResponse.Change} returns this
*/
proto.smartcore.bos.PullFluidFlowResponse.Change.prototype.setChangeTime = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.bos.PullFluidFlowResponse.Change} returns this
 */
proto.smartcore.bos.PullFluidFlowResponse.Change.prototype.clearChangeTime = function() {
  return this.setChangeTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.PullFluidFlowResponse.Change.prototype.hasChangeTime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional FluidFlow flow = 3;
 * @return {?proto.smartcore.bos.FluidFlow}
 */
proto.smartcore.bos.PullFluidFlowResponse.Change.prototype.getFlow = function() {
  return /** @type{?proto.smartcore.bos.FluidFlow} */ (
    jspb.Message.getWrapperField(this, proto.smartcore.bos.FluidFlow, 3));
};


/**
 * @param {?proto.smartcore.bos.FluidFlow|undefined} value
 * @return {!proto.smartcore.bos.PullFluidFlowResponse.Change} returns this
*/
proto.smartcore.bos.PullFluidFlowResponse.Change.prototype.setFlow = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.bos.PullFluidFlowResponse.Change} returns this
 */
proto.smartcore.bos.PullFluidFlowResponse.Change.prototype.clearFlow = function() {
  return this.setFlow(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.PullFluidFlowResponse.Change.prototype.hasFlow = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated Change changes = 1;
 * @return {!Array<!proto.smartcore.bos.PullFluidFlowResponse.Change>}
 */
proto.smartcore.bos.PullFluidFlowResponse.prototype.getChangesList = function() {
  return /** @type{!Array<!proto.smartcore.bos.PullFluidFlowResponse.Change>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.smartcore.bos.PullFluidFlowResponse.Change, 1));
};


/**
 * @param {!Array<!proto.smartcore.bos.PullFluidFlowResponse.Change>} value
 * @return {!proto.smartcore.bos.PullFluidFlowResponse} returns this
*/
proto.smartcore.bos.PullFluidFlowResponse.prototype.setChangesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.smartcore.bos.PullFluidFlowResponse.Change=} opt_value
 * @param {number=} opt_index
 * @return {!proto.smartcore.bos.PullFluidFlowResponse.Change}
 */
proto.smartcore.bos.PullFluidFlowResponse.prototype.addChanges = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.smartcore.bos.PullFluidFlowResponse.Change, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.smartcore.bos.PullFluidFlowResponse} returns this
 */
proto.smartcore.bos.PullFluidFlowResponse.prototype.clearChangesList = function() {
  return this.setChangesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.bos.UpdateFluidFlowRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.bos.UpdateFluidFlowRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.bos.UpdateFluidFlowRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.UpdateFluidFlowRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
name: jspb.Message.getFieldWithDefault(msg, 1, ""),
flow: (f = msg.getFlow()) && proto.smartcore.bos.FluidFlow.toObject(includeInstance, f),
updateMask: (f = msg.getUpdateMask()) && google_protobuf_field_mask_pb.FieldMask.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.bos.UpdateFluidFlowRequest}
 */
proto.smartcore.bos.UpdateFluidFlowRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.bos.UpdateFluidFlowRequest;
  return proto.smartcore.bos.UpdateFluidFlowRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.bos.UpdateFluidFlowRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.bos.UpdateFluidFlowRequest}
 */
proto.smartcore.bos.UpdateFluidFlowRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new proto.smartcore.bos.FluidFlow;
      reader.readMessage(value,proto.smartcore.bos.FluidFlow.deserializeBinaryFromReader);
      msg.setFlow(value);
      break;
    case 3:
      var value = new google_protobuf_field_mask_pb.FieldMask;
      reader.readMessage(value,google_protobuf_field_mask_pb.FieldMask.deserializeBinaryFromReader);
      msg.setUpdateMask(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.bos.UpdateFluidFlowRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.bos.UpdateFluidFlowRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.bos.UpdateFluidFlowRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.UpdateFluidFlowRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFlow();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.smartcore.bos.FluidFlow.serializeBinaryToWriter
    );
  }
  f = message.getUpdateMask();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_field_mask_pb.FieldMask.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.smartcore.bos.UpdateFluidFlowRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.smartcore.bos.UpdateFluidFlowRequest} returns this
 */
proto.smartcore.bos.UpdateFluidFlowRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional FluidFlow flow = 2;
 * @return {?proto.smartcore.bos.FluidFlow}
 */
proto.smartcore.bos.UpdateFluidFlowRequest.prototype.getFlow = function() {
  return /** @type{?proto.smartcore.bos.FluidFlow} */ (
    jspb.Message.getWrapperField(this, proto.smartcore.bos.FluidFlow, 2));
};


/**
 * @param {?proto.smartcore.bos.FluidFlow|undefined} value
 * @return {!proto.smartcore.bos.UpdateFluidFlowRequest} returns this
*/
proto.smartcore.bos.UpdateFluidFlowRequest.prototype.setFlow = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.bos.UpdateFluidFlowRequest} returns this
 */
proto.smartcore.bos.UpdateFluidFlowRequest.prototype.clearFlow = function() {
  return this.setFlow(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.UpdateFluidFlowRequest.prototype.hasFlow = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.FieldMask update_mask = 3;
 * @return {?proto.google.protobuf.FieldMask}
 */
proto.smartcore.bos.UpdateFluidFlowRequest.prototype.getUpdateMask = function() {
  return /** @type{?proto.google.protobuf.FieldMask} */ (
    jspb.Message.getWrapperField(this, google_protobuf_field_mask_pb.FieldMask, 3));
};


/**
 * @param {?proto.google.protobuf.FieldMask|undefined} value
 * @return {!proto.smartcore.bos.UpdateFluidFlowRequest} returns this
*/
proto.smartcore.bos.UpdateFluidFlowRequest.prototype.setUpdateMask = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.bos.UpdateFluidFlowRequest} returns this
 */
proto.smartcore.bos.UpdateFluidFlowRequest.prototype.clearUpdateMask = function() {
  return this.setUpdateMask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.UpdateFluidFlowRequest.prototype.hasUpdateMask = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.bos.UpdateFluidFlowResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.bos.UpdateFluidFlowResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.bos.UpdateFluidFlowResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.UpdateFluidFlowResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
flow: (f = msg.getFlow()) && proto.smartcore.bos.FluidFlow.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.bos.UpdateFluidFlowResponse}
 */
proto.smartcore.bos.UpdateFluidFlowResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.bos.UpdateFluidFlowResponse;
  return proto.smartcore.bos.UpdateFluidFlowResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.bos.UpdateFluidFlowResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.bos.UpdateFluidFlowResponse}
 */
proto.smartcore.bos.UpdateFluidFlowResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.smartcore.bos.FluidFlow;
      reader.readMessage(value,proto.smartcore.bos.FluidFlow.deserializeBinaryFromReader);
      msg.setFlow(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.bos.UpdateFluidFlowResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.bos.UpdateFluidFlowResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.bos.UpdateFluidFlowResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.UpdateFluidFlowResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFlow();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.smartcore.bos.FluidFlow.serializeBinaryToWriter
    );
  }
};


/**
 * optional FluidFlow flow = 1;
 * @return {?proto.smartcore.bos.FluidFlow}
 */
proto.smartcore.bos.UpdateFluidFlowResponse.prototype.getFlow = function() {
  return /** @type{?proto.smartcore.bos.FluidFlow} */ (
    jspb.Message.getWrapperField(this, proto.smartcore.bos.FluidFlow, 1));
};


/**
 * @param {?proto.smartcore.bos.FluidFlow|undefined} value
 * @return {!proto.smartcore.bos.UpdateFluidFlowResponse} returns this
*/
proto.smartcore.bos.UpdateFluidFlowResponse.prototype.setFlow = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.bos.UpdateFluidFlowResponse} returns this
 */
proto.smartcore.bos.UpdateFluidFlowResponse.prototype.clearFlow = function() {
  return this.setFlow(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.UpdateFluidFlowResponse.prototype.hasFlow = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.bos.DescribeFluidFlowRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.bos.DescribeFluidFlowRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.bos.DescribeFluidFlowRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.DescribeFluidFlowRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
name: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.bos.DescribeFluidFlowRequest}
 */
proto.smartcore.bos.DescribeFluidFlowRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.bos.DescribeFluidFlowRequest;
  return proto.smartcore.bos.DescribeFluidFlowRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.bos.DescribeFluidFlowRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.bos.DescribeFluidFlowRequest}
 */
proto.smartcore.bos.DescribeFluidFlowRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.bos.DescribeFluidFlowRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.bos.DescribeFluidFlowRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.bos.DescribeFluidFlowRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.DescribeFluidFlowRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.smartcore.bos.DescribeFluidFlowRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.smartcore.bos.DescribeFluidFlowRequest} returns this
 */
proto.smartcore.bos.DescribeFluidFlowRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.bos.FluidFlowSupport.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.bos.FluidFlowSupport.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.bos.FluidFlowSupport} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.FluidFlowSupport.toObject = function(includeInstance, msg) {
  var f, obj = {
resourceSupport: (f = msg.getResourceSupport()) && types_info_pb.ResourceSupport.toObject(includeInstance, f),
flowRateUnit: jspb.Message.getFieldWithDefault(msg, 2, ""),
driveFrequencyUnit: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.bos.FluidFlowSupport}
 */
proto.smartcore.bos.FluidFlowSupport.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.bos.FluidFlowSupport;
  return proto.smartcore.bos.FluidFlowSupport.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.bos.FluidFlowSupport} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.bos.FluidFlowSupport}
 */
proto.smartcore.bos.FluidFlowSupport.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new types_info_pb.ResourceSupport;
      reader.readMessage(value,types_info_pb.ResourceSupport.deserializeBinaryFromReader);
      msg.setResourceSupport(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFlowRateUnit(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDriveFrequencyUnit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.bos.FluidFlowSupport.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.bos.FluidFlowSupport.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.bos.FluidFlowSupport} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.bos.FluidFlowSupport.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResourceSupport();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      types_info_pb.ResourceSupport.serializeBinaryToWriter
    );
  }
  f = message.getFlowRateUnit();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDriveFrequencyUnit();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional smartcore.types.ResourceSupport resource_support = 1;
 * @return {?proto.smartcore.types.ResourceSupport}
 */
proto.smartcore.bos.FluidFlowSupport.prototype.getResourceSupport = function() {
  return /** @type{?proto.smartcore.types.ResourceSupport} */ (
    jspb.Message.getWrapperField(this, types_info_pb.ResourceSupport, 1));
};


/**
 * @param {?proto.smartcore.types.ResourceSupport|undefined} value
 * @return {!proto.smartcore.bos.FluidFlowSupport} returns this
*/
proto.smartcore.bos.FluidFlowSupport.prototype.setResourceSupport = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.bos.FluidFlowSupport} returns this
 */
proto.smartcore.bos.FluidFlowSupport.prototype.clearResourceSupport = function() {
  return this.setResourceSupport(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.bos.FluidFlowSupport.prototype.hasResourceSupport = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string flow_rate_unit = 2;
 * @return {string}
 */
proto.smartcore.bos.FluidFlowSupport.prototype.getFlowRateUnit = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.smartcore.bos.FluidFlowSupport} returns this
 */
proto.smartcore.bos.FluidFlowSupport.prototype.setFlowRateUnit = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string drive_frequency_unit = 3;
 * @return {string}
 */
proto.smartcore.bos.FluidFlowSupport.prototype.getDriveFrequencyUnit = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.smartcore.bos.FluidFlowSupport} returns this
 */
proto.smartcore.bos.FluidFlowSupport.prototype.setDriveFrequencyUnit = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


goog.object.extend(exports, proto.smartcore.bos);
