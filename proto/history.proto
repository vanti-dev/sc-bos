syntax = "proto3";

package smartcore.bos;

option go_package = "github.com/vanti-dev/sc-bos/pkg/gen";

import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";
import "types/time/period.proto";
import "traits/air_temperature.proto";
import "traits/electric.proto";
import "traits/occupancy_sensor.proto";
import "traits/air_quality_sensor.proto";
import "meter.proto";

// HistoryAdminApi provides remote access to the history store.
service HistoryAdminApi {
  rpc CreateHistoryRecord(CreateHistoryRecordRequest) returns (HistoryRecord);
  rpc ListHistoryRecords(ListHistoryRecordsRequest) returns (ListHistoryRecordsResponse);
}

// HistoryRecord is a generic record of a device's state at a point in time.
// Prefer using trait specific record types where possible.
message HistoryRecord {
  string id = 1;
  string source = 2;
  google.protobuf.Timestamp create_time = 3;
  bytes payload = 4;

  message Query {
    oneof source {
      string source_equal = 1;
    }
    // The bounding records to select: from_record <= record < to_record.
    // ID or create_time (in that order) will be used for result selection.
    HistoryRecord from_record = 10;
    HistoryRecord to_record = 11;
  }
}

message CreateHistoryRecordRequest {
  string name = 1;
  // The record to create.
  // The id and create_time fields must be absent.
  HistoryRecord record = 2;
}

message ListHistoryRecordsRequest {
  string name = 1;
  // The maximum number of records to return.
  // The service may return fewer than this value.
  // If unspecified, at most 50 items will be returned.
  // The maximum value is 1000; values above 1000 will be coerced to 1000.
  int32 page_size = 2;
  // A page token, received from a previous `ListHistoryRecords` call.
  // Provide this to retrieve the subsequent page.
  string page_token = 3;
  // Specify the order of the returned records.
  // The default is `create_time asc` - aka oldest record first.
  // The format is `field_name [asc|desc]`, with asc being the default.
  // Only `create_time` is supported.
  string order_by = 5;

  HistoryRecord.Query query = 4;

}

message ListHistoryRecordsResponse {
  repeated HistoryRecord records = 1;

  // A token, which can be sent as `page_token` to retrieve the next page.
  // If this field is omitted, there are no subsequent pages.
  string next_page_token = 2;
  // If non-zero this is the total number of records matched by the query.
  // This may be an estimate.
  int32 total_size = 3;
}


// AirTemperatureHistory provides access to historical records for smartcore.traits.AirTemperatureApi service resources.
service AirTemperatureHistory {
  rpc ListAirTemperatureHistory(ListAirTemperatureHistoryRequest) returns (ListAirTemperatureHistoryResponse);
}

message AirTemperatureRecord {
  smartcore.traits.AirTemperature air_temperature = 1;
  google.protobuf.Timestamp record_time = 2;
}

message ListAirTemperatureHistoryRequest {
  string name = 1;
  smartcore.types.time.Period period = 2;

  // Fields to fetch relative to the AirTemperatureRecord type
  google.protobuf.FieldMask read_mask = 3;
  // The maximum number of devices to return.
  // The service may return fewer than this value.
  // If unspecified, at most 50 items will be returned.
  // The maximum value is 1000; values above 1000 will be coerced to 1000.
  int32 page_size = 4;
  // A page token, received from a previous `ListAirTemperatureHistoryResponse` call.
  // Provide this to retrieve the subsequent page.
  string page_token = 5;
  // Specify the order of the returned records.
  // The default is `record_time asc` - aka oldest record first.
  // The format is `field_name [asc|desc]`, with asc being the default.
  // Only `record_time` is supported.
  string order_by = 6;
}

message ListAirTemperatureHistoryResponse {
  repeated AirTemperatureRecord air_temperature_records = 1;

  // A token, which can be sent as `page_token` to retrieve the next page.
  // If this field is omitted, there are no subsequent pages.
  string next_page_token = 2;
  // If non-zero this is the total number of records matched by the query.
  // This may be an estimate.
  int32 total_size = 3;
}


// MeterHistory provides access to historical records for smartcore.box.MeterApi service resources.
service MeterHistory {
  rpc ListMeterReadingHistory(ListMeterReadingHistoryRequest) returns (ListMeterReadingHistoryResponse);
}

message MeterReadingRecord {
  smartcore.bos.MeterReading meter_reading = 1;
  google.protobuf.Timestamp record_time = 2;
}

message ListMeterReadingHistoryRequest {
  string name = 1;
  smartcore.types.time.Period period = 2;

  // Fields to fetch relative to the MeterReadingRecord type
  google.protobuf.FieldMask read_mask = 3;
  // The maximum number of devices to return.
  // The service may return fewer than this value.
  // If unspecified, at most 50 items will be returned.
  // The maximum value is 1000; values above 1000 will be coerced to 1000.
  int32 page_size = 4;
  // A page token, received from a previous `ListMeterReadingHistoryResponse` call.
  // Provide this to retrieve the subsequent page.
  string page_token = 5;
  // Specify the order of the returned records.
  // The default is `record_time asc` - aka oldest record first.
  // The format is `field_name [asc|desc]`, with asc being the default.
  // Only `record_time` is supported.
  string order_by = 6;
}

message ListMeterReadingHistoryResponse {
  repeated MeterReadingRecord meter_reading_records = 1;

  // A token, which can be sent as `page_token` to retrieve the next page.
  // If this field is omitted, there are no subsequent pages.
  string next_page_token = 2;
  // If non-zero this is the total number of records matched by the query.
  // This may be an estimate.
  int32 total_size = 3;
}


// ElectricHistory provides access to historical records for smartcore.traits.ElectricApi service resources.
service ElectricHistory {
  rpc ListElectricDemandHistory(ListElectricDemandHistoryRequest) returns (ListElectricDemandHistoryResponse);
}

message ElectricDemandRecord {
  smartcore.traits.ElectricDemand electric_demand = 1;
  google.protobuf.Timestamp record_time = 2;
}

message ListElectricDemandHistoryRequest {
  string name = 1;
  smartcore.types.time.Period period = 2;

  // Fields to fetch relative to the ElectricDemandRecord type
  google.protobuf.FieldMask read_mask = 3;
  // The maximum number of devices to return.
  // The service may return fewer than this value.
  // If unspecified, at most 50 items will be returned.
  // The maximum value is 1000; values above 1000 will be coerced to 1000.
  int32 page_size = 4;
  // A page token, received from a previous `ListElectricDemandHistoryResponse` call.
  // Provide this to retrieve the subsequent page.
  string page_token = 5;
  // Specify the order of the returned records.
  // The default is `record_time asc` - aka oldest record first.
  // The format is `field_name [asc|desc]`, with asc being the default.
  // Only `record_time` is supported.
  string order_by = 6;
}

message ListElectricDemandHistoryResponse {
  repeated ElectricDemandRecord electric_demand_records = 1;

  // A token, which can be sent as `page_token` to retrieve the next page.
  // If this field is omitted, there are no subsequent pages.
  string next_page_token = 2;
  // If non-zero this is the total number of records matched by the query.
  // This may be an estimate.
  int32 total_size = 3;
}


// OccupancySensorHistory provides access to historical records for smartcore.traits.OccupancySensorApi service resources.
service OccupancySensorHistory {
  rpc ListOccupancyHistory(ListOccupancyHistoryRequest) returns (ListOccupancyHistoryResponse);
}

message OccupancyRecord {
  smartcore.traits.Occupancy occupancy = 1;
  google.protobuf.Timestamp record_time = 2;
}

message ListOccupancyHistoryRequest {
  string name = 1;
  smartcore.types.time.Period period = 2;

  // Fields to fetch relative to the OccupancyRecord type
  google.protobuf.FieldMask read_mask = 3;
  // The maximum number of devices to return.
  // The service may return fewer than this value.
  // If unspecified, at most 50 items will be returned.
  // The maximum value is 1000; values above 1000 will be coerced to 1000.
  int32 page_size = 4;
  // A page token, received from a previous `ListOccupancyHistoryResponse` call.
  // Provide this to retrieve the subsequent page.
  string page_token = 5;
  // Specify the order of the returned records.
  // The default is `record_time asc` - aka oldest record first.
  // The format is `field_name [asc|desc]`, with asc being the default.
  // Only `record_time` is supported.
  string order_by = 6;
}

message ListOccupancyHistoryResponse {
  repeated OccupancyRecord occupancy_records = 1;

  // A token, which can be sent as `page_token` to retrieve the next page.
  // If this field is omitted, there are no subsequent pages.
  string next_page_token = 2;
  // If non-zero this is the total number of records matched by the query.
  // This may be an estimate.
  int32 total_size = 3;
}

// AirQualitySensorHistory provides access to historical records for smartcore.traits.AirQualityApi service resources.
service AirQualitySensorHistory {
  rpc ListAirQualityHistory(ListAirQualityHistoryRequest) returns (ListAirQualityHistoryResponse);
}

message AirQualityRecord {
  smartcore.traits.AirQuality air_quality = 1;
  google.protobuf.Timestamp record_time = 2;
}

message ListAirQualityHistoryRequest {
  string name = 1;
  smartcore.types.time.Period period = 2;

  // Fields to fetch relative to the AirQualityRecord type
  google.protobuf.FieldMask read_mask = 3;
  // The maximum number of devices to return.
  // The service may return fewer than this value.
  // If unspecified, at most 50 items will be returned.
  // The maximum value is 1000; values above 1000 will be coerced to 1000.
  int32 page_size = 4;
  // A page token, received from a previous `ListAirQualityHistoryResponse` call.
  // Provide this to retrieve the subsequent page.
  string page_token = 5;
  // Specify the order of the returned records.
  // The default is `record_time asc` - aka oldest record first.
  // The format is `field_name [asc|desc]`, with asc being the default.
  // Only `record_time` is supported.
  string order_by = 6;
}

message ListAirQualityHistoryResponse {
  repeated AirQualityRecord air_quality_records = 1;

  // A token, which can be sent as `page_token` to retrieve the next page.
  // If this field is omitted, there are no subsequent pages.
  string next_page_token = 2;
  // If non-zero this is the total number of records matched by the query.
  // This may be an estimate.
  int32 total_size = 3;
}
