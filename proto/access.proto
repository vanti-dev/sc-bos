syntax = "proto3";

package smartcore.bos;

option go_package = "github.com/vanti-dev/sc-bos/pkg/gen";

import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";
import "actor.proto";

// AccessApi describes the capability to manage access to a resource.
// This could be a access card reader next to a door, or a barrier at a car park.
service AccessApi {
  rpc GetLastAccessAttempt(GetLastAccessAttemptRequest) returns (AccessAttempt) {}
  rpc PullAccessAttempts(PullAccessAttemptsRequest) returns (stream PullAccessAttemptsResponse) {}

  // todo: rpc CreateActor... to replace axiomxa service
  // todo: rpc GrantAccess for manually granting access to an actor
}

message AccessAttempt {
  enum Grant {
    // The status of the access attempt is unknown.
    GRANT_UNKNOWN = 0;
    // The access attempt was granted.
    GRANTED = 1;
    // The access attempt was denied.
    DENIED = 2;
    // Access is pending a decision.
    PENDING = 3;
    // Access was aborted before being granted or denied.
    // Typically only used following PENDING.
    ABORTED = 4;
    // Access was not granted, happened anyway.
    // For example if someone forced the door open.
    FORCED = 5;
    // Access was granted, but failed for other reasons.
    // For example if the door is stuck
    FAILED = 6;
    // Access was granted, but to the actor before this one.
    // Happens when someone follows another person through a door.
    TAILGATE = 7;
  }
  // Was the access attempt granted or denied.
  Grant grant = 1;
  // A reason for either granting or denying the access attempt.
  // For example "Operator override" or "Unrecognised card".
  string reason = 2;
  // Actor describes the entity attempting to gain access.
  // Optional.
  Actor actor = 3;

  // The time the access attempt was made
  google.protobuf.Timestamp access_attempt_time = 4;
}

message GetLastAccessAttemptRequest {
  // The name of the device to get the last access attempt for.
  string name = 1;
  google.protobuf.FieldMask read_mask = 2;
}

message PullAccessAttemptsRequest {
  // The name of the device to pull access attempts for.
  string name = 1;
  google.protobuf.FieldMask read_mask = 2;
  bool updates_only = 3;
}

message PullAccessAttemptsResponse {
  repeated Change changes = 1;

  message Change {
    string name = 1;
    google.protobuf.Timestamp change_time = 2;
    AccessAttempt access_attempt = 3;
  }
}